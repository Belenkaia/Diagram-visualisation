                         Прогр CONTROL_OF_CRISTALL_CREASER

/*
                                               _
   Ш   Ш  ШШШШШ  ШШШШШ  Ш   Ш  Ш   Ш  Ш   Ш  Ш   Ш
   Ш  Ш   Ш   Ш  Ш      ШШ ШШ  Ш   Ш  Ш  ШШ  Ш  ШШ
   ШШШ    ШШШШШ  ШШШШШ  Ш Ш Ш  ШШШШШ  Ш Ш Ш  Ш Ш Ш
   Ш  Ш   Ш      Ш      Ш   Ш  Ш   Ш  ШШ  Ш  ШШ  Ш
   Ш   Ш  Ш      ШШШШШ  Ш   Ш  Ш   Ш  Ш   Ш  Ш   Ш

 Программа Управления ПО ЦУКМ установки выращивания кристаллов кремния.

   ДАТА:                14.08.2002
   ДАТЫ КОРРЕКЦИИ:
      24.11.2002
         убрано из РЕГ_РОСТА запуск расчета Vроста
      23.11.2002
         Коррекция Этапа Затравливания (был пропущен
         минус при координате затравки, сообщение)
      22.11.03  Зюбин
         Много коррекций, первый проход по этапам РА
         обман населения с измерениями ТДД
         рег_дк(Vз >= 0.0)
      15.06.2005 Зюбин  = этап выращивание шейки
         Коррекция программного сброса Тн,
         Программная интерполяция ЗД_Dкр (безударный переход),
         Программная интерполяция ЗД_Vроста (безударный переход)                                
      23.12.2005 Зюбин  = этап выращивание цилиндра
         Задействован канал заданий регулятора мощности канал 2
         (для кремния не используемый в принципе),
         используется в качестве программируемого изменения 
         задания температуры нагревателя.
         переменные  ЗД_База_РЕГ_РОСТА, ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее;
      25.12.2005
         ЗАМЕЧАНИЯ.
       -1. При работе два раза сообщает о том, что нет касания в контуре 
           расплав-затравка 
      +	0. При контроле натекания тигель вращается против часовой 
           (должен по..(?))
        1. При смене этапа на Затравливание - сообщение не включен 
           РЕГ_ТН -> РР решить с идеологией. (Мнение Ел: вкл. при запуске
           процесса "Стабилизация" с заданием равным фактической Тн на момент
           включения регулятора).
        1'. На этапе затравливание давление меняется в соответствии с ТК...
            на плавке это прривело к смене ЗД_Рнк с 18ммртст на 12 ммртст. 
            Решить вопрос с идеологией.(Мнение Ел:убрать ТК из этапа)
        2. При смене этапа на "стабилизацию расплава" возникает сообщение, 
          о проблемах с касанием расплава (а касание должно быть).
        3. При переходе на выращивание конуса сначала сбрасывается 7 град, 
          а затем восстанавливается. Проблемы с отработкой ТП.
        4. Переход конус-цилиндр, в качестве базы сначала берется правильное 
           значение, а потом, заменяется на устаревшее ТК_... и работает 
           несколько криво.
        4а. НП_VзР_MAX не используется. Можно использовать как ограничение на 
            регулирование. (Мнение Ел: не можно,а нужно!)
        5. 19-30-12. "Включение опроса ВПО". ??   12.26
           Сообщение "Загрузка в основном расплавлена". 19-40-43 ???
           19-42-43 Выключение опроса ВПО - 2 раза??
           Температура на входе ИП2К-К1 в норме - постоянные сообщения 
           с периодичностью от 2-х до 10 секунд...
           22-09-55 - Перегрев воды охлаждения на входе (сообщения идут 
                      подряд).
           Изначально РД - Кп = 0,6, Кд = 20, Ки = 0,0026, Т = 5с
           15-01, сразу после перехода 
                  Кп = 0,4, Кд = 8, Ки = 0,0026, Т = 5с (Зюбин)
           22-32 - Кп->0.6, 
           22-47 - Kd->4
           23-16 Kп = 0,4  
           23-16 Кд = 8
           23-30 Ки = 0.005
           00-13 Ки Р-Роста = 0.1
           00-21 КиРД = 0.01
           00-40 ДельтаVзр_МАХ = 1
           00-42 работа с ВПО
           00-44 КзРР = 0.2
           Настройка регулятора диаметра кристалла 
           Кп = 0.2, Ки = 0.01, Кд = 2, Ткв = 30с

        5'. Механизм коррекции ЗД_W_ИП2К_2К - оператора
        6. Окончили нештатно, т.к. промазали с длиной кристалла.
        7. При отрыве кристалла прекращать вращение не надо, может случиться 
           прострел дендрита от стенки к кристаллу.
        8. После отрыва, тигель опустить немного вниз,
           после чего снизить мощность в течение примерно 1 минуты. 
        9. Вращение кристалла прекратить, вращение тигля прекратить.
        9'. В конце было сообщение, "Работа регулятора невозможна
       10. 
           Охлаждение - 3 часа в протоке (ТП), 
           ВЫК_РРГ, ВЫК_РД,
           Открытие VM14,
           ??? Контроль загрязнения фильтра по времени открытия VM14.
           20 минут откачка, Выключить АВД.
           Контроль натекания по процессу измерения...  ТК_  
           !!! а для этого надо включать У_ВТ3 на этапе охлаждение!!!
           Сказать конец работы. 
           Выйти в РР.




   ПРИМЕЧАНИЯ.
         1. После трансляции  имеем C-файл-ы

----------------------------------------------
 */
{
ТАКТ     10;    /* такт равен 100 миллисекундам */
/*###########################################################*/
/*###########################################################*/
/*#########                     #############################*/
/*#########  ОПИСАНИЕ КОНСТАНТ  #############################*/
/*#########                     #############################*/
/*###########################################################*/
/*###########################################################*/


/*===========================================================*/
/*========= КОНСТАНТЫ ДЛЯ ДОРАБОТКИ =========================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    КОД_НАЧАЛА_НЕ_ВЛИЯЮЩИХ_НА_ПКО_КОНСТАНТ = 10000
/*    СКАЧОК_УРОВНЯ_РАСПЛАВА  /* антиПРОЛИВ РАСПЛАВА, упала буля? */
};

/*===========================================================*/
/*========= ОБЩЕСИСТЕМНЫЕ КОНСТАНТЫ =========================*/
/*===========================================================*/

КОНСТ МАКСИМАЛЬНОЕ_ДЦЕЛОЕ 0x7FFFFFFF;
КОНСТ МАКСИМАЛЬНОЕ_ЦЕЛОЕ      0x7FFF;
КОНСТ МАКСИМАЛЬНОЕ_КЦЕЛОЕ       0x7F;

КОНСТ Т0_1                       0;  /* Константа обеспечивающая паузу в 0.1 сек */
КОНСТ ОДНА_СЕКУНДА              10;  /* Константа обеспечивающая паузу в 1 сек */
КОНСТ ДВЕ_СЕКУНДЫ             2*ОДНА_СЕКУНДА;
КОНСТ ТРИ_СЕКУНДЫ             3*ОДНА_СЕКУНДА;
КОНСТ ПЯТЬ_СЕКУНД             5*ОДНА_СЕКУНДА;
КОНСТ ДЕСЯТЬ_СЕКУНД          10*ОДНА_СЕКУНДА;
КОНСТ ДВАДЦАТЬ_СЕКУНД        20*ОДНА_СЕКУНДА;
КОНСТ ТРИДЦАТЬ_СЕКУНД        30*ОДНА_СЕКУНДА;
КОНСТ ПОЛ_МИНУТЫ             30*ОДНА_СЕКУНДА;
КОНСТ ОДНА_МИНУТА            60*ОДНА_СЕКУНДА;
КОНСТ ДВЕ_МИНУТЫ              2*ОДНА_МИНУТА;
КОНСТ ТРИ_МИНУТЫ              3*ОДНА_МИНУТА;
КОНСТ ПЯТЬ_МИНУТ              5*ОДНА_МИНУТА;
КОНСТ ДЕСЯТЬ_МИНУТ           10*ОДНА_МИНУТА;
КОНСТ ПЯТНАДЦАТЬ_МИНУТ       15*ОДНА_МИНУТА;
КОНСТ ДВАДЦАТЬ_МИНУТ         20*ОДНА_МИНУТА;
КОНСТ ТРИДЦАТЬ_МИНУТ         30*ОДНА_МИНУТА; 
КОНСТ ОДИН_ЧАС               60*ОДНА_МИНУТА;
КОНСТ ДВА_ЧАСА                72000L;
КОНСТ ТРИ_ЧАСА                108000L;

/*===========================================================*/
/*===========================================================*/
/*========= ВНУТРЕННИЕ КОНСТАНТЫ ПРОЦЕССОВ ==================*/
/*===========================================================*/
/*===========================================================*/
КОНСТ NULL               0;

КОНСТ ВКЛ                1;
КОНСТ ВЫКЛ               0;
КОНСТ ЕСТЬ_СТЫКОВКА      1;
КОНСТ НЕТ_СТЫКОВКИ       0;
КОНСТ ЕСТЬ_ВОДА          0;  /* показания реле протока РП1-РП8*/
КОНСТ НЕТ_ВОДЫ           1;
КОНСТ ОТКР               1;
КОНСТ ЗАКР               0;
КОНСТ СРЕДНЕЕ            2;

КОНСТ СРАБОТАЛ           1;
КОНСТ НЕ_СРАБОТАЛ        0;

/* Качество тарировки конца затравки и уровня расплава  */
КОНСТ НЕУД               0;
КОНСТ УДОВЛ              1;
КОНСТ ОТЛ                2;
/* стабилизация расплава по мощности и температуре */
КОНСТ СТАБИЛИЗАЦИЯ_ПО_МОЩНОСТИ      0;
КОНСТ СТАБИЛИЗАЦИЯ_ПО_ТЕМПЕРАТУРЕ   1;

/*===========================================================*/
/*========= КОДЫ РЕЖИМА ИСПОЛНЕНИЯ РА =======================*/
/*===========================================================*/
КОНСТ ПО_ТЕРМИНАТОРАМ               0;
КОНСТ НЕПРЕРЫВНО                    1;

/*===========================================================*/
/*========= КОНСТАНТЫ ОТЖИГА ================================*/
/*===========================================================*/
КОНСТ ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ 0.2; /* мм.рт.ст */
КОНСТ ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ     0.05; /* мм.рт.ст */
КОНСТ ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА            100.0; /*100 Вт*/
КОНСТ ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА            ПЯТЬ_МИНУТ; /* дельта разогрева */
КОНСТ ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС       0.1; /*мм.рт.ст.*/
КОНСТ ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН        0.07; /*мм.рт.ст.*/
КОНСТ ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА   100000.0; /*100 КВт*/
КОНСТ ОТЖИГ_ВРЕМЯ_ОТЖИГА               ОДИН_ЧАС;
КОНСТ ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН    100.0; 
КОНСТ ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН    ОДНА_МИНУТА;

/*===========================================================*/
/*========= КОНСТАНТЫ ТЕРМОСИСТЕМЫ ==========================*/
/*===========================================================*/

КОНСТ ИПН_НУЛЬ                         0; /* ИПН отсутствует */
КОНСТ ИПН_ПТД                          1;
КОНСТ ИПН_ИП2К                         2;

КОНСТ ИП2К_ЧИСЛО_КОНТУРОВ_НЕИЗВЕСТНО   0; /* НП_ТипИП2К, */
КОНСТ ИП2К_С_ОДНИМ_КОНТУРОМ            1; /* НП_ТипИП2К, */
КОНСТ ИП2К_С_ДВУМЯ_КОНТУРАМИ           2; /* НП_ТипИП2К, */

КОНСТ МАК_ДОП_ТЕМП_НАГРЕВАТЕЛЯ       800.0;  /* в градусах */

КОНСТ Т_БАЗОВОЕ_ДТН                 1700.0;
КОНСТ Т_БАЗОВОЕ_ДТР                 1420.0;

КОНСТ N_ИЗМЕРЕНИЙ_ТН_ДЛЯ_РАСЧЕТА_ПОПРАВКИ_СТАБ ОДНА_МИНУТА;

/*===========================================================*/
/*========= КОНСТАНТЫ ГАЗОВАКУУМНОЙ СИСТЕМЫ =================*/
/*===========================================================*/
КОНСТ ДАВЛЕНИЕ_35ММРТСТ 	   35.0;
КОНСТ ДАВЛЕНИЕ_40ММРТСТ         40.0;
КОНСТ ДАВЛЕНИЕ_45ММРТСТ         45.0;

КОНСТ КОНТРОЛЬНОЕ_ДАВЛЕНИЕ_45   30.0; /* Константа соотв. 45 мм рт ст */
КОНСТ КОНТРОЛЬНОЕ_ДАВЛЕНИЕ_40   40.0; /* Константа соотв. 40 мм рт ст */

КОНСТ АТМОСФЕРА                700.0; /* атмосферное давление */

КОНСТ ВРЕМЯ_РАБОТЫ_АГР_ВАКУУМНОГО    6000; /* (мин) Время работы У1 или У2 к моменту 100 ч. */


/*===========================================================*/
/*========= КОНСТАНТЫ СИСТЕМЫ ПЕРЕМЕЩЕНИЙ ===================*/
/*===========================================================*/
КОНСТ ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА          5.0;

КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗР       0.2;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗР      6.0;
КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗУ       1.5;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗУ    100.0;
КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗВ       0.2;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗВ      5.0;
КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТР       0.2;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТР      6.0;
КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТУ       1.5;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТУ    100.0;
КОНСТ ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТВ       0.2;
КОНСТ КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТВ      5.0;


КОНСТ ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ            100.0; /* мм/мин - тарир. по ДП, КВП */
КОНСТ ТОЧНАЯ_СКОРОСТЬ_ЗАТРАВКИ              1.0; /* мм/мин - тарир. по ДП */
КОНСТ МАКСИМАЛЬНЫЙ_ВЫЛЕТ_ЗАТРАВКИ         200.0; /* мм - тарир. по ДП */
КОНСТ МАКСИМАЛЬНАЯ_МАССА_ЗАТРАВКИ_ДП        0.5; /* кг - ограничение тар. по ДП */

КОНСТ ГРУБАЯ_СКОРОСТЬ_ТИГЛЯ               100.0; /* мм/мин - КВП, КНП */
КОНСТ ЧИСЛО_ТОЧЕК_ТИГЛЯ                   100;   /* МАКС число элементов в массиве описания тигля */


КОНСТ ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ               1.0/60.0; /* минут (1000 мс) ЗАТ_УК */
КОНСТ ПЕРИОД_ЦИКЛА                          0.1/60.0; /* минут (100 мс)  */

КОНСТ МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Vз   45600.0;   /* мм/мин^2 = 760 мм/мин за сек */
КОНСТ МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз    МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Vз*ПЕРИОД_ЦИКЛА;    /* 760 мм/мин^2 ЗАТ_УК */

КОНСТ МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Wз   12.0;    /* 12 об/мин^2 = 0,2 об/мин за сек * 60 */
КОНСТ МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз    МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Wз*ПЕРИОД_ЦИКЛА;    /* 760 мм/мин^2 ЗАТ_УК */

КОНСТ МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Vт   18000.0;    /* мм/мин^2 = 300 мм/мин за сек */
КОНСТ МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт    МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Vт*ПЕРИОД_ЦИКЛА;    /* 760 мм/мин^2 ЗАТ_УК */

КОНСТ МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Wт   1200.0;    /* об/мин^2 = 20 об/мин за сек   ТИГ_ВР */
КОНСТ МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт    МАКСИМАЛЬНОЕ_УСКОРЕНИЕ_Wт*ПЕРИОД_ЦИКЛА;    /* 760 мм/мин^2 ЗАТ_УК */

КОНСТ ОБЛАСТЬ_ЗАПРЕТА_ВРАЩЕНИЯ_ЗАТРАВКИ     500.0;

КОНСТ МАКСИМАЛЬНОЕ_РАССОГЛАСОВАНИЕ_УРОВНЯ   3.0;

/*===========================================================*/
/*========= КОНСТАНТЫ СИСТЕМЫ ОХЛАЖДЕНИЯ ====================*/
/*===========================================================*/
КОНСТ ТЕМПЕРАТУРА_ВК_70         70.0; /* Константа соотв. Твк = 70 град С */
КОНСТ ТЕМПЕРАТУРА_ВК_50         50.0; /* Константа соотв. Твк = 50 град С */
КОНСТ ТЕМПЕРАТУРА_ВК_30         35.0; /* Константа соотв. Твк = 35 град С */

/*===========================================================*/
/*========= КОНСТАНТЫ СИСТЕМЫ ОХЛАЖДЕНИЯ ИП==================*/
/*===========================================================*/
/* ИП_ЛИТ*/
КОНСТ НИЖ_ГРАН_ПОТОКА_ОХЛ_ЖИДК_ИП       25.0;   /* Константа соотв. 0 л/мин  */
КОНСТ ВРХ_ГРАН_ПОТОКА_ОХЛ_ЖИДК_ИП       55.0;  /* Константа соотв. 80 л/мин */

КОНСТ НИЖ_ГРАН_ОХЛ_ЖИДК_НА_ВХОДЕ_ИП     10.0;   /* Константа соотв. 10 град С */
КОНСТ ВРХ_ГРАН_ОХЛ_ЖИДК_НА_ВХОДЕ_ИП     50.0;   /* Константа соотв. 50 град С */

КОНСТ НИЖ_ГРАН_ОХЛ_ЖИДК_НА_ВЫХОДЕ_ИП     0.0;  /* Константа соотв. 0 град С */
КОНСТ ВРХ_ГРАН_ОХЛ_ЖИДК_НА_ВЫХОДЕ_ИП   100.0;  /* Константа соотв.100 град С*/

КОНСТ ВРХ_ГРАН_R_ИЗОЛЯЦИИ  64000.0;   /* Константа соотв. 64КОм */


КОНСТ Pi                               3.1415;
КОНСТ КОЭФ_ПЛОТНОСТИ_ЖД_SI             0.00000253; /*кг/мм3 */
КОНСТ КОЭФ_ПЛОТНОСТИ_ТВ_SI             0.00000233; /*кг/мм3 при 20 градусах цельсия*/
КОНСТ КОЭФ_ПЛОТНОСТИ_ТВ_ЖД_SI КОЭФ_ПЛОТНОСТИ_ТВ_SI/КОЭФ_ПЛОТНОСТИ_ЖД_SI;
КОНСТ КОЭФ_Pi_Ro_ТВЕРДОГО_КРЕМНИЯ    Pi*КОЭФ_ПЛОТНОСТИ_ТВ_SI;

КОНСТ РАССОГЛ_ОКОНЧАНИЯ_ПЕРЕХОДА_КОНУС_ЦИЛ 0.3; /* переход конус-цил считается завершенным */

/*===========================================================*/

КОНСТ ТАЙМАУТ_НА_ДИАГНОСТИКУ_РАЗРЫВА_СВЯЗИ_С_ПИВ 5*ОДНА_СЕКУНДА;



КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД 6*ДЕСЯТЬ_СЕКУНД; 
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ  ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП  ДЕСЯТЬ_СЕКУНД;
КОНСТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ ДЕСЯТЬ_СЕКУНД;

КОНСТ ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ 6;  /* максимальное число, в буфере привода, когда можно посылать */

КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ЗР 100;
КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ЗУ 100;
КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ЗВ 100;
КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ТР 100;
КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ТУ 100;
КОНСТ ТАЙМАУТ_НА_ОСТАНОВ_ПРИВОДА_ТВ 100;

КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР 200;
КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ 200;
КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ 200;
КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР 200;
КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ 200;
КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ 200;

КОНСТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП          200;

КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ           ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ВПО           5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТДД           5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДУ            5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТН           5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТР           5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ИП            5*ОДНА_СЕКУНДА;
КОНСТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ      5*ОДНА_СЕКУНДА;

КОНСТ ТАЙМАУТ_НА_ПЕРЕДАЧУ_ДАННЫХ_В_ТДД      5*ОДНА_СЕКУНДА;

КОНСТ Т2                       500;  /* (50 сек)Время срабатывания VM14 */

КОНСТ Т_ДВН_НВР                20;  /* (2 сек) Пауза между выкл. ДВН и выкл. НВР */
КОНСТ Т_НА_НАТЕКАНИЕ_ВОЗДУХА_В_АВД ДЕСЯТЬ_СЕКУНД; /* для натекания воздуха при выключении */


/*===========================================================*/
/*======= ДИАПАЗОН ИЗМЕНЕНИЯ НАСТРОЕЧНЫХ ПАРАМЕТРОВ =========*/
/*===========================================================*/
/*=====        данные пока - с потолка  =====================*/
/*                                                           */
/*КОНСТ МИН_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1   нету             ; */
/*КОНСТ МАК_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1   нету             ; */
/* КОНСТ МИН_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2                 300.0; /* мм */
/* КОНСТ МАК_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2                 800.0; /* мм */


/*КОНСТ МИН_НП_Lз_ОТ_КВП_ДО_КНП                            ; */
/*КОНСТ МАК_НП_Lз_ОТ_КВП_ДО_КНП                            ; */
/*КОНСТ МИН_НП_СкоростьЗаVзПослеОтрываКристалла            ; */
/*КОНСТ МАК_НП_СкоростьЗаVзПослеОтрываКристалла            ; */
/*КОНСТ МИН_НП_МаксимальнаяVзР                             ; */
/*КОНСТ МАК_НП_МаксимальнаяVзР                             ; */
/* КОНСТ МИН_НП_Lз_ОТ_КВП_ДО_ДП_Lппз                   1500.0 ; /* мм */
/* КОНСТ МАК_НП_Lз_ОТ_КВП_ДО_ДП_Lппз                   2020.0 ; /* мм */


/*КОНСТ МИН_НП_Lт_ОТ_КНП_ДО_КВП                            ; */
/*КОНСТ МАК_НП_Lт_ОТ_КНП_ДО_КВП                            ; */

/*  КОНСТ МИН_НП_ОбъемВакПолости_V                       1000.0 ; /*литр */
/*  КОНСТ МАК_НП_ОбъемВакПолости_V                       2000.0 ; /*литр */


/*КОНСТ МИН_НП_ВремяПереходногоПроцессаQгаза               ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаQгаза               ; */
/*КОНСТ МИН_НП_ПогрешностьQгаза                            ; */
/*КОНСТ МАК_НП_ПогрешностьQгаза                            ; */
/*КОНСТ МИН_НП_Pпор                                        ; */
/*КОНСТ МАК_НП_Pпор                                        ; */
/*КОНСТ МИН_НП_КОЭФ_НА_ОТКР                                ; */
/*КОНСТ МАК_НП_КОЭФ_НА_ОТКР                                ; */
/*КОНСТ МИН_НП_КОЭФ_НА_ЗАКР                                ; */
/*КОНСТ МАК_НП_КОЭФ_НА_ЗАКР                                ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаPнк                 ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаPнк                 ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаWптд                ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаWптд                ; */
/*КОНСТ МИН_НП_Кп_Wптд                                     ; */
/*КОНСТ МАК_НП_Кп_Wптд                                     ; */
/*КОНСТ МИН_НП_ТипИПН                                      ; */
/*КОНСТ МАК_НП_ТипИПН                                      ; */
/*КОНСТ МИН_НП_Пауза_Wптд                                  ; */
/*КОНСТ МАК_НП_Пауза_Wптд                                  ; */
/*КОНСТ МИН_НП_ПогрешностьWптд                             ; */
/*КОНСТ МАК_НП_ПогрешностьWптд                             ; */
/*КОНСТ МИН_НП_Iптд_МАХ                                    ; */
/*КОНСТ МАК_НП_Iптд_МАХ                                    ; */
/*КОНСТ МИН_НП_Wипн_К1_МАХ                                    ; */
/*КОНСТ МАК_НП_Wипн_К1_МАХ                                    ; */
/*КОНСТ МИН_НП_ДелтаW_Разогрева                            ; */
/*КОНСТ МАК_НП_ДелтаW_Разогрева                            ; */
/*КОНСТ МИН_НП_ДелтаВремениРазогрева                       ; */
/*КОНСТ МАК_НП_ДелтаВремениРазогрева                       ; */
/*КОНСТ МИН_НП_Тн_MAX                                      ; */
/*КОНСТ МАК_НП_Тн_MAX                                      ; */
/*КОНСТ МИН_НП_Кп_Тн                                       ; */
/*КОНСТ МАК_НП_Кп_Тн                                       ; */
/*КОНСТ МИН_НП_Кд_Тн                                       ; */
/*КОНСТ МАК_НП_Кд_Тн                                       ; */
/*КОНСТ МИН_НП_Ки_Тн                                       ; */
/*КОНСТ МАК_НП_Ки_Тн                                       ; */
/*КОНСТ МИН_НП_Кз_Тн                                       ; */
/*КОНСТ МАК_НП_Кз_Тн                                       ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаТн                  ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаТн                  ; */
/*КОНСТ МИН_НП_ПогрешностьТн                               ; */
/*КОНСТ МАК_НП_ПогрешностьТн                               ; */
/*КОНСТ МИН_НП_Пауза_Тн                                    ; */
/*КОНСТ МАК_НП_Пауза_Тн                                    ; */
/*КОНСТ МИН_НП_Кп_Тр                                       ; */
/*КОНСТ МАК_НП_Кп_Тр                                       ; */
/*КОНСТ МИН_НП_Кд_Тр                                       ; */
/*КОНСТ МАК_НП_Кд_Тр                                       ; */
/*КОНСТ МИН_НП_Ки_Тр                                       ; */
/*КОНСТ МАК_НП_Ки_Тр                                       ; */
/*КОНСТ МИН_НП_Кз_Тр                                       ; */
/*КОНСТ МАК_НП_Кз_Тр                                       ; */
/*КОНСТ МИН_НП_Пауза_Тр                                    ; */
/*КОНСТ МАК_НП_Пауза_Тр                                    ; */
/*КОНСТ МИН_НП_Тр_MAX                                      ; */
/*КОНСТ МАК_НП_Тр_MAX                                      ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаТр                  ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаТр                  ; */
/*КОНСТ МИН_НП_ПогрешностьТр                               ; */
/*КОНСТ МАК_НП_ПогрешностьТр                               ; */
/*КОНСТ МИН_НП_ДелтаТр_MAX                                 ; */
/*КОНСТ МАК_НП_ДелтаТр_MAX                                 ; */
/*КОНСТ МИН_НП_ПоправкаVтР_Нур                             ; */
/*КОНСТ МАК_НП_ПоправкаVтР_Нур                             ; */
/*                                                           */
/*КОНСТ МИН_НП_РАБ_УСК_ЗР                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ЗР                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ЗР                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ЗР                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ЗР                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ЗР                                  ; */
/*КОНСТ МИН_НП_РАБ_УСК_ЗУ                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ЗУ                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ЗУ                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ЗУ                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ЗУ                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ЗУ                                  ; */
/*КОНСТ МИН_НП_РАБ_УСК_ЗВ                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ЗВ                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ЗВ                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ЗВ                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ЗВ                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ЗВ                                  ; */
/*КОНСТ МИН_НП_РАБ_УСК_ТР                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ТР                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ТР                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ТР                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ТР                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ТР                                  ; */
/*КОНСТ МИН_НП_РАБ_УСК_ТУ                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ТУ                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ТУ                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ТУ                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ТУ                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ТУ                                  ; */
/*КОНСТ МИН_НП_РАБ_УСК_ТВ                                  ; */
/*КОНСТ МАК_НП_РАБ_УСК_ТВ                                  ; */
/*КОНСТ МИН_НП_КОЭФ_А_ТВ                                   ; */
/*КОНСТ МАК_НП_КОЭФ_А_ТВ                                   ; */
/*КОНСТ МИН_НП_АВР_ТОР_ТВ                                  ; */
/*КОНСТ МАК_НП_АВР_ТОР_ТВ                                  ; */
/*                                                           */
/*КОНСТ МИН_НП_MIN_ДУ_Hур                                  ; */
/*КОНСТ МАК_НП_MIN_ДУ_Hур                                  ; */
/*КОНСТ МИН_НП_MAX_ДУ_Hур                                  ; */
/*КОНСТ МАК_НП_MAX_ДУ_Hур                                  ; */
/*КОНСТ МИН_НП_MIN_ДУДД_Hур                                ; */
/*КОНСТ МАК_НП_MIN_ДУДД_Hур                                ; */
/*КОНСТ МИН_НП_MAX_ДУДД_Hур                                ; */
/*КОНСТ МАК_НП_MAX_ДУДД_Hур                                ; */
/*КОНСТ МИН_НП_Кп_ДУ_Hур                                   ; */
/*КОНСТ МАК_НП_Кп_ДУ_Hур                                   ; */
/*КОНСТ МИН_НП_Кп_ДУДД_Hур                                 ; */
/*КОНСТ МАК_НП_Кп_ДУДД_Hур                                 ; */
/*КОНСТ МИН_НП_ПредупредительныйHур                        ; */
/*КОНСТ МАК_НП_ПредупредительныйHур                        ; */
/*КОНСТ МИН_НП_АварийнаяОшибкаHур                          ; */
/*КОНСТ МАК_НП_АварийнаяОшибкаHур                          ; */
/*КОНСТ МИН_НП_ДелтаVзРС_МАХ                             ; */
/*КОНСТ МАК_НП_ДелтаVзРС_МАХ                             ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаDкр                 ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаDкр                 ; */
/*КОНСТ МИН_НП_ПогрешностьDкр                              ; */
/*КОНСТ МАК_НП_ПогрешностьDкр                              ; */
/*КОНСТ МИН_НП_Пауза_Dкр                                   ; */
/*КОНСТ МАК_НП_Пауза_Dкр                                   ; */
/*КОНСТ МИН_НП_Кп_Vроста                                   ; */
/*КОНСТ МАК_НП_Кп_Vроста                                   ; */
/*КОНСТ МИН_НП_Кд_Vроста                                   ; */
/*КОНСТ МАК_НП_Кд_Vроста                                   ; */
/*КОНСТ МИН_НП_Ки_Vроста                                   ; */
/*КОНСТ МАК_НП_Ки_Vроста                                   ; */
/*КОНСТ МИН_НП_Кз_Vроста                                   ; */
/*КОНСТ МАК_НП_Кз_Vроста                                   ; */
/*КОНСТ МИН_НП_Пауза_Vроста                                ; */
/*КОНСТ МАК_НП_Пауза_Vроста                                ; */
/*КОНСТ МИН_НП_ВремяОсредненияVзVроста                     ; */
/*КОНСТ МАК_НП_ВремяОсредненияVзVроста                     ; */
/*КОНСТ МИН_НП_VзР_MAX                                 ; */
/*КОНСТ МАК_НП_VзР_MAX                                 ; */
/*КОНСТ МИН_НП_ДелтаТн_MAX                                 ; */
/*КОНСТ МАК_НП_ДелтаТн_MAX                                 ; */
/*КОНСТ МИН_НП_Пауза_РЕГ_РОСТА                             ; */
/*КОНСТ МАК_НП_Пауза_РЕГ_РОСТА                             ; */
/*КОНСТ МИН_НП_ВремяПереходногоПроцессаVроста              ; */
/*КОНСТ МАК_НП_ВремяПереходногоПроцессаVроста              ; */
/*КОНСТ МИН_НП_ПогрешностьVроста                           ; */
/*КОНСТ МАК_НП_ПогрешностьVроста                           ; */




/*===========================================================*/
/*========= ДИАПАЗОН ИЗМЕНЕНИЯ ЗАДАНИЙ РЕГУЛЯТОРОВ===========*/
/*===========================================================*/
КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РГ            0.01;   /* л/час  */ 
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РГ        6000.0;    /* л/час  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д             0.001; /* мм.рт.ст  */ 
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д           45.0;    /* мм.рт.ст  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1            0.0;    /* вт  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1      180000.0;    /* вт  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2            0.0;    /* вт  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2      180000.0;    /* вт  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_БАЗА_РЕГ_РОСТА          0.0;    /* вт  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_БАЗА_РЕГ_РОСТА      1000.0;    /* град. вт  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН          800.0;    /* градусов цельсия  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН        2000.0;    /* градусов цельсия  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТР         1000.0;    /* градусов цельсия  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТР        1800.0;    /* градусов цельсия  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РОСТА        0.05;    /* мм/мин  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РОСТА        8.0;    /* мм/мин  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_УР_hзад          -20.0;    /* От -20 мм до + 20 мм от ПНУР */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_УР_hзад          20.0;    /* От -20 мм до + 20 мм от ПНУР    */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ДК            3.0;    /* мм  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ДК         250.0;    /* мм  */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР          -8.0;    /* 0.0 мм/мин  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР          8.0;    /* 8 мм/мин   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ        -760.0;    /* 0 мм/мин    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ        760.0;    /* 760 мм/мин   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xз        -2900.0;    /* 0.0 мм    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xз           0.0;    /* 2900 мм   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз          -50.0;    /* 0.0 об/мин    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз          50.0;    /* 50 об/мин   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР          -0.7;    /* 0.0 мм/мин  */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР          0.7;    /* 0.7  мм/мин   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ        -200.0;    /* 0.0 мм/мин    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ        190.0;    /* 200 мм/мин   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xт            0.0;    /* 0.0 мм    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xт         400.0;    /* 400 мм   */

КОНСТ МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт          -30.0;    /* 0.0 об/мин    */
КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт          30.0;    /* об/мин   */

/*===========================================================*/
/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ КОМАНД ПОСТУПАЮЩИЕ ОТ ПИВ ==================*/
/*===========================================================*/
/*===========================================================*/
/*===========================================================*/

/*************************************************************
*      СТРАТЕГИЯ ИДЕНТИФИКАЦИИ КОДОВ СОБЫТИЙ
*  Сокращения
*  Устройства
*  ПК  - Программируемый Контроллер
*  ПИВ - Программа Интерактивного Взаимодействия
*  ВПО - Выносной Пульт Оператора
*  ДТН - Датчик Температуры Нагревателя
*  ДТР - Датчик Температуры Расплава
*  ТДД - Телевизионный Датчик Диаметра
*  ДУ  - Датчик Уровня
*  ИП  - Источник Питания
*  ИП2К - Источник Питания От Литвинцева
*  ПТД  - Преобразователь тиристорно-диодный
*  Для упрощения понимания идентификаторы кодов событий
*  могут включать префиксы с информацией об
*  отправителе и получателе, например
*    ПК_ПИВ_VE1_ОТКРЫТ
*    (т.е. это сообщение посылается ПК к ПИВ)
*
*
*
*
*
*/

/*===========================================================*/
/*========= КОМАНДЫ ИЗМЕНЕНИЯ РЕЖИМА ========================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    РЕЖИМ_ИНИЦИАЛИЗАЦИИ = 1,
    РЕЖИМ_РР,
    РЕЖИМ_ОТМЕНА        ,
    РЕЖИМ_КРП           ,
    РЕЖИМ_РА            ,
    РЕЖИМ_КОНЕЦ_РАБОТЫ  ,
    РЕЖИМ_ФОРСАЖ        ,
    РЕЖИМ_ТАРИРОВКА     ,
    РЕЖИМ_ОТЖИГ_ТУ      ,  /* добавлено- */    /* отжиг теплового узла */
    РЕЖИМ_ДВК,             /*досрочное выращивание кристалла */

    ОТМЕНА_ОТМЕНЫ       ,
    КОНЕЦ_ИНИЦИАЛИЗАЦИИ ,
    ЗАПУСК_ЭТАПА_В_РЕЖИМЕ_РА,
    КОНЕЦ_РАБОТЫ_Д2            /* сообщение - Можно Выключать Питание ЦУКМ */
};

/*===========================================================*/
/*========= КОМАНДЫ РЕЖИМА РР ===============================*/
/*===========================================================*/

/* КЛАПАНЫ */

ПЕРЕЧИСЛЕНИЕ {
     КОМАНДА_РР_1_ГВС = КОНЕЦ_РАБОТЫ_Д2 + 1,
     ВКЛ_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС = КОМАНДА_РР_1_ГВС,
     ВЫК_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС,
     ОТКР_НАТ_АВД1_VE1      ,
     ЗАКР_НАТ_АВД1_VE1      ,
     ОТКР_НАТ_АВД2_VE2      ,
     ЗАКР_НАТ_АВД2_VE2      ,
     ОТКР_АВД1_МО_НК_VE3    ,
     ЗАКР_АВД1_МО_НК_VE3    ,
     ОТКР_АВД2_МО_НК_VE4    ,
     ЗАКР_АВД2_МО_НК_VE4    ,
     ОТКР_АВД1_МО_ВК_VE5    ,
     ЗАКР_АВД1_МО_ВК_VE5    ,
     ОТКР_АВД2_МО_ВК_VE6    ,
     ЗАКР_АВД2_МО_ВК_VE6    ,
     ОТКР_БПК_VE7           ,
     ЗАКР_БПК_VE7           ,
     ОТКР_ПРОДУВКА_VE8      ,
     ЗАКР_ПРОДУВКА_VE8      ,
     ОТКР_НАДДУВ_ВК_VE9        ,
     ЗАКР_НАДДУВ_ВК_VE9        ,
     ОТКР_НАДДУВ_НК_VE12       ,
     ЗАКР_НАДДУВ_НК_VE12       ,
     ОТКР_ВЫХЛОП_АВД2_VE10  ,
     ЗАКР_ВЫХЛОП_АВД2_VE10  ,
     ОТКР_ВЫХЛОП_АВД1_VE11  ,
     ЗАКР_ВЫХЛОП_АВД1_VE11  ,
     ОТКР_VM14              ,
     ЗАКР_VM14              ,
     ВЫК_VM14              ,
     ВКЛ_АВД1               ,
     ВКЛ_АВД2               ,
     ВЫК_АВД1              ,
     ВЫК_АВД2              ,
     ПЕРЕКЛЮЧИТЬ_АВД        ,
     ВКЛ_АВД1_НК            ,
     ВКЛ_АВД2_НК            ,
     ВКЛ_АВД1_ВК            ,
     ВКЛ_АВД2_ВК            ,
     РАЗГЕРМЕТИЗАЦИЯ_ВК,
     ВАКУУМИРОВАНИЕ_ВК,
     ОСТАНОВ_ШЛЮЗОВАНИЯ,
     КОМАНДА_РР_N_ГВС = ОСТАНОВ_ШЛЮЗОВАНИЯ
};

/* регуляторы */
ПЕРЕЧИСЛЕНИЕ {
     КОМАНДА_1_РЕГУЛЯТОРЫ = КОМАНДА_РР_N_ГВС + 1,
     ВКЛ_РЕГ_РГ = КОМАНДА_1_РЕГУЛЯТОРЫ,
     ВЫК_РЕГ_РГ              ,
     ВКЛ_РЕГ_Д               ,
     ВЫК_РЕГ_Д               ,

     ВКЛ_РЕГ_W_ИПН_К1        ,
     ВКЛ_РЕГ_ТН              ,
     ВКЛ_РЕГ_ТР              ,
     ВКЛ_РЕГ_РОСТА           ,
     ВЫК_РЕГ_ТН              ,
     ВЫК_РЕГ_ТР              ,
     ВЫК_РЕГ_РОСТА           ,

     ВЫК_ИПН_К1              ,

     ВКЛ_РЕГ_W_ИПН_К2        ,
     ВЫК_ИПН_К2              ,

     ВЫК_ИПН                 ,

     ВКЛ_РЕГ_УР              ,
     ВЫК_РЕГ_УР              ,
     ВКЛ_РЕГ_ДК              ,
     ВЫК_РЕГ_ДК              ,

     ЗАТ_РС                  ,   /* ВКЛ_РЕГ_VзР       */
     ЗАТ_РК                  ,   /* ВКЛ_РЕГ_XзР       */
     ЗАТ_УС                  ,   /* ВКЛ_РЕГ_VзУ       */
     ЗАТ_УК                  ,   /* ВКЛ_РЕГ_XзУ       */
     ВКЛ_РЕГ_ЗАТ_УК              ,   /* для отработки ТП  */
     ВЫК_ЗАТРАВКУ            ,   /* ВЫК_ЗАТРАВКУ      */
     ТИГ_РС                  ,   /* ВКЛ_РЕГ_VтР       */
     ТИГ_РК                  ,   /* ВКЛ_РЕГ_XтР       */
     ТИГ_УС                  ,   /* ВКЛ_РЕГ_VтУ       */
     ТИГ_УК                  ,   /* ВКЛ_РЕГ_XтУ       */
     ВКЛ_РЕГ_ТИГ_УК              ,   /* для отработки ТП  */
     ВЫК_ТИГЕЛЬ              ,   /* ВЫК_ТИГЕЛЬ        */
     ЗАТ_ВР                  ,   /* ВКЛ_РЕГ_Wз        */
     ЗАТ_УГОЛ                ,   /* ВКЛ_РЕГ_Wз_УГОЛ   */
     ВЫК_ЗАТ_ВР              ,   /* ВЫК_РЕГ_Wз        */
     ТИГ_ВР                  ,   /* ВКЛ_РЕГ_Wт        */
     ТИГ_УГОЛ                ,   /* ВКЛ_РЕГ_Wт_УГОЛ   */
     ВЫК_ТИГ_ВР              ,   /* ВЫК_РЕГ_Wт        */
     КОМАНДА_N_РЕГУЛЯТОРЫ = ВЫК_ТИГ_ВР
};

/*== КОДЫ КОМАНД ОТ ПИВ ОТНОСИТЕЛЬНО ВПО И ПРОЧЕЕ ===*/

ПЕРЕЧИСЛЕНИЕ {
     ВКЛ_ВПО = КОМАНДА_N_РЕГУЛЯТОРЫ + 1 ,  /* только от пив */
     ВЫК_ВПО,                     /* только от пив */
     ВЫК_БЛОКИРОВКУ_ВК_НК
};

/*== СИСТЕМНЫЕ КОДЫ СОБЫТИЙ        ===*/

ПЕРЕЧИСЛЕНИЕ {
     КОМАНДА_1_СИСТЕМНАЯ = ВЫК_БЛОКИРОВКУ_ВК_НК + 1,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ПИВ = КОМАНДА_1_СИСТЕМНАЯ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ПК            , /* сооб/команда - инициализировать устройство */
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ВПО           ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДТР           ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДТН           ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДУ            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТДД           ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ИП2К_К1       ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ИП2К_К2       ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗУ            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗР            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТУ            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТР            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗВ            ,
     ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТВ            ,

     РЕСТАРТ_ПИВ           , /* сооб/команда - инициализировать устройство */
     РЕСТАРТ_ПК            , /* сооб/команда - инициализировать устройство */
     РЕСТАРТ_ВПО           ,
     РЕСТАРТ_ДТР           ,
     РЕСТАРТ_ДТН           ,
     РЕСТАРТ_ДУ            ,
     РЕСТАРТ_ТДД           ,
     РЕСТАРТ_ИП2К_К1       ,
     РЕСТАРТ_ИП2К_К2       ,
     РЕСТАРТ_ЗУ            ,
     РЕСТАРТ_ЗР            ,
     РЕСТАРТ_ТУ            ,
     РЕСТАРТ_ТР            ,
     РЕСТАРТ_ЗВ            ,
     РЕСТАРТ_ТВ            ,

/*!!! ТЕСТОВЫЕ КОМАНДЫ - ПОДЛЕЖАТ УНИЧТОЖЕНИЮ ПО ОТЛАДКЕ */
     ТЕСТОВАЯ_КОМАНДА1            ,
     ТЕСТОВАЯ_КОМАНДА2            ,

     РАЗРЫВ_СВЯЗИ_С_ПИВ                 ,
     РАЗРЫВ_СВЯЗИ_С_ПК                  ,
     РАЗРЫВ_СВЯЗИ_С_ВПО                 , /* сооб передаются от ПК в ПИВ в случае отсыхания канала */
     РАЗРЫВ_СВЯЗИ_С_ДТР                 ,
     РАЗРЫВ_СВЯЗИ_С_ДТН                 ,
     РАЗРЫВ_СВЯЗИ_С_ДУ                  ,
     РАЗРЫВ_СВЯЗИ_С_ТДД                 ,
     РАЗРЫВ_СВЯЗИ_С_ИП2К_К1             ,
     РАЗРЫВ_СВЯЗИ_С_ИП2К_К2             ,
     РАЗРЫВ_СВЯЗИ_С_ЗУ                  ,
     РАЗРЫВ_СВЯЗИ_С_ЗР                  ,
     РАЗРЫВ_СВЯЗИ_С_ТУ                  ,
     РАЗРЫВ_СВЯЗИ_С_ТР                  ,
     РАЗРЫВ_СВЯЗИ_С_ЗВ                  ,
     РАЗРЫВ_СВЯЗИ_С_ТВ                  ,

     НАЛИЧИЕ_СВЯЗИ_С_ПИВ                , /* сооб передаются от ПК в ПИВ в случае воостановления канала */
     НАЛИЧИЕ_СВЯЗИ_С_ПК                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ВПО                ,
     НАЛИЧИЕ_СВЯЗИ_С_ДТР                ,
     НАЛИЧИЕ_СВЯЗИ_С_ДТН                ,
     НАЛИЧИЕ_СВЯЗИ_С_ДУ                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ТДД                ,
     НАЛИЧИЕ_СВЯЗИ_С_ИП2К_К1            ,
     НАЛИЧИЕ_СВЯЗИ_С_ИП2К_К2           ,
     НАЛИЧИЕ_СВЯЗИ_С_ЗУ                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ЗР                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ТУ                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ТР                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ЗВ                 ,
     НАЛИЧИЕ_СВЯЗИ_С_ТВ                 ,

     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ПИВ          , /* команда оператора (от ПИВ) - попытаться восстановить связь */
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ПК           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ВПО          ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДТР          ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДТН          ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДУ           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТДД          ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ИП2К_К1           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ИП2К_К2           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗУ           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗР           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТУ           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТР           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗВ           ,
     ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТВ           ,

     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ПИВ             , /* команда оператора (от ПИВ) - отключить связь */
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ПК              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ВПО             ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДТР             ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДТН             ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДУ              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТДД             ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ИП2К_К1              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ИП2К_К2              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗУ              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗР              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТУ              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТР              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗВ              ,
     ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТВ              ,

     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ             ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПК              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ВПО             , /* сообщение ПК  - произошло восстановление связи */
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТР             , /*                 (был кратковременный разрыв)   */
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТН             ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДУ              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТДД             ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ИП2К_К1              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ИП2К_К2              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ЗУ              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ЗР              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТУ              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТР              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ЗВ              ,
     ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТВ              ,


     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ    ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПК     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО    ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР    ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН    ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД    ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К2     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗУ     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗР     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТУ     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТР     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗВ     ,
     СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТВ     ,

     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПИВ        ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПК         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ВПО        ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТР        ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТН        ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДУ         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТДД        ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К1         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К2         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗУ         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗР         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТУ         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТР         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗВ         ,
     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТВ         ,

     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПИВ       ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПК        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ВПО       ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТР       ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТН       ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДУ        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТДД       ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К1        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К2        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗУ        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗР        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТУ        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТР        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗВ        ,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТВ        ,

     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ПИВ       ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ПК        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ВПО       ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДТР       ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДТН       ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДУ        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТДД       ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ИП2К_К1        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ИП2К_К2        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗУ        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗР        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТУ        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТР        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗВ        ,
     N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТВ        ,

     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ПИВ       ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ПК        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ВПО       ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДТР       ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДТН       ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДУ        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТДД       ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ИП2К_К1        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ИП2К_К2        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗУ        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗР        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТУ        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТР        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗВ        ,
     N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТВ        ,

     КОЛИЧЕСТВО_СБОЕВ_ПИВ_ПО_КС         ,
     КОЛИЧЕСТВО_СБОЕВ_ПК_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ВПО_ПО_КС         ,
     КОЛИЧЕСТВО_СБОЕВ_ДТР_ПО_КС         ,
     КОЛИЧЕСТВО_СБОЕВ_ДТН_ПО_КС         ,
     КОЛИЧЕСТВО_СБОЕВ_ДУ_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ТДД_ПО_КС         ,
     КОЛИЧЕСТВО_СБОЕВ_ИП2К_К1_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ИП2К_К2_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗУ_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗР_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ТУ_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ТР_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗВ_ПО_КС          ,
     КОЛИЧЕСТВО_СБОЕВ_ТВ_ПО_КС          ,

     КОЛИЧЕСТВО_СБОЕВ_ПИВ_ПО_ТА         ,
     КОЛИЧЕСТВО_СБОЕВ_ПК_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ВПО_ПО_ТА         ,
     КОЛИЧЕСТВО_СБОЕВ_ДТР_ПО_ТА         ,
     КОЛИЧЕСТВО_СБОЕВ_ДТН_ПО_ТА         ,
     КОЛИЧЕСТВО_СБОЕВ_ДУ_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ТДД_ПО_ТА         ,
     КОЛИЧЕСТВО_СБОЕВ_ИП2К_К1_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ИП2К_К2_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗУ_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗР_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ТУ_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ТР_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ЗВ_ПО_ТА          ,
     КОЛИЧЕСТВО_СБОЕВ_ТВ_ПО_ТА          ,

     ВКЛЮЧЕНИЕ_МОНИТОРИНГА_СИСТЕМНЫХ_ОШИБОК,
     ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_СИСТЕМНЫХ_ОШИБОК,
     СБРОС_СИСТЕМНОЙ_ОШИБКИ,
     КОД_СИСТЕМНОЙ_ОШИБКИ,
     СИСТЕМНАЯ_ОШИБКА_ОТСУТСТВУЕТ,

     КОМАНДА_N_СИСТЕМНАЯ
};

ПЕРЕЧИСЛЕНИЕ{
    СИСТЕМНЫЕ_ОШИБКИ_ОТСУТСТВУЮТ = 0,
    ДЕЛЕНИЕ_НА_НОЛЬ,
    НЕИЗВЕСТНАЯ_СИСТЕМНАЯ_ОШИБКА
};

/* координаты */
ПЕРЕЧИСЛЕНИЕ {
     КОМАНДА_1_КООРДИНАТЫ = КОМАНДА_N_СИСТЕМНАЯ + 1,
     ЗАТ_КНП = КОМАНДА_1_КООРДИНАТЫ,
     ЗАТ_ДП                  ,
     ЗАТ_КВП                 ,
     УСТАНОВИТЬ_КООРДИНАТУ_ЗАТРАВКИ,
     ДВИЖЕНИЕ_ЗАТРАВКИ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ,
     РАССЧИТАТЬ_РЕАЛЬНЫЕ_КОЭФФИЦИЕНТЫ_ЗАТРАВКИ,
     ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ДП,
     ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_СТЫКА_НК,

     ТИГ_КНП,
     ТИГ_ПВК,
     ТИГ_КВП,
     УСТАНОВИТЬ_КООРДИНАТУ_ТИГЛЯ,

     ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_КНП_ТИГЛЯ_ДО_КВП,
     ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,

     КОМАНДА_N_КООРДИНАТЫ =
         ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР
};


/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ КОМАНД РЕЖИМА РА ===========================*/
/*===========================================================*/
/*===========================================================*/


ПЕРЕЧИСЛЕНИЕ {
     КОМАНДА_СМЕНЫ_ЭТАПА_1 = КОМАНДА_N_КООРДИНАТЫ + 1,
     ЭТАП_КИП,
     ЭТАП_КОНТРОЛЬНОЕ_ВАКУУМИРОВАНИЕ,
     ЭТАП_КОНТРОЛЬ_НАТЕКАНИЯ,
     ЭТАП_РАБОЧЕЕ_ВАКУУМИРОВАНИЕ,
     ЭТАП_ПОДГОТ_К_ПЛАВЛ_ЗАГРУЗКИ,
     ЭТАП_ТП_ПЛАВЛ_ЗАГРУЗКИ,
     ЭТАП_ПОДГ_К_СТАБ_РАСПЛАВА,
     ЭТАП_ПОДГ_ПРОГРЕВА_ЗАТРАВКИ,  /* добавить */
     ЭТАП_ТП_ПРОГРЕВ_ЗАТРАВКИ,

/* старый вариант      ЭТАП_ПЕРЕМЕЩЕНИЕ_ЗАТР_В_ПОЛОЖЕНИЕ_ПРОГРЕВА (ЭТАП_ПОДГ_ПРОГРЕВА_ЗАТРАВКИ),
                       ЭТАП_ТП_ПРОГРЕВ_ЗАТРАВКИ,
*/
     ЭТАП_ЗАТРАВЛИВАНИЕ,
     ЭТАП_СТАБИЛИЗАЦИЯ_РАСПЛАВА, /* добавить - Зюбин */
     ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА,
     ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ,
     ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС,
     ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА,
     ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР,
     ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА,
     ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА,
     ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС,
     ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА,
     ЭТАП_ОТРЫВ_КРИСТАЛЛА,
     ЭТАП_ТП_ОХЛ_КРИСТАЛЛА,
     ЭТАП_ПОДГОТОВКА_К_РАЗГРУЗКЕ_КРИСТАЛЛА,
     ЭТАП_ОТЖИГ_ТЕПЛОВОГО_УЗЛА, 
     КОМАНДА_СМЕНЫ_ЭТАПА_N = ЭТАП_ОТЖИГ_ТЕПЛОВОГО_УЗЛА
};
/*===========================================================*/
/*===========================================================*/
/*= КОДЫ КОМАНД ИЗМЕНЕНИЯ ТЕХНОЛОГИЧЕСКИХ КОНСТАНТ ==========*/
/*===========================================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {

  /* Контроль исходного положения */
  ИЗМН_ТК_1 = КОМАНДА_СМЕНЫ_ЭТАПА_N + 1,
  ИЗМН_ТК_МначальнойЗагрузки,

  /* К о н т р о л ь н о е   в а к у у м и р о в а н и е*/
  ИЗМН_ТК_ГлубокийВакуум_Р2,
  ИЗМН_ТК_TоткачкиДопустимое_Т2доP2,
  ИЗМН_ТК_ВремяПродувки_Т3,
  ИЗМН_ТК_ТоткачкиАргона_Т4,
  ИЗМН_ТК_ЧислоЦикловОсушки_Nц,
  ИЗМН_ТК_ВремяОткачкиПослеОсушки_Т5,

  ИЗМН_ТК_ПределДопРнкПослеКонтроляНатек_Р3, /* не используется, резерв */

/* К о н т р о л ь    н а т е к а н и я*/
  ИЗМН_ТК_Тотгазовки_КонтрНат,
  ИЗМН_ТК_ПериодКонтроля_КонтрНат,
  ИЗМН_ТК_ДопустимоеНатекание_КнтрНат,

   /* Р а б о ч е е   В а к у у м и р о в а н и е */
  ИЗМН_ТК_ВремяОткачкиДопустимое_Т7,      /* */

   /*П о д г о  т о в к а   к  плавлению загрузки*/

    ИЗМН_ТК_ЗД_Qгаза_ППЗ,   /* резерв, не используется */        /* ------- */
    ИЗМН_ТК_ЗД_Pнк_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wипн_К1_ППЗ, /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wипн_К2_ППЗ, /* резерв, не используется */
    ИЗМН_ТК_ЗД_Тр_ППЗ,      /* резерв, не используется */
    ИЗМН_ТК_ЗД_Vроста_ППЗ,  /* резерв, не используется */

    ИЗМН_ТК_ЗД_Hур_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_Dкр_ППЗ,     /* резерв, не используется */

    ИЗМН_ТК_ЗД_VзР_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_VзУ_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_Xз_ППЗ,      /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wз_ППЗ,      /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wз_УГОЛ_ППЗ, /* резерв, не используется */

    ИЗМН_ТК_ЗД_VтР_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_VтУ_ППЗ,     /* резерв, не используется */
    ИЗМН_ТК_ЗД_Xт_ППЗ,      /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wт_ППЗ,      /* резерв, не используется */
    ИЗМН_ТК_ЗД_Wт_УГОЛ_ППЗ, /* резерв, не используется */


   /*П о д г о  т о в к а   к   с т а б и л и з а ц и и   р а с п л а в а*/
  ИЗМН_ТК_Qгаза_ПодгСтабРаспл,
  ИЗМН_ТК_Pнк_ПодгСтабРаспл,     
  ИЗМН_ТК_Hур_ПодгСтабРаспл,
  ИЗМН_ТК_Wипн_К1_ПодгСтабРаспл,
  ИЗМН_ТК_Wт_ПодгСтабРаспл,    

   /*П е р е м е щ е н и е  З а т р а в к и  П о л о ж е н и е  П р о г р е в а */
  ИЗМН_ТК_VзДвижения_кРасплаву_Vпп,
  ИЗМН_ТК_РасстояниеДоРасплава_Lпп,

   /*З а т р а в л е н и е */
  ИЗМН_ТК_Vз_Погружения_Затравл,
  ИЗМН_ТК_Hпогр_Затравл,

  ИЗМН_ТК_ТcлепогоПлавления_Затравл,
  ИЗМН_ТК_Dмин_Затравл,
  ИЗМН_ТК_Dмакс_Затравл,
  ИЗМН_ТК_ТожиданияДиаметра_Затравл,
  ИЗМН_ТК_ДиаметрДендрита,

  ИЗМН_ТК_Qгаза_Затравл,           /* резерв */
  ИЗМН_ТК_Pнк_Затравл,             /* резерв */
  ИЗМН_ТК_Wт_Затравл,              /* резерв */
  ИЗМН_ТК_Wз_Затравл,              /* резерв */
  ИЗМН_ТК_Hур_Затравл,             /* резерв */
  ИЗМН_ТК_Тн_Затравл,              /* резерв */
  ИЗМН_ТК_VзВытягивания_Затравл,   /* РЕЗЕРВ */

   /*С т а б и л и з а ц и я   р а с п л а в а */
  ИЗМН_ТК_Режим_СтабРаспл,
  ИЗМН_ТК_Время_СтабРаспл,
  ИЗМН_ТК_Тр_СтабРаспл,

  ИЗМН_ТК_ТнОж_СтабРасп,           /* РЕЗЕРВ */
  ИЗМН_ТК_ВремяОсред_Тн_СтабРаспл, /* РЕЗЕРВ */

   /* В ы р а щ и в а н и е   Ш е й к и */
  ИЗМН_ТК_ПоправкаТн_Шейка,

  ИЗМН_ТК_VслепогоВыращивания_Шейка,
  ИЗМН_ТК_ТcлепогоВыращивания_Шейка,
  ИЗМН_ТК_DкрОжидаемый_Шейка,
  ИЗМН_ТК_Попр_кТн_поDкро_Шейка,
  ИЗМН_ТК_ЗД_Dкр_Шейка,
  ИЗМН_ТК_VпониженияТемпературы_Шейка,
  ИЗМН_ТК_ЗД_Vроста_Шейка,

  ИЗМН_ТК_ДлинаХорошейЧасти_Шейка,
  ИЗМН_ТК_Dкр_НачалаСчетаДлины_Шейка,
  ИЗМН_ТК_DкрОтбраковки_Шейка,

  ИЗМН_ТК_БезопасныйDкр_Шейка,
  ИЗМН_ТК_VзБезопасное_Шейка,
  ИЗМН_ТК_ТбезопаснойСкорости_Шейка,
  ИЗМН_ТК_ТстабилизацииDкр_Шейка,

  ИЗМН_ТК_Кп_Dкр_Шейка,
  ИЗМН_ТК_Ки_Dкр_Шейка,
  ИЗМН_ТК_Кд_Dкр_Шейка,
  ИЗМН_ТК_Кз_Dкр_Шейка,
  ИЗМН_ТК_Пауза_Dкр_Шейка,
  ИЗМН_ТК_Кп_Vроста_Шейка,
  ИЗМН_ТК_Ки_Vроста_Шейка,
  ИЗМН_ТК_Кд_Vроста_Шейка,
  ИЗМН_ТК_Кз_Vроста_Шейка,
  ИЗМН_ТК_Пауза_Vроста_Шейка,


  ИЗМН_ТК_VзБезопасноеСреднее, /* РЕЗЕРВ */
  ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Шейка, /* резерв */

   /* В ы р а щ и в а н и е   к о н у с а */
  ИЗМН_ТК_ПоправкаТн_Конус,
  ИЗМН_ТК_Vз_Конус,
  ИЗМН_ТК_DконусаКонечный_Конус,

  ИЗМН_ТК_К1_Конуса, /*резерв*/
  ИЗМН_ТК_К2_Конуса, /*резерв*/

   /* П е р е х о д   к о н у с - ц и л и н д р */
  ИЗМН_ТК_DкрЦилиндра_КонЦил,

  ИЗМН_ТК_К1_КонЦил,                
  ИЗМН_ТК_К2_КонЦил,                
  ИЗМН_ТК_VразращиванияГр_КонЦил,

   /* С т а б и л и з а ц и я   ц и л и н д р а */
  ИЗМН_ТК_ПоправкаТн_СтабЦил,
  ИЗМН_ТК_VзСтабНачальная_СтабЦил,
  ИЗМН_ТК_Кп_Dкр_СтабЦил,
  ИЗМН_ТК_Ки_Dкр_СтабЦил,
  ИЗМН_ТК_Кд_Dкр_СтабЦил,
  ИЗМН_ТК_Кз_Dкр_СтабЦил,
  ИЗМН_ТК_Пауза_Dкр_СтабЦил,

  ИЗМН_ТК_ВремяСтабЦил, /*резерв*/
  ИЗМН_ТК_ВремяПереходаКонусЦилиндр, /*резерв*/

   /* В ы р а щ и в а н и е   ц и л и н д р а */
  ИЗМН_ТК_Кп_Dкр_Цилиндр,
  ИЗМН_ТК_Ки_Dкр_Цилиндр,
  ИЗМН_ТК_Кд_Dкр_Цилиндр,
  ИЗМН_ТК_Кз_Dкр_Цилиндр,
  ИЗМН_ТК_Пауза_Dкр_Цилиндр,

  ИЗМН_ТК_Кп_Vроста_Цилиндр,
  ИЗМН_ТК_Ки_Vроста_Цилиндр,
  ИЗМН_ТК_Кд_Vроста_Цилиндр,
  ИЗМН_ТК_Кз_Vроста_Цилиндр,
  ИЗМН_ТК_Пауза_Vроста_Цилиндр,

  ИЗМН_ТК_ПороговаяLкр_Цилиндр,
  ИЗМН_ТК_ПороговаяМрасплава_Цилиндр,

  ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Цилиндр, /*резерв*/
  ИЗМН_ТК_VзБезопасное_Цилиндр, /* резерв */

   /* ТП   выращивание обратного конуса */

  ИЗМН_ТК_РЕЗЕРВ_1, 
  ИЗМН_ТК_РЕЗЕРВ_2,
  ИЗМН_ТК_РЕЗЕРВ_3,
  ИЗМН_ТК_РЕЗЕРВ_4, 
  ИЗМН_ТК_РЕЗЕРВ_5, 

   /* К о н т р о л ь   о к о н ч а н и я   ц и л и н д р а */
   /* П р о ц е с с   о т р ы в   к р и с т а л л а */
  ИЗМН_ТК_УскорениеПриОтрывеКристалла,

  ИЗМН_ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА, /* резерв */
  ИЗМН_ТК_Загрузки,                  /* резерв */
  ИЗМН_ТК_Нормирование_Времени,      /* резерв */
  ИЗМН_ТК_ВремяИзменения_V_Диаметра, /* резерв */
  ИЗМН_ТК_КоррекцииСкорости,         /* резерв */
  ИЗМН_ТК_АварийнаяСкоростьПодрезки, /* резерв */
  ИЗМН_ТК_СлабаяПодрезка,            /* резерв */
  ИЗМН_ТК_СильнаяПодрезка,           /* резерв */
  ИЗМН_ТК_ДлинаПереходаЦилиндрКонус, /* резерв */

  ИЗМН_ТК_VзПослеОтрываКристалла,
  ИЗМН_ТК_N = ИЗМН_ТК_VзПослеОтрываКристалла


};

/*===========================================================*/
/*===========================================================*/
/*= КОДЫ КОМАНД ИЗМЕНЕНИЯ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   ==========*/
/*===========================================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   /* К о н т р о л ь н о е   в а к у у м и р о в а н и е*/
  ИЗМН_НП_1 = ИЗМН_ТК_N + 1,
  ИЗМН_НП_ФлагРасчетаHур_поДУ = ИЗМН_НП_1,
  ИЗМН_НП_ФлагРасчетаHур_поДВ,
  ИЗМН_НП_ФлагРасчетаDкр_поТДД,
  ИЗМН_НП_ФлагРасчетаDкр_поДВ,
  ИЗМН_НП_Тизмерения_Dкр_ДВ,

  ИЗМН_НП_Lз_ОТ_КВП_ДО_ДП_Lппз,
  /* ИЗМН_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2, /*????*/
  ИЗМН_НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
  ИЗМН_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1,
  ИЗМН_НП_Lз_ОТ_КВП_ДО_КНП,

  ИЗМН_ОП_Lзатравки,
  ИЗМН_ОП_LкачественнойШейки,

  ИЗМН_НП_Кдв,
  ИЗМН_НП_Мзатравкодержателя,
  ИЗМЕРИТЬ_НП_Мзатравкодержателя,
  ИЗМН_ОП_Мзатравки,
  ИЗМЕРИТЬ_ОП_Мзатравки,
  ИЗМН_НП_Мтроса,
  ИЗМЕРИТЬ_НП_Мтроса,

  ИЗМН_ОП_Lсумм_Цилиндров,    /* при выращивании нескольких коротких */
  ИЗМН_ОП_Тсумм_Цилиндров, /* кристаллов на одной плавке необходима */
  ИЗМН_ОП_Мсумм_Цилиндров,     /* коррекция ТП выращивания цилиндра */


  ИЗМН_НП_МаксимальнаяVзР,

  ИЗМН_НП_Lт_ОТ_КНП_ДО_КВП,
  ИЗМН_НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,
/*  ИЗМН_НП_Lт_ВЫСОТА_НЕЦИЛИНДРИЧЕСКОЙ_ЧАСТИ_ТИГЛЯ,*/

  ИЗМН_НП_ОбъемВакПолости_V,
  ИЗМН_НП_ДавлениеВключенияДВН_P1,          /* === НП Тарировка ГВС *//* ПЕРЕВЕСТИ В НАСТРОЕЧНЫЕ ПАРАМЕТРЫ */
  ИЗМН_НП_КонтрольноеВремяДостиженияP1_Т1,  /* === НП Тарировка ГВС */
  ИЗМН_НП_Pатмосф,                  /* === НП Тарировка ГВС */


  ИЗМН_НП_ВремяПереходногоПроцессаQгаза,
  ИЗМН_НП_ПогрешностьQгаза,
  ИЗМН_НП_Pпор,
  ИЗМН_НП_КОЭФ_НА_ОТКР,
  ИЗМН_НП_КОЭФ_НА_ЗАКР,
  ИЗМН_НП_ВремяПереходногоПроцессаPнк,
/* ИП_ЛИТ */
  ИЗМН_НП_ТокЗащитыМодуля_ИП2К_К1,
  ИЗМН_НП_СкоростьИзменения_W_ИП2К_К1,
  ИЗМН_НП_МинимальноеКоличествоМодулей_ИП2К_К1,
  ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
  ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
  ИЗМН_НП_УставкаПотокаОхлЖидкости_ИП2К_К1,        /* < 10 л/мин - предупр-ие  */
  ИЗМН_НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1,   /* < 35 град - предупр-ие  */
  ИЗМН_НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1,  /* > 85 град - предупр-ие  */
  ИЗМН_НП_НижняяГраницаRиз_ИП2К_К1,                  /* < 0.02 ом - предупр-ие  */
  ИЗМН_НП_НижняяГраницаRн_ИП2К_К1,                  /* < 0.02 ом - предупр-ие  */
  ИЗМН_НП_ВерхняяГраницаRн_ИП2К_К1,                 /* > 0.03 ом - предупр-ие  */


  ИЗМН_НП_ВремяПереходногоПроцессаWптд,
  ИЗМН_НП_Кп_Wптд,
  ИЗМН_НП_ТипИПН,       /* тип источника питания нагревателя ПТД или ИП2К */

  ИЗМН_НП_Пауза_Wптд,
  ИЗМН_НП_ПогрешностьWипн_К1,
  ИЗМН_НП_Iптд_МАХ,
  ИЗМН_НП_Wипн_К1_МАХ,
  ИЗМН_НП_ДелтаW_Разогрева,
  ИЗМН_НП_ДелтаВремениРазогрева,
  ИЗМН_НП_Тн_MAX,
  ИЗМН_НП_Кп_Тн,
  ИЗМН_НП_Кд_Тн,
  ИЗМН_НП_Ки_Тн,
  ИЗМН_НП_Кз_Тн,
  ИЗМН_НП_ВремяПереходногоПроцессаТн,
  ИЗМН_НП_ПогрешностьТн,
  ИЗМН_НП_Пауза_Тн,
  ИЗМН_НП_Кп_Тр,
  ИЗМН_НП_Кд_Тр,
  ИЗМН_НП_Ки_Тр,
  ИЗМН_НП_Кз_Тр,
  ИЗМН_НП_Пауза_Тр,
  ИЗМН_НП_Тр_MAX,
  ИЗМН_НП_ВремяПереходногоПроцессаТр,
  ИЗМН_НП_ПогрешностьТр,
  ИЗМН_НП_ДелтаТр_MAX,

  ИЗМН_НП_ПоправкаVтР_Нур,

/* для ДУ -----------------*/
  ИЗМН_НП_THRESH_ДУ,
     ИЗМН_НП_DRELQ_ДУ,
     ИЗМН_НП_THRESH_GIST_ДУ,
  ИЗМН_НП_RELATIV_QUALITY_ДУ,
  ИЗМН_НП_AH_ДУ,
  ИЗМН_НП_BH_ДУ,
  ИЗМН_НП_CH_ДУ,
  ИЗМН_НП_MIN_SIGN_RANGE_ДУ,
  ИЗМН_НП_MIDDLE_ДУ,
  ИЗМН_НП_MIDDLE_SIGN_ДУ,
     ИЗМН_НП_MAX_SIGNAL_VALUE_ДУ,
     ИЗМН_НП_T_MAX_ДУ,
  ИЗМН_НП_BAD_NUMB_ДУ,
     ИЗМН_НП_H_MAX_ДУ,
     ИЗМН_НП_H_MIN_ДУ,
     ИЗМН_НП_WIDTH_PEAK_MAX_ДУ,
     ИЗМН_НП_ADAPT_LENGTH_ДУ,
     ИЗМН_НП_KOL_KALIBR_ДУ,
     ИЗМН_НП_CORRECT_LEVEL_LASER_1_ДУ,
     ИЗМН_НП_NLINE1_ДУ,
     ИЗМН_НП_NLINE2_ДУ,
     ИЗМН_НП_EXPOSURE_TIME0_ДУ,
     ИЗМН_НП_EXPOSURE_TIME1_ДУ,


/* для ДТР-----------------*/


/* для ТДД-----------------*/

  ИЗМН_НП_XTOLER,
  ИЗМН_НП_YTOLER,
  ИЗМН_НП_YDOWNTOLER,
  ИЗМН_НП_NUMOFSTR,
  ИЗМН_НП_THRRELIAB,
  ИЗМН_НП_THRDERIV,
  ИЗМН_НП_THRDERIVCLB,
  ИЗМН_НП_BIGZERO_LVL,
  ИЗМН_НП_BIGPLUS_LVL,
  ИЗМН_НП_SMALLZERO_LVL,
  ИЗМН_НП_SMALLPLUS_LVL,

  ИЗМН_НП_MINAVERTIME,


  ИЗМН_НП_BIGZERO_CTG,  /* при изменении от пива ТДД */
  ИЗМН_НП_BIGZERO_KY,
  ИЗМН_НП_BIGZERO_X,
  ИЗМН_НП_BIGZERO_TG,
  ИЗМН_НП_BIGPLUS_CTG,
  ИЗМН_НП_BIGPLUS_KY,
  ИЗМН_НП_BIGPLUS_X,
  ИЗМН_НП_BIGPLUS_TG,
  ИЗМН_НП_SMALLZERO_CTG,  /* при изменении от пива ТДД */
  ИЗМН_НП_SMALLZERO_KY,
  ИЗМН_НП_SMALLZERO_X,
  ИЗМН_НП_SMALLZERO_TG,
  ИЗМН_НП_SMALLPLUS_CTG,
  ИЗМН_НП_SMALLPLUS_KY,
  ИЗМН_НП_SMALLPLUS_X,
  ИЗМН_НП_SMALLPLUS_TG,

/*  ИЗМН_НП_ПОПРАВКА_К_ТДД, * добавить */
  ИЗМН_НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР,
  ИЗМН_НП_ПОПРАВКА_К_ТДД_ШЕЙКА,
  ИЗМН_ТАРИРОВКА_ПОПРАВКИ_К_ТДД_ЦИЛИНДР,
  ИЗМН_ТАРИРОВКА_ПОПРАВКИ_К_ТДД_ШЕЙКА,


  ИЗМН_НП_ВремяОсреднения_ДТН,
  ИЗМН_НП_Тсм_ДТН,
  РАССЧИТАТЬ_НП_Тсм_ДТН,
  ИЗМН_НП_ВремяОсреднения_ДТР,
  ИЗМН_НП_Тсм_ДТР,
  РАССЧИТАТЬ_НП_Тсм_ДТР,

  ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗР,
  ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗР,
  ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗУ,
  ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗУ,

  ИЗМН_НП_КОЭФ_V_ЗР,
  ИЗМН_НП_КОЭФ_X_ЗР,
  ИЗМН_НП_КОЭФ_V_ЗУ,
  ИЗМН_НП_КОЭФ_X_ЗУ,

  ИЗМН_НП_КОЭФ_V_ЗВ,
  ИЗМН_НП_КОЭФ_X_ЗВ,

  ИЗМН_НП_КОЭФ_V_ТР,
  ИЗМН_НП_КОЭФ_X_ТР,
  ИЗМН_НП_КОЭФ_V_ТУ,
  ИЗМН_НП_КОЭФ_X_ТУ,
  ИЗМН_НП_КОЭФ_V_ТВ,
  ИЗМН_НП_КОЭФ_X_ТВ,
/*-----*/
  ИЗМН_НП_РАБ_УСК_ЗР,
  ИЗМН_НП_КОЭФ_А_ЗР,
  ИЗМН_НП_АВР_ТОР_ЗР,
  ИЗМН_НП_РАБ_УСК_ЗУ,
  ИЗМН_НП_КОЭФ_А_ЗУ,
  ИЗМН_НП_АВР_ТОР_ЗУ,
  ИЗМН_НП_РАБ_УСК_ЗВ,
  ИЗМН_НП_КОЭФ_А_ЗВ,
  ИЗМН_НП_АВР_ТОР_ЗВ,

  ИЗМН_НП_РАБ_УСК_ТР,
  ИЗМН_НП_КОЭФ_А_ТР,
  ИЗМН_НП_АВР_ТОР_ТР,
  ИЗМН_НП_РАБ_УСК_ТУ,
  ИЗМН_НП_КОЭФ_А_ТУ,
  ИЗМН_НП_АВР_ТОР_ТУ,
  ИЗМН_НП_РАБ_УСК_ТВ,
  ИЗМН_НП_КОЭФ_А_ТВ,
  ИЗМН_НП_АВР_ТОР_ТВ,
/*-----*/

  ИЗМН_НП_MIN_ДУ_Hур,
  ИЗМН_НП_MAX_ДУ_Hур,
  ИЗМН_НП_MIN_ДУДД_Hур,
  ИЗМН_НП_MAX_ДУДД_Hур,
  ИЗМН_НП_Кп_ДУ_Hур,
  ИЗМН_НП_Кп_ДУДД_Hур,
  ИЗМН_НП_ПредупредительныйHур,
  ИЗМН_НП_АварийнаяОшибкаHур,
  ИЗМН_НП_Кп_Dкр,
  ИЗМН_НП_Кд_Dкр,
  ИЗМН_НП_Ки_Dкр,
  ИЗМН_НП_Кз_Dкр,
  ИЗМН_НП_Dкр_MAX,
  ИЗМН_НП_ДелтаVзРС_МАХ,
  ИЗМН_НП_ВремяПереходногоПроцессаDкр,
  ИЗМН_НП_ПогрешностьDкр,
  ИЗМН_НП_Пауза_Dкр,
  ИЗМН_НП_Кп_Vроста,
  ИЗМН_НП_Кд_Vроста,
  ИЗМН_НП_Ки_Vроста,
  ИЗМН_НП_Кз_Vроста,
  ИЗМН_НП_Пауза_Vроста,
  ИЗМН_НП_ВремяОсредненияVзVроста,
  ИЗМН_НП_VзР_MAX,
  ИЗМН_НП_ДелтаТн_MAX,
  ИЗМН_НП_Пауза_РЕГ_РОСТА, /* навести порядок при коррекции НП */
  ИЗМН_НП_ВремяПереходногоПроцессаVроста,
  ИЗМН_НП_ПогрешностьVроста,
  ИЗМН_НП_КоэфА_Pнк,
  ИЗМН_НП_КоэфВ_Pнк,
  ИЗМН_НП_РЕЖ_ИСПОЛН_РА,
  ИЗМН_НП_РАДИУС_СТЕНКИ_ТИГЛЯ,
  ИЗМН_НП_РАДИУС_ДНА_ТИГЛЯ,
  ИЗМН_НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ,

/*==== НП Режима Отжиг ==========================*/
  ИЗМН_НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ, /* мм.рт.ст */
  ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                      , /* мм.рт.ст */
  ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                             , /* 100 Вт   */
  ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                             , /* дельта разогрева */
  ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                        , /* мм.рт.ст.*/
  ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                         , /* мм.рт.ст.*/
  ИЗМН_НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                    , /* 100 КВт  */
  ИЗМН_НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА                                ,
  ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                     ,
  ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                     ,

  ИЗМН_НП_N
};

/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ КОМАНД ИЗМЕНЕНИЯ ЗАДАНИЯ ===================*/
/*===========================================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
  ИЗМН_НП_ГЛУБИНА_ТИГЛЯ = ИЗМН_НП_N + 1,     /* !!!! УБРАТЬ !!!! */
  ИЗМН_НП_ДИАМЕТР_ТИГЛЯ = ИЗМН_НП_ГЛУБИНА_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ,
  ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ = ИЗМН_НП_ДИАМЕТР_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ
};


/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ КОМАНД ИЗМЕНЕНИЯ ЗАДАНИЯ ===================*/
/*===========================================================*/
/*===========================================================*/

ПЕРЕЧИСЛЕНИЕ {
   /* М.Б. надо расширить этот список  */
    ИЗМН_ЗД_1 = ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ +
                ЧИСЛО_ТОЧЕК_ТИГЛЯ,
    ИЗМН_ЗД_Qгаза = ИЗМН_ЗД_1,
    ИЗМН_ЗД_Pнк,
/* термосистема */

    ИЗМН_ЗД_Wипн_К1,
    ИЗМН_ЗД_Wипн_К2,
    ИЗМН_ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/, /* 23.12.2005 - База для Рег_РОСТА Зюбин */

    ИЗМН_ЗД_Тн,
    ИЗМН_ЗД_Тр,
    ИЗМН_ЗД_Vроста,

    ИЗМН_ЗД_Hур,
    ИЗМН_ЗД_Dкр,

    ИЗМН_ЗД_VзР,
    ИЗМН_ЗД_VзУ,
    ИЗМН_ЗД_Xз,
    ИЗМН_ЗД_Wз,
    ИЗМН_ЗД_Wз_УГОЛ,

    ИЗМН_ЗД_VтР,
    ИЗМН_ЗД_VтУ,
    ИЗМН_ЗД_Xт,
    ИЗМН_ЗД_Wт,
    ИЗМН_ЗД_Wт_УГОЛ,

    ИЗМН_ЗД_N = ИЗМН_ЗД_Wт_УГОЛ
};

ПЕРЕЧИСЛЕНИЕ {
    ФОРСАЖ_У_ВКЛ_ПТД_ON = ИЗМН_ЗД_N + 1,
    ФОРСАЖ_У_ВКЛ_ПТД_OFF,
    ФОРСАЖ_У_ВЫК_ПТД_ON,
    ФОРСАЖ_У_ВЫК_ПТД_OFF,
    ФОРСАЖ_У_ВКЛ_РВ_ПТД_ON,
    ФОРСАЖ_У_ВКЛ_РВ_ПТД_OFF,
    ФОРСАЖ_У_ВКЛ_АСС_ON,
    ФОРСАЖ_У_ВКЛ_АСС_OFF,
    ФОРСАЖ_У_VE12_ON,
    ФОРСАЖ_У_VE12_OFF,
    ФОРСАЖ_FPGA3_N5_ON,
    ФОРСАЖ_FPGA3_N5_OFF,
    ФОРСАЖ_FPGA3_N6_ON,
    ФОРСАЖ_FPGA3_N6_OFF,
    ФОРСАЖ_FPGA3_N7_ON,
    ФОРСАЖ_FPGA3_N7_OFF,
    ФОРСАЖ_У_ЛАЗЕРА_ДП_ON,
    ФОРСАЖ_У_ЛАЗЕРА_ДП_OFF,
    ФОРСАЖ_FPGA3_N9_ON,
    ФОРСАЖ_FPGA3_N9_OFF,
    ФОРСАЖ_FPGA3_N10_ON,
    ФОРСАЖ_FPGA3_N10_OFF,
    ФОРСАЖ_FPGA3_N11_ON,
    ФОРСАЖ_FPGA3_N11_OFF,
    ФОРСАЖ_FPGA3_N12_ON,
    ФОРСАЖ_FPGA3_N12_OFF,
    ФОРСАЖ_FPGA3_N13_ON,
    ФОРСАЖ_FPGA3_N13_OFF,
    ФОРСАЖ_FPGA3_N14_ON,
    ФОРСАЖ_FPGA3_N14_OFF,
    ФОРСАЖ_FPGA3_N15_ON,
    ФОРСАЖ_FPGA3_N15_OFF,
    ФОРСАЖ_FPGA3_N16_ON,
    ФОРСАЖ_FPGA3_N16_OFF,
    ФОРСАЖ_FPGA3_N17_ON,
    ФОРСАЖ_FPGA3_N17_OFF,
    ФОРСАЖ_FPGA3_N18_ON,
    ФОРСАЖ_FPGA3_N18_OFF,
    ФОРСАЖ_FPGA3_N19_ON,
    ФОРСАЖ_FPGA3_N19_OFF,
    ФОРСАЖ_FPGA3_N20_ON,
    ФОРСАЖ_FPGA3_N20_OFF,
    ФОРСАЖ_FPGA3_N21_ON,
    ФОРСАЖ_FPGA3_N21_OFF,
    ФОРСАЖ_FPGA3_N22_ON,
    ФОРСАЖ_FPGA3_N22_OFF,
    ФОРСАЖ_FPGA3_N23_ON,
    ФОРСАЖ_FPGA3_N23_OFF,
    ФОРСАЖ_У_НВР1_ON,
    ФОРСАЖ_У_НВР1_OFF,
    ФОРСАЖ_У_НВР2_ON,
    ФОРСАЖ_У_НВР2_OFF,
    ФОРСАЖ_У_РАЗБЛОКИРОВКА_ВК_НК_ON,
    ФОРСАЖ_У_РАЗБЛОКИРОВКА_ВК_НК_OFF,

    ФОРСАЖ_У_ТЕСТ_ДК_ON,
    ФОРСАЖ_У_ТЕСТ_ДК_OFF,

    ФОРСАЖ_У_ЗАКР_РРГ_ON,
    ФОРСАЖ_У_ЗАКР_РРГ_OFF,
    ФОРСАЖ_У_ОТКР_РРГ_ON,
    ФОРСАЖ_У_ОТКР_РРГ_OFF,
    ФОРСАЖ_У_ВТ3_ON,
    ФОРСАЖ_У_ВТ3_OFF,
    ФОРСАЖ_У_ВКЛ_48В_ON,
    ФОРСАЖ_У_ВКЛ_48В_OFF,
    ФОРСАЖ_У_VE1_ON,
    ФОРСАЖ_У_VE1_OFF,
    ФОРСАЖ_У_VE2_ON,
    ФОРСАЖ_У_VE2_OFF,
    ФОРСАЖ_У_VE3_ON,
    ФОРСАЖ_У_VE3_OFF,
    ФОРСАЖ_У_VE4_ON,
    ФОРСАЖ_У_VE4_OFF,
    ФОРСАЖ_У_VE5_ON,
    ФОРСАЖ_У_VE5_OFF,
    ФОРСАЖ_У_VE6_ON,
    ФОРСАЖ_У_VE6_OFF,
    ФОРСАЖ_У_VE7_ON,
    ФОРСАЖ_У_VE7_OFF,

    ФОРСАЖ_У_ВКЛ_24В_ON,
    ФОРСАЖ_У_ВКЛ_24В_OFF,

    ФОРСАЖ_У_ДВН1_ON,
    ФОРСАЖ_У_ДВН1_OFF,
    ФОРСАЖ_У_ДВН2_ON,
    ФОРСАЖ_У_ДВН2_OFF,
    ФОРСАЖ_У_VE10_ON,
    ФОРСАЖ_У_VE10_OFF,
    ФОРСАЖ_У_VE11_ON,
    ФОРСАЖ_У_VE11_OFF,
    ФОРСАЖ_У_ОТКР_VM14_ON,
    ФОРСАЖ_У_ОТКР_VM14_OFF,
    ФОРСАЖ_У_ЗАКР_VM14_ON,
    ФОРСАЖ_У_ЗАКР_VM14_OFF,
    ФОРСАЖ_У_VE8_ON,
    ФОРСАЖ_У_VE8_OFF,
    ФОРСАЖ_У_VE9_ON,
    ФОРСАЖ_У_VE9_OFF
};




/*===========================================================*/
/*========= КОДЫ КОМАНД ПОСТУПАЮЩИЕ К ПИВ ===================*/
/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ==================================*/
/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ  О НЕВЕРНОЙ КОМАНДЕ ==============*/
/*===========================================================*/

ПЕРЕЧИСЛЕНИЕ {
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ = ФОРСАЖ_У_VE12_OFF + 1, /*добавить 06.08.02 */
/* должно быть:     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ = ФОРСАЖ_У_VE9_OFF + 1, /*добавить 06.08.02 */
     ПК_ПИВ_ОШИБКА_ЗАПРЕЩЕННАЯ_КОМАНДА_РЕЖИМА_ИНИЦИАЛИЗАЦИИ,
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_РА,
     ПК_ПИВ_ОШИБКА_КОДА_ЭТАПА_РА,
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_КРП,
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_ОТЖИГ_ТУ, 
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_ДВК,
     ПК_ПИВ_ОШИБКА_КОДА_ЭТАПА_ДВК,
     ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_РФ
};
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ  О СМЕНЕ РЕЖИМА ==================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ДО_ОТМЕНЫ_СЕКУНД = ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_РФ + 1,
    ПК_ПИВ_ДО_ОТМЕНЫ_ОСТАЛОСЬ_СЕКУНД,
    ПК_ПИВ_КОНТРОЛЬ_ТАЙМАУТА_ОТМЕНЫ_СНЯТ  ,
    ПК_ПИВ_НАЖАТА_КНОПКА_ОТМЕНА
};

/*===========================================================*/
/*========= КОДЫ РЕЖИМНЫХ СООБЩЕНИЙ =========================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {                                
    ПК_ПИВ_ОШИБКА_КРП = ПК_ПИВ_НАЖАТА_КНОПКА_ОТМЕНА + 1,
    ПК_ПИВ_ЗАФИКСИРОВАНА_ОШИБКА_ДВК, /* ошибка при исполнении этапа */
    ПК_ПИВ_ОТЖИГ_КОНЕЦ_ОТЖИГА,
    ПК_ПИВ_ОТЖИГ_НЕГЕРМЕТИЧНОСТЬ_УСТАНОВКИ,
    ПК_ПИВ_ОШИБКА_ОТЖИГА
};


/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ТЕРМОСИСТЕМЫ  ====================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
      ИП2К_ОТСУТСТВУЕТ  = ПК_ПИВ_ОШИБКА_ОТЖИГА + 1,      /* код  к ПИВу - пока все операции с ИП2К некорректны */
      СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП2К_К1,
      СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП2К_К2,

      ПТД_В_НОРМЕ            , /* код  к ПИВу - по успешному включению/выключению ПТД */
      ОТКАЗ_ПТД              , /* код  к ПИВу - по отказу включения/выключения ПТД */

      СОПРОТИВЛЕНИЕ_ИЗОЛЯЦИИ_ПТД_НИЖЕ_НОРМЫ,
      СОПРОТИВЛЕНИЕ_В_НОРМЕ                ,
      СРАБОТАЛА_ЗАЩИТА_ПТД                 ,
      ЗАЩИТА_В_НОРМЕ                       ,
      ТИП_ИПН_НЕ_ПРОИНИЦИАЛИЗИРОВАН        ,

      ОШИБКА_ТУ                            ,
      ТУ_В_НОРМЕ
};


/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ГАЗОВАКУУМНОЙ СИСТЕМЫ ============*/
/*===========================================================*/

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE1*/
      ПК_ПИВ_VE1_ОТКРЫТ = ТУ_В_НОРМЕ + 1,
      ПК_ПИВ_VE1_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE1,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE1,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE1,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE1,
      ПК_ПИВ_КЛАПАН_VE1_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE1,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE1
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE2*/
      ПК_ПИВ_VE2_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE1 + 1,
      ПК_ПИВ_VE2_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE2,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE2,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE2,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE2,
      ПК_ПИВ_КЛАПАН_VE2_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE2,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE2
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE3*/
      ПК_ПИВ_VE3_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE2 + 1,
      ПК_ПИВ_VE3_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE3,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE3,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE3,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE3,
      ПК_ПИВ_КЛАПАН_VE3_В_НОРМЕ,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE3_Рнк_МЕНЬШЕ_Pавд1,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE3,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE3
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE4*/
      ПК_ПИВ_VE4_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE3 + 1,
      ПК_ПИВ_VE4_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE4,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE4,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE4,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE4,
      ПК_ПИВ_КЛАПАН_VE4_В_НОРМЕ,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE4_Рнк_МЕНЬШЕ_Pавд2,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE4,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE4
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE5*/
      ПК_ПИВ_VE5_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE4 + 1,
      ПК_ПИВ_VE5_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE5,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE5,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE5,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE5,
      ПК_ПИВ_КЛАПАН_VE5_В_НОРМЕ,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE5_Рвк_МЕНЬШЕ_Pавд1,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE5,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE5
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE6*/
      ПК_ПИВ_VE6_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE5 + 1,
      ПК_ПИВ_VE6_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE6,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE6,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE6,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE6,
      ПК_ПИВ_КЛАПАН_VE6_В_НОРМЕ,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE6_Рвк_МЕНЬШЕ_Pавд2,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE6,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE6
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE7*/
      ПК_ПИВ_VE7_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE6 + 1,
      ПК_ПИВ_VE7_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE7,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE7,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE7,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE7,
      ПК_ПИВ_КЛАПАН_VE7_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE7,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE7
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE8*/
      ПК_ПИВ_VE8_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE7 + 1,
      ПК_ПИВ_VE8_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE8,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE8,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE8,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE8,
      ПК_ПИВ_КЛАПАН_VE8_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE8,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE8
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE9*/
      ПК_ПИВ_VE9_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE8 + 1,
      ПК_ПИВ_VE9_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE9,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE9,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE9,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE9,
      ПК_ПИВ_КЛАПАН_VE9_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE9,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE9
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE12*/
      ПК_ПИВ_VE12_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE9 + 1,
      ПК_ПИВ_VE12_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE12,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE12,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE12,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE12,
      ПК_ПИВ_КЛАПАН_VE12_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE12,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE12
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE10*/
      ПК_ПИВ_VE10_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE12 + 1,
      ПК_ПИВ_VE10_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE10,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE10,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE10,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE10,
      ПК_ПИВ_КЛАПАН_VE10_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE10,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE10
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VE11*/
      ПК_ПИВ_VE11_ОТКРЫТ = ПК_ПИВ_ОТКАЗ_ЗАКР_VE10 + 1,
      ПК_ПИВ_VE11_ЗАКРЫТ,
      ПК_ПИВ_НЕКНТР_ОТКР_VE11,
      ПК_ПИВ_НЕКНТР_ЗАКР_VE11,
      ПК_ПИВ_НЕКНТР_ОТКР_У_VE11,
      ПК_ПИВ_НЕКНТР_ЗАКР_У_VE11,
      ПК_ПИВ_КЛАПАН_VE11_В_НОРМЕ,
      ПК_ПИВ_ОТКАЗ_ОТКР_VE11,
      ПК_ПИВ_ОТКАЗ_ЗАКР_VE11
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий VM14*/
      ПК_ПИВ_ВРЕМЯ_ОТКР_VM14_ИСТЕКЛО = ПК_ПИВ_ОТКАЗ_ЗАКР_VE11 + 1,
      ПК_ПИВ_ВРЕМЯ_ЗАКР_VM14_ИСТЕКЛО,
      ПК_ПИВ_ВЫКЛЮЧЕНИЕ_VM14,
      ПК_ПИВ_ЗАКР_VM14,
      ПК_ПИВ_ОТКР_VM14,
      ПК_ПИВ_ОШИБКА_УПРАВЛЕНИЯ_VM14,
      ПК_ПИВ_СРЕДНЕЕ_СОСТОЯНИЕ_VM14,
      ПК_ПИВ_VM14_В_НОРМЕ,
      ПК_ПИВ_VM14_ЗАКРЫТ,
      ПК_ПИВ_VM14_ОТКРЫТ,
      ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_VM14
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий затвора вакуумного*/
      ПК_ПИВ_СРЕДНЕЕ_СОСТОЯНИЕ_ЗАТВОРА_ВАКУУМНОГО = ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_VM14 + 1,
      ПК_ПИВ_ЗАТВОР_ВАКУУМНЫЙ_ЗАКРЫТ,
      ПК_ПИВ_ЗАТВОР_ВАКУУМНЫЙ_ОТКРЫТ,
      ПК_ПИВ_ЗАКРЫТИЕ_ЗВ_ПРИ_ОПУЩЕННОЙ_ЗАТРАВКЕ,
      ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ,
      ПК_ПИВ_ЗАКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ,
      ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_ЗАТВОРА_ВАКУУМНОГО
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий НВР1*/
      ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_НВР1_ВКЛЮЧЕНЫ  = ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_ЗАТВОРА_ВАКУУМНОГО + 1,
      ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_НВР1_ВЫКЛЮЧЕНЫ,
      ПК_ПИВ_НВР1_В_НОРМЕ,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_НВР1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_НВР1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_НВР1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_НВР1,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_НВР1,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР1
};
ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий НВР2*/
      ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_НВР2_ВКЛЮЧЕНЫ  = ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР1 + 1,
      ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_НВР2_ВЫКЛЮЧЕНЫ,
      ПК_ПИВ_НВР2_В_НОРМЕ,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_НВР2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_НВР2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_НВР2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_НВР2,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_НВР2,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР2
};
ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий ДВН1*/
      ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_ДВН1_ВКЛЮЧЕНЫ  = ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР2 + 1,
      ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_ДВН1_ВЫКЛЮЧЕНЫ,
      ПК_ПИВ_ДВН1_В_НОРМЕ,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_ДВН1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_ДВН1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_ДВН1,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_ДВН1,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_ДВН1,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН1
};
ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий ДВН2*/
      ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_ДВН2_ВКЛЮЧЕНЫ  = ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН1 + 1,
      ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_ДВН2_ВЫКЛЮЧЕНЫ,
      ПК_ПИВ_ДВН2_В_НОРМЕ,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_ДВН2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_ДВН2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_ДВН2,
      ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_ДВН2,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_ДВН2,
      ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН2
};

ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов событий АВД*/
      ПК_ПИВ_НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД1 = ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН2 + 1,
      ПК_ПИВ_НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД2,
      ПК_ПИВ_АВД1_ВКЛЮЧЕН,
      ПК_ПИВ_АВД1_ВЫКЛЮЧЕН,
      ПК_ПИВ_ОТКАЗ_ВКЛЮЧЕНИЯ_АВД1,
      ПК_ПИВ_ОТКАЗ_ВЫКЛЮЧЕНИЯ_АВД1,
      ПК_ПИВ_АВД2_ВКЛЮЧЕН,
      ПК_ПИВ_АВД2_ВЫКЛЮЧЕН,
      ПК_ПИВ_ОТКАЗ_ВКЛЮЧЕНИЯ_АВД2,
      ПК_ПИВ_ОТКАЗ_ВЫКЛЮЧЕНИЯ_АВД2,
      ПК_ПИВ_КНТР_ВРЕМЯ_ИСТЕКЛО__Pавд1_ВЫШЕ_Pнк,
      ПК_ПИВ_КНТР_ВРЕМЯ_ИСТЕКЛО__Pавд2_ВЫШЕ_Pнк,
      ПК_ПИВ_НЕРАЗРЕШИМАЯ_СИТУАЦИЯ_ПЕРЕКЛЮЧЕНИЯ,
      ПК_ПИВ_ОСТАНОВ_ШЛЮЗОВАНИЯ,
      ПК_ПИВ_НЕШТАТНАЯ_СИТУАЦИЯ_ШЛЮЗОВАНИЯ,
      ПК_ПИВ_НАЧАЛО_РАЗГЕРМЕТИЗАЦИИ_ВК,
      ПК_ПИВ_КОНЕЦ_РАЗГЕРМЕТИЗАЦИИ_ВК,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ШЛЮЗОВАНИЯ_ЗВ_VE5_VE6,
      ПК_ПИВ_ПРЕВЫШЕНО_ВРЕМЯ_РАЗГЕРМЕТИЗАЦИИ_ВК,
      ПК_ПИВ_НАЧАЛО_ВАКУУМИРОВАНИЯ_ВК,
      ПК_ПИВ_КОНЕЦ_ВАКУУМИРОВАНИЯ_ВК,
      ПК_ПИВ_НЕТ_УСЛОВИЙ_ШЛЮЗОВАНИЯ_ЗВ_Pвк_РЕГ_Д,
      ПК_ПИВ_ПРЕВЫШЕНО_ВРЕМЯ_РАБОТЫ_АГРЕГАТА_ВАКУУМНОГО
};

ПЕРЕЧИСЛЕНИЕ{ /* общие для ГВС */
      АВАРИЯ__НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД1 =
            ПК_ПИВ_ПРЕВЫШЕНО_ВРЕМЯ_РАБОТЫ_АГРЕГАТА_ВАКУУМНОГО + 1,
      АВАРИЯ__НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД2,
      ПК_ПИВ_НЕТ_БЛОК_СХЕМЫ_ГВС_ОТ_КМЗ, /* сообщение, нет информации от КМЗ */
      ДАВЛЕНИЕ_НК_В_НОРМЕ,
      ПРЕДУПРЕЖДЕНИЕ__ДАВЛЕНИЕ_НК_40,
      АВАРИЯ__ДАВЛЕНИЕ_НК_БОЛЬШЕ_45
};

/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ  СИСТЕМЫ ОХЛАЖДЕНИЯ ==============*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {                    /* константы кодов системы охлаждения */
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ВК  =
      		АВАРИЯ__ДАВЛЕНИЕ_НК_БОЛЬШЕ_45 + 1,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ВК,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ВК,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_НК,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_НК,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_НК,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ШТОКА_ТИГЛЯ,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ШТОКА_ТИГЛЯ,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ШТОКА_ТИГЛЯ,
      ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_НА_ВХОДЕ,
      ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_НА_ВХОДЕ,

      ПК_ПИВ_СНЯТЬ_ОШИБКУ__ВСЕХ_РП_И_МН,

      ПК_ПИВ_СНЯТЬ_ОШИБКУ__МН_В_НОРМЕ,
      ПК_ПИВ_АВАРИЯ__ДАВЛЕНИЕ_ВОДЫ_НИЖЕ_НОРМЫ,
      ПК_ПИВ_АВАРИЯ__ДАВЛЕНИЕ_ВОДЫ_ВЫШЕ_НОРМЫ,
      ПК_ПИВ_АВАРИЯ__ОТКАЗ_МН,

      ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_В_НОРМЕ,
      ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_НИЖЕ_НОРМЫ,
      ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_ВЫШЕ_НОРМЫ,
      ПК_ПИВ_ОТКАЗ_МН,

      ПК_ПИВ_НОРМА_ОХЛ_ВК,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ВК,
      ПК_ПИВ_ЕСТЬ_ОХЛ_ВК,
      ПК_ПИВ_НЕТ_ОХЛ_ВК,

      ПК_ПИВ_НОРМА_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_ЕСТЬ_ОХЛ_КРЫШКИ_НК,
      ПК_ПИВ_НЕТ_ОХЛ_КРЫШКИ_НК,

      ПК_ПИВ_НОРМА_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_ЕСТЬ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,
      ПК_ПИВ_НЕТ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО,

      ПК_ПИВ_НОРМА_ОХЛ_НК,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_НК,
      ПК_ПИВ_ЕСТЬ_ОХЛ_НК,
      ПК_ПИВ_НЕТ_ОХЛ_НК,

      ПК_ПИВ_НОРМА_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_ЕСТЬ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,
      ПК_ПИВ_НЕТ_ОХЛ_БАЗОВОЙ_ПЛИТЫ,

      ПК_ПИВ_НОРМА_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ,
      ПК_ПИВ_ЕСТЬ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ,
      ПК_ПИВ_НЕТ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ,

      ПК_ПИВ_НОРМА_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_ЕСТЬ_ОХЛ_ТОКОВВОДОВ,
      ПК_ПИВ_НЕТ_ОХЛ_ТОКОВВОДОВ,

      ПК_ПИВ_ПРЕДУПРЕЖДЕНИЕ__НЕТ_ОХЛ_АВД,
      ПК_ПИВ_НОРМА_ОХЛ_АВД,
      ПК_ПИВ_ЕСТЬ_ОХЛ_АВД,
      ПК_ПИВ_НЕТ_ОХЛ_АВД,

      ПК_ПИВ_ПОДАТЬ_ВОДУ_В_СИСТЕМУ_ОХЛАЖДЕНИЯ, /* при включении Нагревателя, ему нужна вода */
/* ИП_ЛИТ */
/*      ПК_ПИВ_ЕСТЬ_ПОТОК_ОХЛАЖДЕНИЯ_ИП2К_К1,
      ПК_ПИВ_НЕТ_ПОТОКА_ОХЛАЖДЕНИЯ_ИП2К_К1,    */


      ПК_ПИВ_ТОК_МОДУЛЯ_0_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_0_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТОК_МОДУЛЯ_1_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_1_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТОК_МОДУЛЯ_2_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_2_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТОК_МОДУЛЯ_3_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_3_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТОК_МОДУЛЯ_4_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_4_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТОК_МОДУЛЯ_5_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТОК_МОДУЛЯ_5_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    



      ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_В_НОРМЕ,
      ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_НИЖЕ_НОРМЫ_ПОДАТЬ_ВОДУ, 
      ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_НИЖЕ_НОРМЫ_АВАРИЯ,      
      ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,  

      ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВХОДЕ_ИП2К_К1_В_НОРМЕ,
      ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВХОДЕ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,

      ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_В_НОРМЕ,
      ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,
      ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,

      ПК_ПИВ_СОПРОТИВЛЕНИЕ_НАГР_ИП2К_К1_В_НОРМЕ,
      ПК_ПИВ_СОПРОТИВЛЕНИЕ_НАГР_ИП2К_К1_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_В_НОРМЕ,
      ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_НИЖЕ_НОРМЫ_АВАРИЯ,
      ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_ВЫШЕ_НОРМЫ,

      ПК_ПИВ_АВТОНОМНЫЙ_РЕЖИМ_ИП2К_К1,
      ПК_ПИВ_НЕАВТОНОМНЫЙ_РЕЖИМ_ИП2К_К1,

      ПК_ПИВ_В_ИП2К_НЕ_ХВАТАЕТ_МОДУЛЕЙ,                         
      ПК_ПИВ_В_ИП2К_МОДУЛЕЙ_ДОСТАТОЧНО,                         

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_В_НОРМЕ,              
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ,   
      ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ,    

      ПК_ПИВ_N_СИСТЕМЫ_ОХЛАЖДЕНИЯ
};
ПЕРЕЧИСЛЕНИЕ { /* константы кодов событий предохранительного клапана */
      ПК_ПИВ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН_В_НОРМЕ  = ПК_ПИВ_N_СИСТЕМЫ_ОХЛАЖДЕНИЯ,
      ПК_ПИВ_СРАБОТАЛ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН,
      ПК_ПИВ_АВАРИЯ__СРАБОТАЛ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН

};


/*===========================================================*/
/*=== КОДЫ СООБЩЕНИЙ КОНТРОЛЯ СТЫКОВКИ    ===================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ЕСТЬ_СТЫК_1 = ПК_ПИВ_АВАРИЯ__СРАБОТАЛ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН + 1,
    ПК_ПИВ_ЕСТЬ_СТЫК_2,
    ПК_ПИВ_ЕСТЬ_СТЫК_3,
    ПК_ПИВ_ЕСТЬ_СТЫК_4,
    ПК_ПИВ_ЕСТЬ_СТЫК_5,
    ПК_ПИВ_ЕСТЬ_СТЫК_6,
    ПК_ПИВ_ЕСТЬ_СТЫК_7,
    ПК_ПИВ_ЕСТЬ_СТЫК_8,

    ПК_ПИВ_НЕТ_СТЫКА_1,
    ПК_ПИВ_НЕТ_СТЫКА_2,
    ПК_ПИВ_НЕТ_СТЫКА_3,
    ПК_ПИВ_НЕТ_СТЫКА_4,
    ПК_ПИВ_НЕТ_СТЫКА_5,
    ПК_ПИВ_НЕТ_СТЫКА_6,
    ПК_ПИВ_НЕТ_СТЫКА_7,
    ПК_ПИВ_НЕТ_СТЫКА_8
};
/*===========================================================*/
/*=== КОДЫ СООБЩЕНИЙ КОНТРОЛЯ ИБП, блокировки ВК/НК         =*/
/*=== и 24/48В                                              =*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ИБП_РАЗРЯЖЕН = ПК_ПИВ_НЕТ_СТЫКА_8 + 1,
    ИБП_В_НОРМЕ,
    ОТКЛЮЧЕНИЕ_СИСТЕМЫ_ПО_ПИТАНИЮ,
    ЕСТЬ_220В_НА_ВХОДЕ_ИБП,
    НЕТ_220В_НА_ВХОДЕ_ИБП,
    ЕСТЬ_БЛОКИРОВКА_ВК_НК,
    НЕТ_БЛОКИРОВКИ_ВК_НК,
    ОЖИДАНИЕ_ПРОГРАММНОГО_24_48В
};
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ  РЕГУЛЯТОРОВ =====================*/
/*===========================================================*/
/*===КОДЫ СООБЩЕНИЙ ПРОЦЕССОВ УПРАВЛЕНИЯ РЕГУЛЯТОРАМИ =======*/
ПЕРЕЧИСЛЕНИЕ {
          /*регулятор расхода газа */
      РЕГ_РГ_ВКЛЮЧЕН = ОЖИДАНИЕ_ПРОГРАММНОГО_24_48В + 1,
      ПОГРЕШНОСТЬ_РЕГ_РГ_ВЫШЕ_НОРМЫ,
      РЕГ_РГ_ВЫКЛЮЧЕН,
          /*регулятор давления */
      РЕГ_Д_ВКЛЮЧЕН,
      РЕГ_Д_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_Д_ВЫШЕ_НОРМЫ,
         /*регулятор мощности К1*/
      РЕГ_W_ИПН_К1_ВКЛЮЧЕН,
      РЕГ_W_ИПН_К1_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_W_ИПН_К1_ВЫШЕ_НОРМЫ,
         /*регулятор температуры нагревателя */
      РЕГ_ТН_ВКЛЮЧЕН,
      РЕГ_ТН_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_ТН_ВЫШЕ_НОРМЫ,
         /*регулятор температуры расплава */
      РЕГ_ТР_ВКЛЮЧЕН,
      РЕГ_ТР_ВЫКЛЮЧЕН,
      РЕГ_ТН_ВЫКЛЮЧЕН__РАБОТА_РЕГ_ТР_НЕВОЗМОЖНА,
      ПОГРЕШНОСТЬ_РЕГ_ТР_ВЫШЕ_НОРМЫ,
         /*регулятор роста */
      РЕГ_РОСТА_ВКЛЮЧЕН,
      РЕГ_РОСТА_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_РОСТА_ВЫШЕ_НОРМЫ,
      РЕГ_ДИАМЕТРА_ВЫКЛЮЧЕН__РАБОТА_НЕВОЗМОЖНА,
      РЕГ_ТН_ВЫКЛЮЧЕН__РАБОТА_РЕГ_РОСТА_НЕВОЗМОЖНА,
         /*регулятор мощности К2*/
      РЕГ_W_ИПН_К2_ВКЛЮЧЕН,
      РЕГ_W_ИПН_К2_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_W_ИПН_К2_ВЫШЕ_НОРМЫ,
         /* регулятор уровня расплава */
      РЕГ_УР_ВКЛЮЧЕН,
      РЕГ_УР_ВЫКЛЮЧЕН,
      РЕГ_VтР_ВЫКЛЮЧЕН__РЕГУЛ_УРОВНЯ_НЕВОЗМОЖНО,
      ПРЕВЫШЕН_ДИАПАЗОН_Hур,
      ПРОЛИВ_РАСПЛАВА,
      СКАЧОК_УРОВНЯ_РАСПЛАВА,  /* антиПРОЛИВ РАСПЛАВА, упала буля? */
      ПРЕВЫШ_ДОПУСТ_РАССОГЛАСОВАНИЯ__РЕГУЛ_НЕВОЗМОЖНО,
         /* регулятор диаметра кристалла */
      РЕГ_ДК_ВКЛЮЧЕН,
      РЕГ_ДК_ВЫКЛЮЧЕН,
      ПОГРЕШНОСТЬ_РЕГ_ДК_ВЫШЕ_НОРМЫ,
      РЕГ_VзР_ВЫКЛЮЧЕН__РАБОТА_РЕГ_ДК_НЕВОЗМОЖНА,
      РЕГ_УР_АКТИВЕН__КОМ_ВПО_ИЗМН_ЗД_VзР_ИГНОР,

      НЕТ_ДОСТОВЕРНОСТИ_ДИАМЕТРА__РАБОТА_РЕГ_ДК_ПРИОСТАНОВЛЕНА,
      НЕТ_ДОСТОВЕРНОСТИ_Т_НАГРЕВАТЕЛЯ__РАБОТА_РЕГ_ТН_ПРИОСТАНОВЛЕНА,
      НЕТ_ДОСТОВЕРНОСТИ_Т_РАСПЛАВА__РАБОТА_РЕГ_ТР_ПРИОСТАНОВЛЕНА,

      РЕГ_VзР_ВКЛЮЧЕН,
      РЕГ_VзР_ВЫКЛЮЧЕН,
      РЕГ_XзР_ВКЛЮЧЕН,
      РЕГ_XзР_ВЫКЛЮЧЕН,
      РЕГ_VзУ_ВКЛЮЧЕН,
      РЕГ_VзУ_ВЫКЛЮЧЕН,
      РЕГ_XзУ_ВКЛЮЧЕН,
      РЕГ_XзУ_ВЫКЛЮЧЕН,
      РЕГ_Wз_ВКЛЮЧЕН,
      РЕГ_Wз_ВЫКЛЮЧЕН,
      РЕГ_Wз_УГОЛ_ВКЛЮЧЕН,
      РЕГ_Wз_УГОЛ_ВЫКЛЮЧЕН,

      РЕГ_VтР_ВКЛЮЧЕН,
      РЕГ_VтР_ВЫКЛЮЧЕН,
      РЕГ_XтР_ВКЛЮЧЕН,
      РЕГ_XтР_ВЫКЛЮЧЕН,
      РЕГ_VтУ_ВКЛЮЧЕН,
      РЕГ_VтУ_ВЫКЛЮЧЕН,
      РЕГ_XтУ_ВКЛЮЧЕН,
      РЕГ_XтУ_ВЫКЛЮЧЕН,
      РЕГ_Wт_ВКЛЮЧЕН,
      РЕГ_Wт_ВЫКЛЮЧЕН,
      РЕГ_Wт_УГОЛ_ВКЛЮЧЕН,
      РЕГ_Wт_УГОЛ_ВЫКЛЮЧЕН
};
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ КАЧЕСТВА ТАРИРОВКИ ===============*/
/*========= КОНЦА ЗАТРАВКИ И УРОВНЯ РАСПЛАВА  ===============*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_КОНЦА_ЗАТРАВКИ_НЕУД = РЕГ_Wт_УГОЛ_ВЫКЛЮЧЕН + 1,
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_КОНЦА_ЗАТРАВКИ_УДОВЛ,
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_КОНЦА_ЗАТРАВКИ_ОТЛ,
      ПК_ПИВ_ОШИБКА_КОНТРОЛЯ_КАЧ_ТАРИРОВКИ_КОНЦА_ЗАТРАВКИ,
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_УРОВНЯ_РАСПЛАВА_НЕУД,
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_УРОВНЯ_РАСПЛАВА_УДОВЛ,
      ПК_ПИВ_КАЧ_ТАРИРОВКИ_УРОВНЯ_РАСПЛАВА_ОТЛ,
      ПК_ПИВ_ОШИБКА_КОНТРОЛЯ_КАЧ_ТАРИРОВКИ_УРОВНЯ_РАСПЛАВА
};
/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ПРОЦЕССОВ УПРАВЛЕНИЯ =============*/
/*========= ПЕРЕМЕЩЕНИЯМИ ПО КООРДИНАТАМ ====================*/
/*===========================================================*/
/*===========================================================*/
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ПРОЦЕССОВ УПРАВЛЕНИЯ =============*/
/*========= ПЕРЕМЕЩЕНИЯМИ ЗАТРАВКИ ==========================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   ПК_ПИВ_КООРД_ЗАТ_НЕОПРЕДЕЛЕНА = ПК_ПИВ_ОШИБКА_КОНТРОЛЯ_КАЧ_ТАРИРОВКИ_УРОВНЯ_РАСПЛАВА + 1,
   ПК_ПИВ_ЗАТ_В_КВП,
   ПК_ПИВ_ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ,
   ПК_ПИВ_ЗАТ_В_ОБЛАСТИ_РАЗРЕШЕНИЯ_ВРАЩЕНИЯ_ДО_ДП,
   ПК_ПИВ_ЗАТ_В_ПОЛОЖЕНИИ_ПРИВЯЗКИ,
   ПК_ПИВ_ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРИВЯЗКИ,
   ПК_ПИВ_ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА,
   ПК_ПИВ_ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРОГРЕВА,
   ПК_ПИВ_ЗАТ_В_КНП,

   /* УР - уровень расплава      КЗ - координата затравки */
   ПК_ПИВ_ОШИБКА_ИНИЦИАЛИЗАЦИИ_ГЕОМЕТРИИ_ТИГЛЯ,
   /* L_КЗ_УР - расстояние между координатой затравки и уровнем расплава */
   ПК_ПИВ_НЕВОЗМОЖНО_ВЫЧИСЛИТЬ_L_КЗ_УР___НЕТ_КООР_ЗАТ,
   ПК_ПИВ_НЕВОЗМОЖНО_ВЫЧИСЛИТЬ_L_КЗ_УР___НЕТ_КООР_ТИГ,
   ПК_ПИВ_L_КЗ_УР_МЕНЬШЕ_НУЛЯ,
   ПК_ПИВ_КОНЦЕВИК_ЗАТ_КВП_НЕ_ОБНАРУЖЕН,
   ПК_ПИВ_КОНЦЕВИК_ЗАТ_КНП_НЕ_ОБНАРУЖЕН,
   ПК_ПИВ_ПОТЕРЯ_КООРД_ЗАТР_ПРИ_ДВИЖЕНИИ_К_КВП,
   ПК_ПИВ_ПОТЕРЯ_КООРД_ЗАТР_ПРИ_ДВИЖЕНИИ_К_КНП,

   ПК_ПИВ_БОЛЬШАЯ_МАССА_ЗАТР_ТАРИРОВКА_ПО_ДП_НЕДОПУСТИМА,
   ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ПОДЪЕМЕ_ЗАТРАВКИ,
   ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ПЕРЕКРЫТИИ_ЗАТРАВКОДЕРЖАТЕЛЕМ,
   ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ОПУСКАНИИ_ЗАТРАВКИ,
   ПК_ПИВ_НЕОЖИДАННЫЙ_ОСТАНОВ_ЗАТРАВКИ_В_РЕЖИМЕ_ПРИВЯЗКИ,
   ПК_ПИВ_НЕОЖИДАННЫЙ_ОСТАНОВ_ЗАТРАВКИ_ВО_ВРЕМЯ_ПРИВЯЗКИ,

   ПК_ПИВ_КООРДИНАТА_ЗАТРАВКИ_ПО_ДП_ОТТАРИРОВАНА,
   ПК_ПИВ_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ДП,
   ПК_ПИВ_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ПНУР,
   ПК_ПИВ_ДЛИНА_ЗАТРАВОЧНОГО_МОНОКРИСТАЛЛА,

/*   ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗАТРАВКИ_ЗВ_ЗАКРЫТ, */
   ПК_ПИВ_ДВИЖЕНИЕ_ЗАТРАВКИ_К_ЗВ,
   ПК_ПИВ_ОСТАНОВ_ВРАЩЕНИЯ_ЗАТРАВКИ_ЗАПРЕТ_ВРАЩЕНИЯ,

   ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ЗАТР_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ
};

/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ПРОЦЕССОВ УПРАВЛЕНИЯ =============*/
/*========= ПЕРЕМЕЩЕНИЯМИ ТИГЛЯ =============================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   ПК_ПИВ_КООРД_ТИГ_НЕОПРЕДЕЛЕНА =
         ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ЗАТР_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ + 1,
   ПК_ПИВ_ТИГ_В_КВП,
   ПК_ПИВ_ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР,
   ПК_ПИВ_ТИГ_В_ПОЛОЖЕНИИ_ПЗУР,
   ПК_ПИВ_ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР,
   ПК_ПИВ_ТИГ_В_КНП,

   ПК_ПИВ_ПОТЕРЯ_КООРД_ТИГ_ПРИ_ДВИЖЕНИИ_К_КНП,
   ПК_ПИВ_ПОТЕРЯ_КООРД_ТИГ_ПРИ_ДВИЖЕНИИ_К_КВП,
   ПК_ПИВ_КОНЦЕВИК_ТИГ_КВП_НЕ_ОБНАРУЖЕН,
   ПК_ПИВ_КОНЦЕВИК_ТИГ_КНП_НЕ_ОБНАРУЖЕН,

   ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_УРОВНЯ_РАСПЛАВА,
   ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ
};
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ    ВПО =============*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ВПО =
         ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ + 1

};
/*===========================================================*/
/*========= КОДЫ СООБЩЕНИЙ ИЗМЕНЕНИЙ ФП         =============*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   ПК_ПИВ_ФП_Qгаза = ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ + 1,
/* ИП_ЛИТ */
   ПК_ПИВ_ФП_ПотокОхлаждВоды_ИП2К_К1,
   ПК_ПИВ_ФП_ТемператураОхлНаВходе_ИП2К_К1,
   ПК_ПИВ_ФП_ТемператураОхлНаВыходе_ИП2К_К1,
   ПК_ПИВ_ФП_Rиз_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля0_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля1_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля2_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля3_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля4_ИП2К_К1,
   ПК_ПИВ_ФП_ТокМодуля5_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля0_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля1_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля2_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля3_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля4_ИП2К_К1,
   ПК_ПИВ_ФП_ТемпМодуля5_ИП2К_К1,
   ПК_ПИВ_ФП_СостояниеМодуля_ИП2К_К1,
   ПК_ПИВ_ФП_U380_ИП2К_К1,
   ПК_ПИВ_ФП_PSW_ИП2К_К1,

   ПК_ПИВ_ФП_Iипн_К1,
   ПК_ПИВ_ФП_Uипн_К1,
   ПК_ПИВ_ФП_Wипн_К1,
   ПК_ПИВ_ФП_Rипн_К1,
   ПК_ПИВ_ФП_Iипн_К2,
   ПК_ПИВ_ФП_Uипн_К2,
   ПК_ПИВ_ФП_Wипн_К2,
   ПК_ПИВ_ФП_Rипн_К2,
   ПК_ПИВ_ФП_Тдтн,
   ПК_ПИВ_ФП_Тн,
   ПК_ПИВ_ФП_PSWдтн,
   ПК_ПИВ_ФП_Тдтр,
   ПК_ПИВ_ФП_Тр,
   ПК_ПИВ_ФП_PSWдтр,
   ПК_ПИВ_ФП_Hур,
   ПК_ПИВ_ФП_Hур_ДУ,
   ПК_ПИВ_ФП_Hур_ДВ,
   ПК_ПИВ_ФП_STAT,
   ПК_ПИВ_ФП_PEAKW,
   ПК_ПИВ_ФП_PEAKC,
   ПК_ПИВ_ФП_RANGE,
   ПК_ПИВ_ФП_DISP,
   ПК_ПИВ_ФП_MEAN,
   ПК_ПИВ_ФП_LASER,

   ПК_ПИВ_ФП_Vроста,
   ПК_ПИВ_ФП_Vподрезки,
   ПК_ПИВ_ФП_Dкр,
   ПК_ПИВ_ФП_Dкр_ТДД,
   ПК_ПИВ_ФП_Dкр_ДВ,
   ПК_ПИВ_ФП_DeltaX,
   ПК_ПИВ_ФП_DeltaY,
   ПК_ПИВ_ФП_Твк1,
   ПК_ПИВ_ФП_Твк2,
   ПК_ПИВ_ФП_Твк3,
   ПК_ПИВ_ФП_Твк4,
   ПК_ПИВ_ФП_Твк5,
   ПК_ПИВ_ФП_Твк6,
   ПК_ПИВ_ФП_Твк7,
   ПК_ПИВ_ФП_Твк8,
   ПК_ПИВ_ФП_Uдк,
   ПК_ПИВ_ФП_Pнк,
   ПК_ПИВ_ФП_Pвк,
   ПК_ПИВ_ФП_Pавд1,
   ПК_ПИВ_ФП_Pавд2,
   ПК_ПИВ_ФП_ВЕЛИЧИНА_НАТЕКАНИЯ,
   ПК_ПИВ_ФП_Ммонокристалла,
   ПК_ПИВ_ФП_Мкремния_в_тигле,
   ПК_ПИВ_ФП_ГлубинаРасплава,
   ПК_ПИВ_ОП_Dзеркала_расплава,
   ПК_ПИВ_ФП_Lмонокристалла,
   ПК_ПИВ_ФП_Lтекущей_части_монокристалла,
   ПК_ПИВ_ФП_ВремяТекущегоЭтапа,


   ПК_ПИВ_ФП_МассаЗатравливания             ,
   ПК_ПИВ_ФП_МассаПереходаЗатравка_Шейка    ,
   ПК_ПИВ_ФП_МассаШейки                     ,
   ПК_ПИВ_ФП_МассаПереходаШейка_Конус       ,
   ПК_ПИВ_ФП_МассаКонуса                    ,
   ПК_ПИВ_ФП_МассаПереходаКонус_Цилиндр     ,
   ПК_ПИВ_ФП_МассаСтабилизацииЦилиндра       ,
   ПК_ПИВ_ФП_МассаЦилиндра                  ,
   ПК_ПИВ_ФП_МассаПереходаЦилиндр_ОбрКонус  ,
   ПК_ПИВ_ФП_МассаОбратногоКонуса           ,

   ПК_ПИВ_ФП_ДлинаЗатравливания             ,
   ПК_ПИВ_ФП_ДлинаПереходаЗатравка_Шейка    ,
   ПК_ПИВ_ФП_ДлинаШейки                     ,
   ПК_ПИВ_ФП_ДлинаПереходаШейка_Конус       ,
   ПК_ПИВ_ФП_ДлинаКонуса                    ,
   ПК_ПИВ_ФП_ДлинаПереходаКонус_Цилиндр     ,
   ПК_ПИВ_ФП_ДлинаСтабилизацииЦилиндра       ,
   ПК_ПИВ_ФП_ДлинаЦилиндра                  ,
   ПК_ПИВ_ФП_ДлинаПереходаЦилиндр_ОбрКонус  ,
   ПК_ПИВ_ФП_ДлинаОбратногоКонуса           ,

   ПК_ПИВ_ФП_I_ЗР,
   ПК_ПИВ_ФП_I_ЗУ,
   ПК_ПИВ_ФП_I_ЗВ,
   ПК_ПИВ_ФП_I_ТР,
   ПК_ПИВ_ФП_I_ТУ,
   ПК_ПИВ_ФП_I_ТВ,
   ПК_ПИВ_ФП_VзР,
   ПК_ПИВ_ФП_VзУ,
   ПК_ПИВ_ЗД_Vз,
   ПК_ПИВ_ФП_Vз,
   ПК_ПИВ_ФП_Xз,
   ПК_ПИВ_ФП_Wз,
   ПК_ПИВ_ФП_Wз_УГОЛ,
   ПК_ПИВ_ФП_VтР,
   ПК_ПИВ_ФП_VтУ,
   ПК_ПИВ_ЗД_Vт,
   ПК_ПИВ_ФП_Vт,
   ПК_ПИВ_ФП_Xт,
   ПК_ПИВ_ФП_Wт,
   ПК_ПИВ_ФП_Wт_УГОЛ,
   ПК_ПИВ_ФП_L_КЗ_УР

};

/*===========================================================*/
/*===    КОДЫ СООБЩЕНИЙ О ПОПЫТКЕ ИЗМЕНЕНИЯ НП    ===========*/
/*   ВНИМАНИЕ!!! НИ ОДНО ИЗ СООБЩЕНИЙ ДАННОГО ПЕРЕЧИСЛЕНИЯ   */
/*                В ПРОГРАММЕ НЕ ИСПОЛЬЗУЕТСЯ                */
/*     МОЖЕТ ВЫКИНУТЬ ЕГО НАХРЕН                             */
/*     (СЛЕДУЕТ ПОХЕРИТЬ)                                    */
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ { /* !!!!!! Просмотреть и лишние уничтожить */
      ПК_ПИВ_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1_ВНЕ_ДИАПАЗОНА = ПК_ПИВ_ФП_L_КЗ_УР + 1,
      ПК_ПИВ_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_МаксимальнаяVзР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Lз_ОТ_КВП_ДО_ДП_Lппз_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Lт_ОТ_КНП_ДО_КВП_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаQгаза_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПогрешностьQгаза_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Pпор_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_НА_ОТКР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_НА_ЗАКР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаPнк_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаWптд_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_Wипн_К1_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ТипИП_К1Н_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Пауза_Wипн_К1_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПогрешностьWипн_К1_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Iптд_МАХ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Wипн_К1_МАХ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ДелтаW_Разогрева_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ДелтаВремениРазогрева_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Тн_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_Тн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кд_Тн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Ки_Тн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кз_Тн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаТн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПогрешностьТн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Пауза_Тн_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_Тр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кд_Тр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Ки_Тр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кз_Тр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Пауза_Тр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Тр_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаТр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПогрешностьТр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ДелтаТр_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПоправкаVтР_Нур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Dк_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ЗР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ЗР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ЗУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ЗУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ЗВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ЗВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ТУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ТУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_V_ТВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_X_ТВ_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_НП_РАБ_УСК_ЗР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ЗР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ЗР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАБ_УСК_ЗУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ЗУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ЗУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАБ_УСК_ЗВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ЗВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ЗВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАБ_УСК_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАБ_УСК_ТУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ТУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ТУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАБ_УСК_ТВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КОЭФ_А_ТВ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АВР_ТОР_ТВ_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_НП_MIN_ДУ_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_MAX_ДУ_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_MIN_ДУДД_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_MAX_ДУДД_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_ДУ_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_ДУДД_Hур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПредупредительныйHур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_АварийнаяОшибкаHур_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Dкр_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ДелтаVзРС_МАХ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаDкр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ПогрешностьDкр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Пауза_Dкр_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кп_Vроста_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кд_Vроста_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Ки_Vроста_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Кз_Vроста,
      ПК_ПИВ_НП_Пауза_Vроста,
      ПК_ПИВ_НП_ВремяОсредненияVзVроста,
      ПК_ПИВ_НП_VзР_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ДелтаТн_MAX_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_Пауза_РЕГ_РОСТА_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_ВремяПереходногоПроцессаVроста,
      ПК_ПИВ_НП_ПогрешностьVроста_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КоэфА_Pнк_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_КоэфВ_Pнк_ВНЕ_ДИАПАЗОНА,


/* !!!!! ЭТИ НЕ ТРОГАТЬ !!! ИСПОЛЬЗУЮТСЯ */
      ПК_ПИВ_НП_Lз_ОТ_КВП_ДО_КНП_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ГЕОМЕТРИЯ_ТИГЛЯ_РАССЧИТАНА_УСПЕШНО,
      ПК_ПИВ_ВВЕДЕННЫЕ_РАДИУСЫ_НЕ_ПОЗВОЛЯЮТ_РАССЧИТАТЬ_ГЕОМЕТРИЮ_ТИГЛЯ

/*      ПК_ПИВ_НП_РАДИУС_СТЕНКИ_ТИГЛЯ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАДИУС_ДНА_ТИГЛЯ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ_ВНЕ_ДИАПАЗОНА
*/

};

/*===========================================================*/
/*=== КОДЫ СООБЩЕНИЙ О ПОПЫТКЕ ИЗМЕНЕНИЯ ЗАДАНИЙ  ===========*/
/*===========================================================*/
/*===КОДЫ СООБЩЕНИЙ ПРОЦЕССОВ УПРАВЛЕНИЯ РЕГУЛЯТОРАМИ =======*/
ПЕРЕЧИСЛЕНИЕ {
          /*регулятор расхода газа */
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_РГ_ВНЕ_ДИАПАЗОНА =
         ПК_ПИВ_ВВЕДЕННЫЕ_РАДИУСЫ_НЕ_ПОЗВОЛЯЮТ_РАССЧИТАТЬ_ГЕОМЕТРИЮ_ТИГЛЯ + 1,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Д_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_W_ИПН_К1_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_W_ИПН_К2_ВНЕ_ДИАПАЗОНА,
/*      ВРЕМЕННАЯ_ЗАГЛУШКА_ПК_ПИВ_ЗД_ДЛЯ_РЕГ_W_ИПН_К2_ВНЕ_ДИАПАЗОНА,*/ /*уничтожить*/

      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ТН_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ТР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_РОСТА_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_БАЗА_РЕГ_РОСТА_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_УР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ДК_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VзР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VзУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Xз_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Wз_ВНЕ_ДИАПАЗОНА,

      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VтР_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VтУ_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Xт_ВНЕ_ДИАПАЗОНА,
      ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Wт_ВНЕ_ДИАПАЗОНА


};

/* координата затравки, тигля */

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗР = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Wт_ВНЕ_ДИАПАЗОНА + 1,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗР,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗР,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗР,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗР,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗР,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗР,
    ПК_ПИВ_ЗР_РЕСТАРТЫ,           /* добавлено */

    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗУ,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗУ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗУ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗУ,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗУ,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗУ,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗУ,
    ПК_ПИВ_ЗУ_РЕСТАРТЫ,           /* добавлено */


    ПК_ПИВ_НАЕЗД_НА_КВП_З,
    ПК_ПИВ_НАЕЗД_НА_КНП_З,
    ПК_ПИВ_СЪЕЗД_С_ДКП_З,

    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗВ,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗВ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗВ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗВ,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗВ,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗВ,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗВ,
    ПК_ПИВ_ЗВ_РЕСТАРТЫ,           /* добавлено */


    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТР,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТР,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТР,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТР,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТР,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТР,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТР,
    ПК_ПИВ_ТР_РЕСТАРТЫ,           /* добавлено */


    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТУ,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТУ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТУ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТУ,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТУ,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТУ,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТУ,
    ПК_ПИВ_ТУ_РЕСТАРТЫ,           /* добавлено */


    ПК_ПИВ_НАЕЗД_НА_КВП_Т,
    ПК_ПИВ_НАЕЗД_НА_КНП_Т,
    ПК_ПИВ_СЪЕЗД_С_ДКП_Т,

    ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТВ,
    ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТВ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТВ,
    ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТВ,
    ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТВ,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТВ,
    ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТВ,
    ПК_ПИВ_ТВ_РЕСТАРТЫ,           /* добавлено */


    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР,
    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ,
    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ,

    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР,
    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ,
    СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ,
    СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ
};
/*===================================================*/
/*=== КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА УРОВНЯ    ===========*/
/*===================================================*/

ПЕРЕЧИСЛЕНИЕ {
    КОМАНДА_1_ДАТЧИКИ = СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ + 1,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур = КОМАНДА_1_ДАТЧИКИ, /*используется для передачи признака достоверности данных */
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур_ДУ,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур_ДУ,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур_ДВ,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур_ДВ,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Lмонокристалла,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Lмонокристалла,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр_ТДД,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр_ТДД,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр_ДВ,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр_ДВ,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_ДТН,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_ДТН,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_ДТР,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_ДТР,
    ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_L_КЗ_УР,
    ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_L_КЗ_УР,

    ПК_ПИВ_ДУ_ЗАПУСК_ТЕСТА,
    /**********************************/
    ПК_ПИВ_ДУ_ГОТОВ_К_РАБОТЕ,
    ПК_ПИВ_ДУ_СНЯТЬ_КОЭФФИЦИЕНТЫ,
    ПК_ПИВ_ДУ_НАЧАЛО_СНЯТИЯ_КОЭФФИЦИЕНТОВ,
    ПК_ПИВ_ДУ_КОНЕЦ_СНЯТИЯ_КОЭФФИЦИЕНТОВ,
    ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_КОЭФФИЦИЕНТОВ_ИСТЕК,

    ПК_ПИВ_ДУ_СНЯТЬ_ВРЕМЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА_0, /* в ДУ  ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME0 */
    ПК_ПИВ_ДУ_СНЯТЬ_ВРЕМЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА_1, /* в ДУ  ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME1 */
    ПК_ПИВ_ДУ_НАЧАЛО_СНЯТИЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА,
    ПК_ПИВ_ДУ_КОНЕЦ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗИЦИИ_ЛАЗЕРА,
    ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗ_ЛАЗ_ИСТЕК,

    ПК_ПИВ_ДУ_УРОВЕНЬ_ДОСТОВЕРЕН,
    ПК_ПИВ_ДУ_УРОВЕНЬ_НЕ_ДОСТОВЕРЕН,

    ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0,
    ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_УСПЕШНА,
    ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_НЕ_УСПЕШНА,
    ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1,
    ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_УСПЕШНА,
    ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_НЕ_УСПЕШНА,
    ПК_ПИВ_ДУ_ПРЕРВАТЬ_АДАРПТАЦИЮ,
    ПК_ПИВ_ДУ_ВКЛ_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА,
    ПК_ПИВ_ДУ_ВЫК_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА,

    ПК_ПИВ_ДУ_НАЧАЛО_КАЛИБРОВКИ,
    ПК_ПИВ_ДУ_КАЛИБРОВКА_ВЫПОЛНЯЕТСЯ,
    ПК_ПИВ_ДУ_КОНЕЦ_КАЛИБРОВКИ_ПО_ТОЧКЕ,
    ПК_ПИВ_ДУ_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО,
    ПК_ПИВ_ДУ_РЕЖИМ_ИЗМЕРЕНИЯ,
    ПК_ПИВ_ДУ_КОД_РЕСТАРТА,
    ПК_ПИВ_ДУ_РЕСТАРТЫ,               /* добавлено */
    ПК_ПИВ_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ,
    ПК_ПИВ_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ,
    ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0,
    ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1,
    ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0,
    ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1,
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДУ,
    ПК_ПИВ_ДУ_РЕЖИМ_АДАПТАЦИИ,

    ПК_ПИВ_ДУ_ПРЕРВАТЬ_КАЛИБРОВКУ,
    ПК_ПИВ_ДУ_КАЛИБРОВКА_ПО_ТОЧКЕ,

    ПК_ПИВ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ДУ,

    ПК_ПИВ_ДУ_КОНЕЦ_РАБОТЫ
};
/*===================================================*/
/*=== КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА ДИАМЕТРА  ===========*/
/*===================================================*/
ПЕРЕЧИСЛЕНИЕ {
/* общие команды сообщения */
    ПК_ПИВ_ТДД_ГОТОВ_К_РАБОТЕ = ПК_ПИВ_ДУ_КОНЕЦ_РАБОТЫ + 1,
    ПК_ПИВ_ТДД_ОШИБКА_ФАТАЛЬНАЯ,
    ПК_ПИВ_ТДД_ОШИБКА_ВНУТРЕННЯЯ,      /* добавлено */
    ПК_ПИВ_ТДД_КОД_РЕСТАРТА,
    ПК_ПИВ_ТДД_РЕСТАРТЫ,               /* добавлено */
    ПК_ПИВ_ТДД_СНЯТЬ_КОЭФФИЦИЕНТЫ,
    ПК_ПИВ_ТДД_НАЧАЛО_СНЯТИЯ_КОЭФФИЦИЕНТОВ,
    ПК_ПИВ_ТДД_КОНЕЦ_СНЯТИЯ_КОЭФФИЦИЕНТОВ,
    ПК_ПИВ_ТДД_ТАЙМАУТ_СНЯТИЯ_КОЭФФИЦИЕНТОВ_ИСТЕК,

    ПК_ПИВ_ТДД_ТЕСТ_ОЗУ,
    ПК_ПИВ_ТДД_ТЕСТ_ОЗУ_БЕЗ_ОШИБОК,
    ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_ОЗУ,

    ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП,
    ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП,

    ПК_ПИВ_ТДД_ПОИСК_ДИАМЕТРА,
    ПК_ПИВ_ТДД_ДИАМЕТР_НЕ_НАЙДЕН,
    ПК_ПИВ_ТДД_ДИАМЕТР_НЕ_ДОСТОВЕРЕН,
    ПК_ПИВ_ТДД_ДИАМЕТР_ДОСТОВЕРЕН,

    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ТДД,
    ПК_ПИВ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ТДД,

/* большое поле - БП */
    ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП,
    ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП,

    ПК_ПИВ_ТДД_ТЕСТ_БП,
    ПК_ПИВ_ТДД_ТЕСТ_БП_БЕЗ_ОШИБОК,
    ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_БП,
    ПК_ПИВ_ТДД_КАМЕРА_БП,

    ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП,
    ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП,

    ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС,
    ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП_ПЛЮС,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП_ПЛЮС,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП_ПЛЮС,

/* малое поле - МП */
    ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП,
    ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП,

    ПК_ПИВ_ТДД_ТЕСТ_МП,
    ПК_ПИВ_ТДД_ТЕСТ_МП_БЕЗ_ОШИБОК,
    ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_МП,
    ПК_ПИВ_ТДД_КАМЕРА_МП,

    ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП,
    ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП,

    ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС,
    ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП_ПЛЮС,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП_ПЛЮС,
    ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП_ПЛЮС,

    ПК_ПИВ_ТДД_КОНЕЦ_РАБОТЫ
};
/*=====================================================*/
/*= КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА ТЕМПЕРАТУРЫ НАГРЕВАТЕЛЯ =*/
/*=====================================================*/

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ДТН_ЗАПУСК_ТЕСТА = ПК_ПИВ_ТДД_КОНЕЦ_РАБОТЫ + 1,
    ПК_ПИВ_ДТН_ТЕСТ_БЕЗ_ОШИБКИ,
    ПК_ПИВ_ДТН_ОШИБКА_ТЕСТА,

    ПК_ПИВ_ДТН_ГОТОВ_К_РАБОТЕ,

    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДТН,
    ПК_ПИВ_ДТН_РЕСТАРТЫ,               /* добавлено */
    ПК_ПИВ_Т_СМЕЩЕНИЯ_НЕ_РАССЧИТАНА_НЕТ_ИСХОДНОГО_ДТН, /*не от датчика */

    ПК_ПИВ_ДТН_ОШИБКА_ФАТАЛЬНАЯ,
    ПК_ПИВ_ДТН_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ,
    ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ,
    ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ,
    ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_В_НОРМЕ
};
/*=====================================================*/
/*=  КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА ТЕМПЕРАТУРЫ РАСПЛАВА   =*/
/*=====================================================*/

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ДТР_ЗАПУСК_ТЕСТА = ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_В_НОРМЕ + 1,
    ПК_ПИВ_ДТР_ТЕСТ_БЕЗ_ОШИБКИ,
    ПК_ПИВ_ДТР_ОШИБКА_ТЕСТА,

    ПК_ПИВ_ДТР_ГОТОВ_К_РАБОТЕ,

    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДТР,
    ПК_ПИВ_ДТР_РЕСТАРТЫ,               /* добавлено */
    ПК_ПИВ_Т_СМЕЩЕНИЯ_НЕ_РАССЧИТАНА_НЕТ_ИСХОДНОГО_ДТР, /*не от датчика */

    ПК_ПИВ_ДТР_ОШИБКА_ФАТАЛЬНАЯ,
    ПК_ПИВ_ДТР_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ,
    ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ,
    ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ,
    ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_В_НОРМЕ

};

/*=====================================================*/
/*=    КОДЫ СООБЩЕНИЙ ОТ ИСТОЧНИКА ПИТАНИЯ            =*/
/*=====================================================*/
/* ИП_ЛИТ */
ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ОТКАЗ_ИП2К_К1 = ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_В_НОРМЕ + 1,
    ПК_ПИВ_ИП2К_К1_ГОТОВ_К_РАБОТЕ,
    ПК_ПИВ_ВКЛЮЧЕН_ИП2К_К1,
    ПК_ПИВ_ВЫКЛЮЧЕН_ИП2К_К1,
    ПК_ПИВ_ИП2К_К1_РЕСТАРТЫ,               /* добавлено */
    ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ИП2К_К1
};


/*=====================================================*/
/*=  КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА ПРИВЯЗКИ               =*/
/*=====================================================*/

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ВКЛ_ЛАЗЕР_ДП = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ИП2К_К1 + 1,
    ПК_ПИВ_ДП_ВЫКЛЮЧЕН,
    ПК_ПИВ_ЛУЧ_ДП_ДОСТИГ_ФОТОПРИЕМНИКА,
    ПК_ПИВ_ЛУЧ_ДП_ПЕРЕКРЫТ_ПРЕПЯТСТВИЕМ,
    КОМАНДА_N_ДАТЧИКИ = ПК_ПИВ_ЛУЧ_ДП_ПЕРЕКРЫТ_ПРЕПЯТСТВИЕМ
};

/*=====================================================*/
/*=  КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА КАСАНИЯ                =*/
/*=====================================================*/

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_ДК_ЕСТЬ_КАСАНИЕ = КОМАНДА_N_ДАТЧИКИ + 1,
    ПК_ПИВ_ДК_НЕТ_КАСАНИЯ,
    ПК_ПИВ_ДК_В_НОРМЕ,
    ПК_ПИВ_ОШИБКА_ДК
};

/*=====================================================*/
/*=  КОДЫ СООБЩЕНИЙ О НАЧАЛЕ ЧАСТИ КРИСТАЛЛА          =*/
/*=====================================================*/

ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_КООРДИНАТА_КАСАНИЯ_РАСПЛАВА_ПРИ_ЗАТРАВЛИВАНИИ
          = ПК_ПИВ_ОШИБКА_ДК + 1,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ЗАТРАВЛИВАНИЯ,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ЗАТРАВКА_ШЕЙКА,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ШЕЙКИ,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ШЕЙКА_КОНУС,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_КОНУСА,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_КОНУС_ЦИЛИНДР,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_СТАБИЛИЗАЦИИ_ЦИЛИНДРА,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ЦИЛИНДРА,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ЦИЛИНДР_ОБР_КОНУС,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ОБР_КОНУСА,
    ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ТЕК_ЧАСТИ,
    ПК_ПИВ_КООРДИНАТА_ОТРЫВА_МОНОКРИСТАЛЛА
};
/*===================================================*/
/*===         КОДЫ СООБЩЕНИЙ РЕЖИМА РА    ===========*/
/*===================================================*/
ПЕРЕЧИСЛЕНИЕ {
/*            контроль исходного положения           */
/*            контрольное вакуумирование             */
    ПК_ПИВ_РА_Т2_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО = ПК_ПИВ_КООРДИНАТА_ОТРЫВА_МОНОКРИСТАЛЛА + 1,
    ПК_ПИВ_РА_Т5_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО,
/*              контроль натекания                  */
    ПК_ПИВ_РА_ГЕРМЕТИЧНОСТЬ_УСТАНОВКИ_В_НОРМЕ,
    ПК_ПИВ_РА_УСТАНОВКА_НЕГЕРМЕТИЧНА,
    ПК_ПИВ_РА_ВЕЛИЧИНА_НАТЕКАНИЯ,
/*              рабочее вакуумирование              */
    ПК_ПИВ_РА_Т7_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО,
/*          подготовка к плавлению загрузки       */
/*              плавлению загрузки                  */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ПЛАВЛЕНИЕ_ЗАГРУЗКИ,
    ПК_ПИВ_РА_ПОЯВИЛСЯ_РАСПЛАВ,				
    ПК_ПИВ_РА_ЗАГРУЗКА_В_ОСНОВНОМ_РАСПЛАВЛЕНА,
/*         подготовка к стабилизации расплава       */
/*                стабилизация расплава             */
/*   ПК_ПИВ_РА_ПОПРАВКА_ДТН_СТАБ, */
    ПК_ПИВ_РА_СТАБ_РАСПЛАВА_ЗАВЕРШЕНА,
    ПК_ПИВ_РА_ВРЕМЯ_НА_СТАБ_РАСПЛАВА_ИСТЕКЛО,
    ПК_ПИВ_РА_СТАБ_РАСПЛАВА_ОТКАЗ_ДТН_ПОПРАВКА_ТН_НЕОПРЕДЕЛЕНА,
/*    ПК_ПИВ_РА_ПОПРАВКА_ТП_ПРОГР,*/
/*      перемещение затравки в положение прогрева   */
/*               тп прогрев затравки                */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ПРОГРЕВ_ЗАТРАВКИ,
/*               затравливание                      */

    ПК_ПИВ_РА_КООРДИНАТА_НАЧАЛА_ШЕЙКИ,

    ПК_ПИВ_РА_РАСПЛАВ_НЕ_ОБНАРУЖЕН,
    ПК_ПИВ_РА_КООРДИНАТА_КАСАНИЯ,
    ПК_ПИВ_РА_ЕСТЬ_КАСАНИЕ,
    ПК_ПИВ_РА_ПРИ_ПЛАВЛ_ЗАТР_ДИАМЕТР_В_ЗАД_ДИАПАЗОНЕ_НЕ_ОБНАРУЖЕН,
    ПК_ПИВ_РА_ДЕНДРИТЫ__ТРЕБУЕТСЯ_ВМЕШАТЕЛЬСТВО_ОПЕРАТОРА,
    ПК_ПИВ_РА_ОТСУТСТВИЕ_КОНТАКТА_КРИСТАЛЛ_РАСПЛАВ,
    ПК_ПИВ_РА_ЕСТЬ_КОНТАКТ_КРИСТАЛЛ_РАСПЛАВ,
/*              тп выращивание перехода затравка-шейка  */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ПЕРЕХОДА_ЗАТРАВКА_ШЕЙКА,
/*           выращивание шейки                   */
    ПК_ПИВ_РА_ШЕЙКА_ПОПРАВКА_ДТН,
    /*    ПК_ДТН_РА_ПОПРАВКА_ДТН,  */
    ПК_ПИВ_РА_ВКЛЮЧЕН_БЕЗОПАСНЫЙ_РЕЖИМ_ВЫРАЩИВАНИЯ_ШЕЙКИ,
    ПК_ПИВ_РА_ВЫКЛЮЧЕН_БЕЗОПАСНЫЙ_РЕЖИМ_ВЫРАЩИВАНИЯ_ШЕЙКИ,
    ПК_ПИВ_РА_ДИАМЕТР_КРИСТАЛЛА_МЕНЬШЕ_БЕЗОПАСНОГО,
    ПК_ПИВ_РА_ШЕЙКА_НЕ_УТОНЧАЕТСЯ,
    ПК_ПИВ_РА_КАЧЕСТВЕННАЯ_ШЕЙКА_НЕ_РАСТЕТ,
/*              тп выращивание перехода шейка-конус  */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ПЕРЕХОДА_ШЕЙКА_КОНУС,
/*           выращивание конуса                   */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_КОНУСА,
    ПК_ПИВ_РА_КООРДИНАТА_НАЧАЛА_КОНУСА,
    ПК_ПИВ_РА_КОНУС_ПОПРАВКА_ДТН,
/*           переход конус-цилиндр                */
    ПК_ПИВ_РА_ПРЕДУПР__ФОРМ_ПЕРЕХОДА_К_Ц_ЗА_ЗАД_ВРЕМЯ_НЕВОЗМОЖНО,
/*           стабилизация цилиндра                  */
    ПК_ПИВ_РА_КООРДИНАТА_НАЧАЛА_ЦИЛИНДРА,
    ПК_ПИВ_РА_ОГРАНИЧЕНИЕ_ПО_МАССЕ_ЦИЛ_ПЕРЕХОД_НА_ОБР_КОНУС,
    ПК_ПИВ_РА_ОГРАНИЧЕНИЕ_ПО_ДЛИНЕ_ЦИЛ_ПЕРЕХОД_НА_ОБР_КОНУС,
/*          тп выращивание цилиндра                  */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА,
/*    тп выращивание перехода цилиндр-обратный конус   */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ПЕРЕХОДА_ЦИЛИНДР_ОБР_КОНУС,
/*          тп выращивание обратного конуса          */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ОБРАТНОГО_КОНУСА,
    ПК_ПИВ_РА_КООРДИНАТА_НАЧАЛА_ОБРАТНОГО_КОНУСА,
/*           отрыв кристалла                  */
    ПК_ПИВ_РА_НЕТ_ОТРЫВА_КРИСТАЛЛА,
/*          тп охлаждение кристалла                 */
    ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ОХЛАЖДЕНИЕ_КРИСТАЛЛА,
/*    подготовка к разгрузке кристалла      */
/* дополнительные сообщения этапа РА  */
    ПК_ПИВ_РА_ПРЕКРАТИТЬ_ОТРАБОТКУ_ТП,
    ПК_ПИВ_КОМАНДА_ПРОИГНОРИРОВАНА__ИДЕТ_ИСПОЛНЕНИЕ_ЭТАПА_РА,
    ПК_ПИВ_ЗАФИКСИРОВАНА_ОШИБКА_РА


};
/*===========================================================*/
/*========= КОНТРОЛЬ ТЕХНИЧЕСКИХ СРЕДСТВ  ===================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
      ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП = ПК_ПИВ_ЗАФИКСИРОВАНА_ОШИБКА_РА + 1,
      ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП,
      ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8,
      ПК_ПИВ_ОТКРЫТЬ_БПК,
      ПК_ПИВ_ЗАКРЫТЬ_БПК,
      ПК_ПИВ_ЗАКРЫТЬ_VE9,
      ПК_ПИВ_ОТКРЫТЬ_VE9,
      ПК_ПИВ_ЗАКРЫТЬ_VE12,
      ПК_ПИВ_ОТКРЫТЬ_VE12,
      ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д,
      ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ,
      ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ,
      ПК_ПИВ_ВЫКЛЮЧИТЬ_НАГРЕВАТЕЛЬ,
      ПК_ПИВ_ВКЛЮЧИТЬ_НАГРЕВАТЕЛЬ,
      ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН,
      ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР,
      ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_УР,
      ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_П_ПРОГРЕВА,
      ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА,
      
      ПК_ПИВ_СОЗДАТЬ_АТМОСФЕРНОЕ_В_НК,
      ПК_ПИВ_СОЗДАТЬ_ВАКУУМ_В_НК,
      ПК_ПИВ_ВЫКЛЮЧИТЬ_НАСОСЫ,
      ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ
};

/*===========================================================*/
/*=========          КОМАНДА Конец ТП     ===================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП = ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ + 1,
    ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ
};


/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ВПО  ===================================*/
/*===========================================================*/
/* код 0 означает переход ВПО в тестовый режим. Может использоваться
при полном выключении системы */
ПЕРЕЧИСЛЕНИЕ {
    ПК_ВПО_ВКЛ_ВПО = 1,
    ПК_ВПО_ВЫК_ВПО,
    ПК_ВПО_ВКЛ_РЕГ_ТН,
    ПК_ВПО_ВЫК_РЕГ_ТН,
    ПК_ВПО_ЗАТ_РС,
    ПК_ВПО_ЗАТ_УС,
    ПК_ВПО_ВЫК_РЕГ_Vз,
    ПК_ВПО_ТИГ_РС,
    ПК_ВПО_ТИГ_УС,
    ПК_ВПО_ВЫК_РЕГ_Vт,
    ПК_ВПО_ЗАТ_ВР,
    ПК_ВПО_ВЫК_ЗАТ_ВР,
    ПК_ВПО_ТИГ_ВР,
    ПК_ВПО_ВЫК_ТИГ_ВР,
    ПК_ВПО_ИНИЦИАЛИЗАЦИЯ,

    ПК_ВПО_ИЗМН_ЗД_Тн,
    ПК_ВПО_ИЗМН_ЗД_VзР,
    ПК_ВПО_ИЗМН_ЗД_VтР,
    ПК_ВПО_ИЗМН_ЗД_VзУ,
    ПК_ВПО_ИЗМН_ЗД_VтУ,
    ПК_ВПО_ИЗМН_ЗД_Wт,
    ПК_ВПО_ИЗМН_ЗД_Wз,
    ПК_ВПО_ИЗМН_ФП_Dкр

};


/*===========================================================*/
/*=== НОМЕРА КАНАЛОВ АЦП ====================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    НОМЕР_КАНАЛА_ЦАП_ЗД_Iптд = 0,
    НОМЕР_КАНАЛА_АЦП_РЕЗЕРВ21,
    НОМЕР_КАНАЛА_АЦП_ФП_Iптд,
    НОМЕР_КАНАЛА_АЦП_ФП_Uптд,
    НОМЕР_КАНАЛА_АЦП_ФП_Qгаза,
    НОМЕР_КАНАЛА_АЦП_РЕЗЕРВ5,
    НОМЕР_КАНАЛА_АЦП_ВК_0_1,
    НОМЕР_КАНАЛА_АЦП_НК_0_45,

/*-------------------------------------*/
    НОМЕР_КАНАЛА_АЦП_ФП_Равд1,
    НОМЕР_КАНАЛА_АЦП_ФП_Равд2,
    НОМЕР_КАНАЛА_АЦП_Рвк,
    НОМЕР_КАНАЛА_АЦП_ПоказанияДатчикаВеса,
    НОМЕР_КАНАЛА_АЦП_Твк1,
    НОМЕР_КАНАЛА_АЦП_Твк2,
    НОМЕР_КАНАЛА_АЦП_Твк3,
    НОМЕР_КАНАЛА_АЦП_Твк4,
/*-------------------------------------*/
    НОМЕР_КАНАЛА_АЦП_Твк5,
    НОМЕР_КАНАЛА_АЦП_Твк6,
    НОМЕР_КАНАЛА_АЦП_Твк7,
    НОМЕР_КАНАЛА_АЦП_Твк8,
    НОМЕР_КАНАЛА_ЦАП_ЗД_Qгаза,
    НОМЕР_КАНАЛА_АЦП_РЕЗЕРВ23,
    НОМЕР_КАНАЛА_АЦП_Uдк

};

/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ПРИВОДАМИ ==============================*/
/*===========================================================*/


/*===========================================================*/
/*========= КОДЫ ПОЛОЖЕНИЙ ЗАТРАВКИ И ТИГЛЯ =================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
   КООРД_ЗАТ_НЕОПРЕДЕЛЕНА = 0,
   ЗАТ_ВЫШЕ_КВП,
   ЗАТ_В_КВП,
   ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ,
   ЗАТ_В_ОБЛАСТИ_РАЗРЕШЕНИЯ_ВРАЩЕНИЯ_ДО_ДП,
   ЗАТ_В_ПОЛОЖЕНИИ_ПРИВЯЗКИ,
   ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРИВЯЗКИ,
   ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА,
   ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРОГРЕВА,
   ЗАТ_В_КНП,
   ЗАТ_НИЖЕ_КНП
};
ПЕРЕЧИСЛЕНИЕ {
   КООРД_ТИГ_НЕОПРЕДЕЛЕНА = 0,
   ТИГ_В_КВП,
   ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР,
   ТИГ_В_ПОЛОЖЕНИИ_ПЗУР,
   ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР,
   ТИГ_В_КНП
};


/*============ Vз Рабочее====================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ЗР_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ЗР_ГОТОВ_К_РАБОТЕ,
    ПК_ЗР_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ЗР_ОТКАЗ_ДАТЧИКА,
    ПК_ЗР_НАЕЗД_НА_КВП,
    ПК_ЗР_НАЕЗД_НА_КНП,
    ПК_ЗР_СЪЕЗД_С_ДКП,
    ПК_ЗР_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ЗР_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ЗР_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ЗР_ИЗМН_ЗД_V,
    ПК_ЗР_ИЗМН_ЗД_X,
    ПК_ЗР_ИЗМН_НП_НОМИНАЛ_КОЭФ_V,
    ПК_ЗР_ИЗМН_НП_НОМИНАЛ_КОЭФ_X,
    ПК_ЗР_ИЗМН_НП_КОЭФ_V,
    ПК_ЗР_ИЗМН_НП_КОЭФ_X,
    ПК_ЗР_ИЗМН_НП_РАБ_УСК,
    ПК_ЗР_ИЗМН_НП_КОЭФ_А,
    ПК_ЗР_ИЗМН_НП_АВР_ТОР

};
/*============ Vз Ускоренное ==================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ЗУ_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ЗУ_ГОТОВ_К_РАБОТЕ,
    ПК_ЗУ_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ЗУ_ОТКАЗ_ДАТЧИКА,
    ПК_ЗУ_НАЕЗД_НА_КВП,
    ПК_ЗУ_НАЕЗД_НА_КНП,
    ПК_ЗУ_СЪЕЗД_С_ДКП,
    ПК_ЗУ_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ЗУ_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ЗУ_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ЗУ_ИЗМН_ЗД_V,
    ПК_ЗУ_ИЗМН_ЗД_X,
    ПК_ЗУ_ИЗМН_НП_КОЭФ_V,
    ПК_ЗУ_ИЗМН_НП_КОЭФ_X,
    ПК_ЗУ_ИЗМН_НП_РАБ_УСК,
    ПК_ЗУ_ИЗМН_НП_КОЭФ_А,
    ПК_ЗУ_ИЗМН_НП_АВР_ТОР,
    ПК_ЗУ_ИЗМН_НП_НОМИНАЛ_КОЭФ_V,
    ПК_ЗУ_ИЗМН_НП_НОМИНАЛ_КОЭФ_X,
    ПК_ЗУ_ДВИЖЕНИЕ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ,
    ПК_ЗУ_ИНИЦИАЛИЗИРОВАТЬ_КООРДИНАТУ

};

/*============ Wз =============================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ЗВ_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ЗВ_ГОТОВ_К_РАБОТЕ,
    ПК_ЗВ_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ЗВ_ОТКАЗ_ДАТЧИКА,
    ПК_ЗВ_НАЕЗД_НА_КВП,
    ПК_ЗВ_НАЕЗД_НА_КНП,
    ПК_ЗВ_СЪЕЗД_С_ДКП,
    ПК_ЗВ_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ЗВ_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ЗВ_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ЗВ_ИЗМН_ЗД_V,
    ПК_ЗВ_ИЗМН_ЗД_X,
    ПК_ЗВ_ИЗМН_НП_КОЭФ_V,
    ПК_ЗВ_ИЗМН_НП_КОЭФ_X,
    ПК_ЗВ_ИЗМН_НП_РАБ_УСК,
    ПК_ЗВ_ИЗМН_НП_КОЭФ_А,
    ПК_ЗВ_ИЗМН_НП_АВР_ТОР

};
/*============ Vт Рабочее====================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ТР_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ТР_ГОТОВ_К_РАБОТЕ,
    ПК_ТР_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ТР_ОТКАЗ_ДАТЧИКА,
    ПК_ТР_НАЕЗД_НА_КВП,
    ПК_ТР_НАЕЗД_НА_КНП,
    ПК_ТР_СЪЕЗД_С_ДКП,
    ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ТР_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ТР_ИЗМН_ЗД_V,
    ПК_ТР_ИЗМН_ЗД_X,
    ПК_ТР_ИЗМН_НП_КОЭФ_V,
    ПК_ТР_ИЗМН_НП_КОЭФ_X,
    ПК_ТР_ИЗМН_НП_РАБ_УСК,
    ПК_ТР_ИЗМН_НП_КОЭФ_А,
    ПК_ТР_ИЗМН_НП_АВР_ТОР


};
/*============ Vт Ускоренное ==================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ТУ_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ТУ_ГОТОВ_К_РАБОТЕ,
    ПК_ТУ_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ТУ_ОТКАЗ_ДАТЧИКА,
    ПК_ТУ_НАЕЗД_НА_КВП,
    ПК_ТУ_НАЕЗД_НА_КНП,
    ПК_ТУ_СЪЕЗД_С_ДКП,
    ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ТУ_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ТУ_ИЗМН_ЗД_V,
    ПК_ТУ_ИЗМН_ЗД_X,
    ПК_ТУ_ИЗМН_НП_КОЭФ_V,
    ПК_ТУ_ИЗМН_НП_КОЭФ_X,
    ПК_ТУ_ИЗМН_НП_РАБ_УСК,
    ПК_ТУ_ИЗМН_НП_КОЭФ_А,
    ПК_ТУ_ИЗМН_НП_АВР_ТОР,
    ПК_ТУ_ИНИЦИАЛИЗИРОВАТЬ_КООРДИНАТУ
};

/*============ Wз =============================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ТВ_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ТВ_ГОТОВ_К_РАБОТЕ,
    ПК_ТВ_ОТКАЗ_ДВИГАТЕЛЯ,
    ПК_ТВ_ОТКАЗ_ДАТЧИКА,
    ПК_ТВ_НАЕЗД_НА_КВП,
    ПК_ТВ_НАЕЗД_НА_КНП,
    ПК_ТВ_СЪЕЗД_С_ДКП,
    ПК_ТВ_НАЧАЛО_ДВИЖЕНИЯ_V,
    ПК_ТВ_НАЧАЛО_ДВИЖЕНИЯ_X,
    ПК_ТВ_ОСТАНОВ_ДВИЖЕНИЯ,
    ПК_ТВ_ИЗМН_ЗД_V,
    ПК_ТВ_ИЗМН_ЗД_X,
    ПК_ТВ_ИЗМН_НП_КОЭФ_V,
    ПК_ТВ_ИЗМН_НП_КОЭФ_X,
    ПК_ТВ_ИЗМН_НП_РАБ_УСК,
    ПК_ТВ_ИЗМН_НП_КОЭФ_А,
    ПК_ТВ_ИЗМН_НП_АВР_ТОР

};

/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ДУ  ===================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ДУ_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ДУ_ГОТОВ_К_РАБОТЕ,
    ПК_ДУ_УРОВЕНЬ_ДОСТОВЕРЕН,
    ПК_ДУ_УРОВЕНЬ_НЕ_ДОСТОВЕРЕН,
    ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0,
    ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_УСПЕШНА,
    ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_НЕ_УСПЕШНА,
    ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1,
    ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_УСПЕШНА,
    ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_НЕ_УСПЕШНА,

    ПК_ДУ_ПРЕРВАТЬ_АДАРПТАЦИЮ,
    ПК_ДУ_ВКЛ_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА,
    ПК_ДУ_ВЫК_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА,

    ПК_ДУ_НАЧАЛО_КАЛИБРОВКИ,
    ПК_ДУ_КАЛИБРОВКА_ВЫПОЛНЯЕТСЯ,
    ПК_ДУ_КОНЕЦ_КАЛИБРОВКИ_ПО_ТОЧКЕ,
    ПК_ДУ_КАЛИБРОВКА_ПО_ТОЧКЕ,
    ПК_ДУ_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО,
    ПК_ДУ_ПРЕРВАТЬ_КАЛИБРОВКУ,
    ПК_ДУ_РЕЖИМ_ИЗМЕРЕНИЯ,
    ПК_ДУ_КОД_РЕСТАРТА,
    ПК_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ,
    ПК_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ,
    ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0,
    ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1,
    ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0,
    ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1,

    ПК_ДУ_РЕЖИМ_АДАПТАЦИИ,

    ПК_ДУ_ИЗМН_НП_THRESH,
    ПК_ДУ_ИЗМН_НП_DRELQ,
    ПК_ДУ_ИЗМН_НП_THRETH_GIST,
    ПК_ДУ_ИЗМН_НП_RELATIV_QUALITY,
    ПК_ДУ_ИЗМН_НП_AH_НАЧАЛО_ПЕРЕДАЧИ,
    ПК_ДУ_ИЗМН_НП_BH,
    ПК_ДУ_ИЗМН_НП_CH_ПОСЛЕДНИЙ_ПАРАМЕТР,
    ПК_ДУ_ИЗМН_НП_MIN_SIGN_RANGE,
    ПК_ДУ_ИЗМН_НП_MIDDLE,
    ПК_ДУ_ИЗМН_НП_MIDDLE_SIGN,
    ПК_ДУ_ИЗМН_НП_MAX_SIGNAL_VALUE,
    ПК_ДУ_ИЗМН_НП_T_MAX,
    ПК_ДУ_ИЗМН_НП_BAD_NUMB,
    ПК_ДУ_ИЗМН_НП_H_MAX,
    ПК_ДУ_ИЗМН_НП_H_MIN,
    ПК_ДУ_ИЗМН_НП_WIDTH_PEAK_MAX,
    ПК_ДУ_ИЗМН_НП_ADAPT_LENGTH,
    ПК_ДУ_ИЗМН_НП_KOL_KALIBR,
    ПК_ДУ_ИЗМН_НП_CORRECT_LEVEL_LASER_1,
    ПК_ДУ_ИЗМН_НП_NLINE1,
    ПК_ДУ_ИЗМН_НП_NLINE2,
    ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME0,
    ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME1,

    ПК_ДУ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ДУ,

    ПК_ДУ_ЗАПУСК_ТЕСТА,
    ПК_ДУ_КОНЕЦ_РАБОТЫ

};

/*===========================================================*/
/*=== КОДЫ  ОБМЕНА С ТДД  ===================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
/* общие команды сообщения */
    ПК_ТДД_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ТДД_ГОТОВ_К_РАБОТЕ,
    ПК_ТДД_ОШИБКА_ФАТАЛЬНАЯ,
    ПК_ТДД_КОД_РЕСТАРТА,

    ПК_ТДД_ТЕСТ_ОЗУ,
    ПК_ТДД_ТЕСТ_ОЗУ_БЕЗ_ОШИБОК,
    ПК_ТДД_ОШИБКА_ТЕСТА_ОЗУ,

    ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП,
    ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП,

    ПК_ТДД_ПОИСК_ДИАМЕТРА,
    ПК_ТДД_ДИАМЕТР_НЕ_НАЙДЕН,
    ПК_ТДД_ДИАМЕТР_НЕ_ДОСТОВЕРЕН,
    ПК_ТДД_ДИАМЕТР_ДОСТОВЕРЕН,


    ПК_ТДД_ФП_Wз,
    ПК_ТДД_ФП_Wт,
    ПК_ТДД_ФП_Hур,
    ПК_ТДД_ЗД_Hур,

    ПК_НЕИЗВЕСТНЫЙ_КОД_ТДД,
    ПК_ТДД_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ТДД,

/* большое поле - БП */
    ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП,
    ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП,

    ПК_ТДД_ТЕСТ_БП,
    ПК_ТДД_ТЕСТ_БП_БЕЗ_ОШИБОК,
    ПК_ТДД_ОШИБКА_ТЕСТА_БП,
    ПК_ТДД_КАМЕРА_БП,


    ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП,
    ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП,
    ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП,
    ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП,

    ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС,
    ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП_ПЛЮС,
    ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП_ПЛЮС,
    ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП_ПЛЮС,

    ПК_ТДД_ИЗМН_НП_XTOLER,
    ПК_ТДД_ИЗМН_НП_YTOLER,
    ПК_ТДД_ИЗМН_НП_YDOWNTOLER,
    ПК_ТДД_ИЗМН_НП_NUMOFSTR,
    ПК_ТДД_ИЗМН_НП_THRRELIAB,
    ПК_ТДД_ИЗМН_НП_THRDERIV,
    ПК_ТДД_ИЗМН_НП_THRDERIVCLB,
    ПК_ТДД_ИЗМН_НП_BIGZERO_LVL,
    ПК_ТДД_ИЗМН_НП_BIGPLUS_LVL,
    ПК_ТДД_ИЗМН_НП_SMALLZERO_LVL,
    ПК_ТДД_ИЗМН_НП_SMALLPLUS_LVL,


    ПК_ТДД_ИЗМН_НП_MINAVERTIME,


    ПК_ТДД_ИЗМН_НП_BIGZERO_CTG_НАЧАЛО_ПЕРЕДАЧИ,  /* при изменении от пива ТДД */
    ПК_ТДД_ИЗМН_НП_BIGZERO_KY,
    ПК_ТДД_ИЗМН_НП_BIGZERO_X,
    ПК_ТДД_ИЗМН_НП_BIGZERO_TG,
    ПК_ТДД_ИЗМН_НП_BIGPLUS_CTG,
    ПК_ТДД_ИЗМН_НП_BIGPLUS_KY,
    ПК_ТДД_ИЗМН_НП_BIGPLUS_X,
    ПК_ТДД_ИЗМН_НП_BIGPLUS_TG,

/* малое поле - МП */
    ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП,
    ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП,

    ПК_ТДД_ТЕСТ_МП,
    ПК_ТДД_ТЕСТ_МП_БЕЗ_ОШИБОК,
    ПК_ТДД_ОШИБКА_ТЕСТА_МП,
    ПК_ТДД_КАМЕРА_МП,


    ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП,
    ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП,
    ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП,
    ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП,

    ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС,
    ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП_ПЛЮС,
    ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП_ПЛЮС,
    ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП_ПЛЮС,

    ПК_ТДД_ИЗМН_НП_SMALLZERO_CTG,  /* при изменении от пива ТДД */
    ПК_ТДД_ИЗМН_НП_SMALLZERO_KY,
    ПК_ТДД_ИЗМН_НП_SMALLZERO_X,
    ПК_ТДД_ИЗМН_НП_SMALLZERO_TG,
    ПК_ТДД_ИЗМН_НП_SMALLPLUS_CTG,
    ПК_ТДД_ИЗМН_НП_SMALLPLUS_KY,
    ПК_ТДД_ИЗМН_НП_SMALLPLUS_X,
    ПК_ТДД_ИЗМН_НП_SMALLPLUS_TG_ПОСЛЕДНИЙ_ПАРАМЕТР,

    ПК_ТДД_КОНЕЦ_РАБОТЫ,
    ПК_ТДД_ОШИБКА_ВНУТРЕННЯЯ,      /* добавлено */
    ПК_ТДД_СБРОС_ОШИБКИ_ВНУТРЕННЕЙ      /* добавлено */

};

/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ДТН  ===================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ДТН_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ДТН_ГОТОВ_К_РАБОТЕ,

    ПК_ДТН_ЗАПУСК_ТЕСТА,
    ПК_ДТН_ТЕСТ_БЕЗ_ОШИБКИ,
    ПК_ДТН_ОШИБКА_ТЕСТА,
    ПК_ДТН_ОШИБКА_ФАТАЛЬНАЯ,

    ПК_ДТН_ИЗМН_НП_ВремяОсреднения_ДТН,

    ПК_ДТН_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ,
    ПК_ДТН_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ,
    ПК_ДТН_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ,
    ПК_ДТН_ТЕМПЕРАТУРА_В_НОРМЕ
};
/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ДТР  ===================================*/
/*===========================================================*/
ПЕРЕЧИСЛЕНИЕ {
    ПК_ДТР_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ДТР_ГОТОВ_К_РАБОТЕ,

    ПК_ДТР_ЗАПУСК_ТЕСТА,
    ПК_ДТР_ТЕСТ_БЕЗ_ОШИБКИ,
    ПК_ДТР_ОШИБКА_ТЕСТА,
    ПК_ДТР_ОШИБКА_ФАТАЛЬНАЯ,

    ПК_ДТР_ИЗМН_НП_ВремяОсреднения_ДТР,

    ПК_ДТР_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ,
    ПК_ДТР_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ,
    ПК_ДТР_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ,
    ПК_ДТР_ТЕМПЕРАТУРА_В_НОРМЕ
};

/*===========================================================*/
/*=== КОДЫ 	ОБМЕНА С ИП   ===================================*/
/*===========================================================*/
/* ИП_ЛИТ */
ПЕРЕЧИСЛЕНИЕ {
    ПК_ИП2К_К1_ИНИЦИАЛИЗАЦИЯ = 1,
    ПК_ИП2К_К1_ГОТОВ_К_РАБОТЕ,
    ПК_ИП2К_К1_ОТКАЗ,
    ПК_ИП2К_К1_ВКЛЮЧИТЬ,
    ПК_ИП2К_К1_ВЫКЛЮЧИТЬ,
    ПК_ИП2К_К1_АВТОНОМНЫЙ_РЕЖИМ,
    ПК_ИП2К_К1_НЕАВТОНОМНЫЙ_РЕЖИМ,

    ПК_ИП2К_К1_ИЗМН_ЗД_Wипн_К1,

    ПК_ИП2К_К1_ИЗМН_НП_НижняяГраницаRн_ИП2К_К1,   
    ПК_ИП2К_К1_ИЗМН_НП_ВерхняяГраницаRн_ИП2К_К1,  


    ПК_ИП2К_К1_ИЗМН_НП_ТокЗащитыМодуля_ИП2К_К1,
    ПК_ИП2К_К1_ИЗМН_НП_СкоростьИзменения_W_ИП2К_К1,
    ПК_ИП2К_К1_ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ

};



/*===========================================================*/
/*===========================================================*/
/*========= БАЗОВЫЕ АДРЕСА      =============================*/
/*===========================================================*/
КОНСТ UNIO1                     0X110;
КОНСТ BA_FPGA1_U1                     0XA110; /* ВХОД */
КОНСТ BA_FPGA2_U1                     0XA510; /* ВХОД */
КОНСТ BA_FPGA3_U1                     0XA910; /* ВЫХОД */
КОНСТ BA_FPGA4_U1                     0XAD10; /* ВЫХОД */
КОНСТ UNIO2                     0X120;
КОНСТ BA_FPGA1_U2                     0XA120; /* ??ВХОД */
КОНСТ BA_FPGA2_U2                     0XA520; /* ??ВХОД */
КОНСТ BA_FPGA3_U2                     0XA920; /* ??ВЫХОД */
КОНСТ BA_FPGA4_U2                     0XAD20; /* ??ВЫХОД */


/*###########################################################*/
/*###########################################################*/
/*########                                          #########*/
/*########  ОПИСАНИЕ ФУНКЦИЙ                        #########*/
/*########                                          #########*/
/*########                                          #########*/
/*###########################################################*/

/*:::::::::Функции для работы  с ПИВ :::::::::::::::::::::   */

/*чтение кода и параметра события от ПИВ из кольцевого буфера в память */
ФУНКЦИЯ ЦЕЛ GetNextMsgPIV(ПУСТО);

ФУНКЦИЯ ЦЕЛ  GetMsgPIVCode        (ПУСТО);  /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamPIV     (ПУСТО);  /*чтение из памяти параметра события */
/* ФУНКЦИЯ КЦЕЛ GetShortParamPIV     (ПУСТО); */
ФУНКЦИЯ ЦЕЛ  GetIntParamPIV       (ПУСТО);
ФУНКЦИЯ ДЦЕЛ GetLongParamPIV      (ПУСТО);

ФУНКЦИЯ ЦЕЛ  SendMsgPIVCode       (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamPIV (ЦЕЛ, ПЛАВ);
/* ФУНКЦИЯ ЦЕЛ  SendMsgShortParamPIV (ЦЕЛ, КЦЕЛ); */
/* ФУНКЦИЯ ЦЕЛ  SendMsgIntParamPIV   (ЦЕЛ, ЦЕЛ); */
ФУНКЦИЯ ЦЕЛ  SendMsgLongParamPIV  (ЦЕЛ, ДЦЕЛ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_PIV (ПУСТО); /* инициализация статуса,
обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_PIV  (ПУСТО);  /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_PIV  (ПУСТО);  /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_PIV  (ПУСТО);  /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_PIV (ПУСТО);  /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_PIV (ПУСТО); /* чтение числа сообщ. в выходн. буфере */


/*###########################################################*
/*::::::   Функции работы с каналами устройств :::::::::::   */

/*###########################################################*
/*:::::::::Функции для работы  с ВПО :::::::::::::::::::::   */

/*чтение кода и параметра события от ВПО из кольцевого буфера в память */
ФУНКЦИЯ ЦЕЛ GetNextMsgVPO(ПУСТО);

ФУНКЦИЯ ЦЕЛ  GetMsgVPOCode        (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamVPO     (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgVPOCode       (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamVPO (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_VPO (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_VPO    (ПУСТО); /* отключение канала из системы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_VPO  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_VPO  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_VPO  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_VPO (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_VPO (ПУСТО); /* чтение числа сообщ. в выходн. буфере */


/*###########################################################*
/*:::::::::Функции для работы  с ТДД :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgTDD         (ПУСТО); /*чтение кода и параметра события от ВПО из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgTDDCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamTDD      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgTDDCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamTDD  (ЦЕЛ, ПЛАВ);
ФУНКЦИЯ ЦЕЛ  SendMsgLongParamTDD   (ЦЕЛ, ДЦЕЛ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_TDD (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_TDD    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_TDD  (ПУСТО);  /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_TDD  (ПУСТО);  /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_TDD  (ПУСТО);  /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_TDD   (ПУСТО);  /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_TDD   (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_D_TDD(ПУСТО);          /* чтение ФП диаметра кристалла */
ФУНКЦИЯ ПЛАВ  GetFP_DeltaX_TDD();
ФУНКЦИЯ ПЛАВ  GetFP_DeltaY_TDD();

/*###########################################################*
/*:::::::::Функции для работы  с ДУ :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgDU         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgDUCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamDU      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgDUCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamDU  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_DU (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_DU     (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_DU  (ПУСТО);  /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_DU  (ПУСТО);  /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_DU  (ПУСТО);  /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_DU (ПУСТО);  /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_DU (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_H_DU(ПУСТО);         /* чтение ФП Hур */

ФУНКЦИЯ ДЦЕЛ  GetFP_STAT_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_PEAKW_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_PEAKC_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_RANGE_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_DISP_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_MEAN_DU(ПУСТО);      /* чтение ФП  */
ФУНКЦИЯ ДЦЕЛ  GetFP_LASER_DU(ПУСТО);      /* чтение ФП  */

/*###########################################################*
/*:::::::::Функции для работы  с ДТН :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgDTN         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgDTNCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamDTN      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgDTNCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgLongParamDTN  (ЦЕЛ, ДЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamDTN  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_DTN (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_DTN    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_DTN  (ПУСТО);  /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_DTN  (ПУСТО);  /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_DTN  (ПУСТО);  /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_DTN (ПУСТО);  /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_DTN (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_T_DTN(ПУСТО);         /* чтение ФП температуры нагревателя */
ФУНКЦИЯ ДЦЕЛ  GetFP_PSW_DTN(ПУСТО);       /* чтение ФП слово-состояние процесса */

/*###########################################################*
/*:::::::::Функции для работы  с ДТР :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgDTR         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgDTRCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamDTR      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgDTRCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgLongParamDTR  (ЦЕЛ, ДЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamDTR  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_DTR (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_DTR    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_DTR  (ПУСТО);  /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_DTR  (ПУСТО);  /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_DTR  (ПУСТО);  /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_DTR (ПУСТО);  /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_DTR (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_T_DTR(ПУСТО);         /* чтение ФП температуры расплава */
ФУНКЦИЯ ДЦЕЛ  GetFP_PSW_DTR(ПУСТО);       /* чтение ФП слово-состояние процесса */

/*###########################################################*
/*:::::::::Функции для работы  с ИП2К КАНАЛ 1 :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgIP2K_K1         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgIP2K_K1Code         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamIP2K_K1      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgIP2K_K1Code        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamIP2K_K1  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_IP2K_K1 (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_IP2K_K1    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_IP2K_K1  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_IP2K_K1  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_IP2K_K1  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_IP2K_K1   (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_IP2K_K1   (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_StrCoolWater_IP2K_K1 (ПУСТО);   /* чтение ФП потока охлаждающей воды */
ФУНКЦИЯ ПЛАВ  GetFP_TempCoolWaterIn_IP2K_K1(ПУСТО); /* чтение ФП температуры охлажд на входе */
ФУНКЦИЯ ПЛАВ  GetFP_TempCoolWaterOut_IP2K_K1(ПУСТО); /* чтение ФП температуры охлажд на выходе */
ФУНКЦИЯ ПЛАВ  GetFP_Risol_IP2K_K1(ПУСТО); /* чтение ФП температуры изоляции */

ФУНКЦИЯ ПЛАВ  GetFP_I_0_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 0*/
ФУНКЦИЯ ПЛАВ  GetFP_I_1_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 1*/
ФУНКЦИЯ ПЛАВ  GetFP_I_2_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 2*/
ФУНКЦИЯ ПЛАВ  GetFP_I_3_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 3*/
ФУНКЦИЯ ПЛАВ  GetFP_I_4_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 4*/
ФУНКЦИЯ ПЛАВ  GetFP_I_5_IP2K_K1(ПУСТО); /* чтение ФП тока внутри модуля 5*/

ФУНКЦИЯ ПЛАВ  GetFP_Temp0_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 0*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp1_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 1*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp2_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 2*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp3_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 3*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp4_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 4*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp5_IP2K_K1(ПУСТО); /* чтение ФП темпер.внутри модуля 5*/


ФУНКЦИЯ ПЛАВ  GetFP_U_IP2K_K1(ПУСТО);    /* напряжение нагрузки реальное */
ФУНКЦИЯ ДЦЕЛ  GetFP_Module_IP2K_K1(ПУСТО);    /* состояние модуля */
       
ФУНКЦИЯ ПЛАВ  GetFP_U_380_IP2K_K1(ПУСТО);           /* чтение ФП напряжения сети 380 в */
ФУНКЦИЯ ПЛАВ  GetFP_W_IP2K_K1(ПУСТО);               /* чтение ФП мощности ИП */
ФУНКЦИЯ ПЛАВ  GetFP_I_IP2K_K1(ПУСТО);               /* чтение ФП тока ИП */
ФУНКЦИЯ ПЛАВ  GetFP_R_IP2K_K1(ПУСТО);               /* чтение ФП сопротивления ИП */

ФУНКЦИЯ ЦЕЛ  GetFP_PSW_IP2K_K1(ПУСТО);    /* чтение ФП слово-состояния ИП2К_К1 */
/*:::::::::Функции для работы  с ИП2К КАНАЛ 2 :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgIP2K_K2         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgIP2K_K2Code         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamIP2K_K2      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgIP2K_K2Code        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamIP2K_K2  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_IP2K_K2 (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_IP2K_K2    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_IP2K_K2  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_IP2K_K2  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_IP2K_K2  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_IP2K_K2   (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_IP2K_K2   (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

ФУНКЦИЯ ПЛАВ  GetFP_StrCoolWater_IP2K_K2 (ПУСТО);   /* чтение ФП потока охлаждающей воды */
ФУНКЦИЯ ПЛАВ  GetFP_TempCoolWaterIn_IP2K_K2(ПУСТО); /* чтение ФП температуры охлажд на входе */
ФУНКЦИЯ ПЛАВ  GetFP_TempCoolWaterOut_IP2K_K2(ПУСТО); /* чтение ФП температуры охлажд на выходе */
ФУНКЦИЯ ПЛАВ  GetFP_Risol_IP2K_K2(ПУСТО); /* чтение ФП температуры изоляции */

ФУНКЦИЯ ПЛАВ  GetFP_Temp0_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 0*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp1_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 1*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp2_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 2*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp3_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 3*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp4_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 4*/
ФУНКЦИЯ ПЛАВ  GetFP_Temp5_IP2K_K2(ПУСТО); /* чтение ФП темпер.внутри модуля 5*/

ФУНКЦИЯ ПЛАВ  GetFP_U_IP2K_K2(ПУСТО);    /* напряжение нагрузки реальное */
ФУНКЦИЯ ДЦЕЛ  GetFP_Module_IP2K_K2(ПУСТО);    /* состояние модуля */

ФУНКЦИЯ ПЛАВ  GetFP_U_380_IP2K_K2(ПУСТО);           /* чтение ФП напряжения сети 380 в */
ФУНКЦИЯ ПЛАВ  GetFP_W_IP2K_K2(ПУСТО);               /* чтение ФП мощности ИП */
ФУНКЦИЯ ПЛАВ  GetFP_I_IP2K_K2(ПУСТО);               /* чтение ФП тока ИП */
ФУНКЦИЯ ПЛАВ  GetFP_R_IP2K_K2(ПУСТО);               /* чтение ФП сопротивления ИП */


/*###########################################################*
/*:::::::::Функции для работы  с Vз_РС :::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgZR         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgZRCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamZR      (ПУСТО);  /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgZRCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamZR  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_ZR (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_ZR    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_ZR  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_ZR  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_ZR  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_ZR (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_ZR (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

/*###########################################################*
/*:::::::::Функции для работы  с Vз_УС :::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgZU         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgZUCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamZU      (ПУСТО); /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgZUCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamZU  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_ZU (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_ZU    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_ZU  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_ZU  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_ZU  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_ZU (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_ZU (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

/*###########################################################*
/*:::::::::Функции для работы  с Vт_РС :::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgTR         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgTRCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamTR      (ПУСТО); /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgTRCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamTR  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_TR (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_TR    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_TR  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_TR  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_TR  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_TR (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_TR (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

/*###########################################################*
/*:::::::::Функции для работы  с Vт_УС :::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgTU         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgTUCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamTU      (ПУСТО); /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgTUCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamTU  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_TU (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_TU    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_TU  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_TU  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_TU  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_TU (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_TU (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

/*###########################################################*
/*:::::::::Функции для работы  с Wз  :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgZV         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgZVCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamZV      (ПУСТО); /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgZVCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamZV  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_ZV (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_ZV    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_ZV  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_ZV  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_ZV  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_ZV (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_ZV (ПУСТО); /* чтение числа сообщ. в выходн. буфере */

/*###########################################################*
/*:::::::::Функции для работы  с Wт  :::::::::::::::::::::   */

ФУНКЦИЯ ЦЕЛ  GetNextMsgTV         (ПУСТО); /*чтение кода и параметра события из кольцевого буфера в память */

ФУНКЦИЯ ЦЕЛ  GetMsgTVCode         (ПУСТО); /*чтение из памяти кода события */
ФУНКЦИЯ ПЛАВ GetFloatParamTV      (ПУСТО); /*чтение из памяти параметра события */
ФУНКЦИЯ ЦЕЛ  SendMsgTVCode        (ЦЕЛ);
ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamTV  (ЦЕЛ, ПЛАВ);

ФУНКЦИЯ ЦЕЛ  InitChannelStatus_TV (ПУСТО); /* инициализация статуса, обнуление числа ошибок */
ФУНКЦИЯ ЦЕЛ  DisableChannel_TV    (ПУСТО); /* отключение канала из ситемы */
ФУНКЦИЯ ЦЕЛ  GetChannelStatus_TV  (ПУСТО); /* чтение статуса канала 0/1 */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberCS_TV  (ПУСТО); /* чтение числа ошибок КС */
ФУНКЦИЯ ЦЕЛ  GetErrorNumberTO_TV  (ПУСТО); /* чтение числа ошибок по тайм ауту */
ФУНКЦИЯ ЦЕЛ  GetInpMsgNumber_TV (ПУСТО); /* чтение числа сообщ. во входн. буфере */
ФУНКЦИЯ ЦЕЛ  GetOutMsgNumber_TV (ПУСТО); /* чтение числа сообщ. в выходн. буфере */


/*##################################################################*/
/*:::::::: Функции для работы  с Затравкой-Рабочее ::::::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VZR(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VZR(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XZR(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XZR(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_IZR(ПУСТО);          /* чтение ФП тока двигателя */

/*##################################################################*/
/*:::::::: Функции для работы  с Затравкой-Ускоренное :::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VZU(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VZU(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XZU(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XZU(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_IZU(ПУСТО);          /* чтение ФП тока двигателя */

/*##################################################################*/
/*:::::::: Функции для работы  с Затравкой-Вращение :::::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VZV(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VZV(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XZV(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XZV(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_IZV(ПУСТО);          /* чтение ФП тока двигателя */

/*##################################################################*/
/*:::::::: Функции для работы  с Тигель -- Рабочее ::::::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VTR(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VTR(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XTR(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XTR(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_ITR(ПУСТО);          /* чтение ФП тока двигателя */

/*##################################################################*/
/*:::::::: Функции для работы  с Тигель -- Ускоренное :::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VTU(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VTU(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XTU(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XTU(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_ITU(ПУСТО);          /* чтение ФП тока двигателя */

/*##################################################################*/
/*:::::::: Функции для работы  с Тигель -- Вращение :::::::::::::   */
ФУНКЦИЯ ПЛАВ  GetFP_VTV(ПУСТО);          /* чтение ФП скорости */
ФУНКЦИЯ ПЛАВ  GetZD_VTV(ПУСТО);          /* чтение задания скорости */
ФУНКЦИЯ ПЛАВ  GetFP_XTV(ПУСТО);          /* чтение ФП координаты */
ФУНКЦИЯ ПЛАВ  GetZD_XTV(ПУСТО);          /* чтение задания координаты */
ФУНКЦИЯ ПЛАВ  GetFP_ITV(ПУСТО);          /* чтение ФП тока двигателя */
/*##################################################################*/

/* ----------- */
ФУНКЦИЯ ЦЕЛ  ADC(ПУСТО);    /*считывание из АЦП */
ФУНКЦИЯ ЦЕЛ  DAC(ПУСТО);    /*запись в ЦАП */
ФУНКЦИЯ ПЛАВ GetADC(ЦЕЛ);  /*взять параметр */
ФУНКЦИЯ ЦЕЛ  PutDAC(ЦЕЛ, ПЛАВ);  /* послать параметр */

ФУНКЦИЯ ПЛАВ sqrt(ПЛАВ);
ФУНКЦИЯ ПЛАВ fabs(ПЛАВ);

ФУНКЦИЯ ПЛАВ limitationMIN(ПЛАВ, ПЛАВ);
ФУНКЦИЯ ПЛАВ limitationMAX(ПЛАВ, ПЛАВ);
ФУНКЦИЯ ПЛАВ limitationMINMAX(ПЛАВ, ПЛАВ, ПЛАВ);
ФУНКЦИЯ ПЛАВ limitationZeroZoneMINMAX(ПЛАВ, ПЛАВ, ПЛАВ);
ФУНКЦИЯ ПУСТО Vrosta_Init(ПУСТО);
ФУНКЦИЯ ПЛАВ AverageFloatVrosta(ДЦЕЛ, ПЛАВ);
ФУНКЦИЯ ПУСТО Tdtn_Init(ПУСТО);
ФУНКЦИЯ ПЛАВ AverageTdtn(ДЦЕЛ, ПЛАВ);
ФУНКЦИЯ ПУСТО Tdtr_Init(ПУСТО);
ФУНКЦИЯ ПЛАВ AverageTdtr(ДЦЕЛ, ПЛАВ);
ФУНКЦИЯ ПУСТО Undercutting_Init(ПУСТО);
ФУНКЦИЯ ПЛАВ CalcUndercutting(ДЦЕЛ, ПЛАВ);
/* функция расчета скорости при движении в заданную координату */
ФУНКЦИЯ ПЛАВ CalculateV_for_dX (ПЛАВ,  ПЛАВ, ПЛАВ, ПЛАВ, ПЛАВ, ПЛАВ, ПЛАВ);
/*                              dXcur, Vcur,Vtask, Vmax,dVmax, Amax, Tx  */
/* функция расчета глубины расплава в тигле по массе затравки */
ФУНКЦИЯ ЦЕЛ InitTigGeometry (ПЛАВ, ПЛАВ, ПЛАВ, ПЛАВ);
ФУНКЦИЯ ЦЕЛ SetTigDepth (БЕЗЗНАКОВОЕ ЦЕЛ, ПЛАВ);
ФУНКЦИЯ ЦЕЛ SetTigDiameter (БЕЗЗНАКОВОЕ ЦЕЛ, ПЛАВ);
ФУНКЦИЯ ЦЕЛ SetTigWeight (БЕЗЗНАКОВОЕ ЦЕЛ, ПЛАВ);
ФУНКЦИЯ ЦЕЛ CalculateMeltDepth_Mcur(ПЛАВ, ПЛАВ *, ПЛАВ *);
ФУНКЦИЯ ЦЕЛ CalculateMeltDepth_Hcur(ПЛАВ, ПЛАВ *, ПЛАВ *);
/* ФУНКЦИЯ ЦЕЛ SplineKoefCalculation (ПЛАВ, ПЛАВ,
/*                                   ПЛАВ, ПЛАВ,
/*                                  ПЛАВ *, ПЛАВ *,
/*                                  ПЛАВ *, ПЛАВ *); */

ФУНКЦИЯ ЦЕЛ InitCulculateSpline (ПЛАВ, ПЛАВ);
ФУНКЦИЯ ПЛАВ CulculateDeltaDcur (ПЛАВ);




ФУНКЦИЯ ПУСТО Shutdown(ПУСТО);
ФУНКЦИЯ ЦЕЛ   GetSystemErrorCode(ПУСТО);
ФУНКЦИЯ ПУСТО ClearSystemError(ПУСТО);
ФУНКЦИЯ ПУСТО PrintErrorAndFloatParam(ЦЕЛ, ПЛАВ);



/*###########################################################*/
/*###########################################################*/
/*########                                          #########*/
/*########  ОПИСАНИЕ РЕГИСТРОВ ВХОДОВ/ВЫХОДОВ       #########*/
/*########                                          #########*/
/*########                                          #########*/
/*###########################################################*/
/*##############    U N I 0 1   #############################*/
/*###########################################################*/
/*###############   РЕГИСТРЫ ВХОДОВ  ЛОГИЧЕСКИХ  ############*/
/*###########################################################*/
ВХОД FPGA1_U1_0 0XA110	0   8;
ВХОД FPGA1_U1_1 0XA110	1   8;
ВХОД FPGA1_U1_2 0XA110	2   8;

ВХОД FPGA2_U1_0 0XA510	0   8;
ВХОД FPGA2_U1_1 0XA510	1   8;
ВХОД FPGA2_U1_2 0XA510	2   8;
/*###########################################################*/
/*###############   РЕГИСТРЫ ВЫХОДОВ ЛОГИЧЕСКИХ  ############*/
/*###########################################################*/
ВЫХОД FPGA3_U1_0 0XA910 	0   8;
ВЫХОД FPGA3_U1_1 0XA910 	1   8;
ВЫХОД FPGA3_U1_2 0XA910 	2   8;

ВЫХОД FPGA4_U1_0 0XAD10 	0   8;
ВЫХОД FPGA4_U1_1 0XAD10 	1   8;
ВЫХОД FPGA4_U1_2 0XAD10 	2   8;
/*##########################################################*/
/*##############    U N I 0 2   #############################*/
/*###############   РЕГИСТРЫ  ЛОГИЧЕСКИХ        #############*/
/*###########################################################*/
ВХОД FPGA1_U2_0 0XA120 	0   8;
ВХОД FPGA1_U2_1 0XA120 	1   8;
ВХОД FPGA1_U2_2 0XA120 	2   8;

ВХОД FPGA2_U2_0 0XA520 	0   8;
ВХОД FPGA2_U2_1 0XA520 	1   8;
ВХОД FPGA2_U2_2 0XA520 	2   8;
/*###########################################################*/
/*###############   РЕГИСТРЫ  ЛОГИЧЕСКИХ         ############*/
/*###########################################################*/
ВХОД FPGA3_U2_0 0XA920 	0   8;
ВХОД FPGA3_U2_1 0XA920 	1   8;
ВХОД FPGA3_U2_2 0XA920 	2   8;

ВХОД FPGA4_U2_0 0XAD20 	0   8;
ВХОД FPGA4_U2_1 0XAD20 	1   8;
ВХОД FPGA4_U2_2 0XAD20 	2   8;

/*
 * ===============================================
 *      Описание Процессов Установки Выращивания
 *      Кристаллов Кремния (УВКК).
 * ===============================================
*/
/*###########################################################*/
/*###########################################################*/
/*########                                          #########*/
/*########  ПРОЦЕССЫ                                #########*/
/*########                                          #########*/
/*###########################################################*/
/*###########################################################*/



/*====================================================*/
/*====================================================*/
/*=                                                  =*/
/*=             РЕЖИМ ИНИЦИАЛИЗАЦИИ                  =*/
/*=             643.АЭ1610.10000 Д2.1               =*/
/*=                                                  =*/
/*====================================================*/
/*====================================================*/
/*
 *      Процесс Инициализация. Служит для
 *      Начальной синхронизации работы программируемого
 *      контроллера (ПК) и диспетчера, для
 *      инициализации служебных ячеек перед работой.
 *      Инициализирует служебные ячейки, переводит процессы
 *      в состояние останова, затем
 *      устанавливает флаг конца своей инициализации.
 *      Проверяет флаг конца режима инициализации.
 *      При конце инициализации (по флагу) переводит
 *      систему в режим РР-1 (ТекущийРежим=Инициализация),
 *      запускает процесс РИ  (Режим Начальной Инициализации).
 *      Кроме описанных выше функций, процесс Инициализация
 *      содержит описание переменных для ссылок из других
 *      процессов. Это удобно: описания локализованы в одном
 *      месте.
*/

ПРОЦ Инициализация {

/*===========================================================*/
/*=========== ЛОГИЧЕСКИЕ СИГНАЛЫ ============================*/
/*===========================================================*/

/*=========== ПЕРВОГО РЕГИСТРА =================*/
/*=========== ВХОДНЫЕ ==========================*/
/*=========== FPGA1   ==========================*/

ЛОГ К_ОТМЕНА          = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ЗАЩИТА_ПТД      = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ИЗОЛ_ПТД        = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ВКЛ_КОНТ_ПТД    = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ВКЛ_ПТД         = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ; /* по схемам - К_ВКЛ_ВЫКЛ_ПТД */
ЛОГ К_VE1_ИСХ         = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE2_ИСХ         = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE3             = {FPGA1_U1_0[1]}        ДЛЯ ВСЕХ;

/*=========== ВТОРОГО РЕГИСТРА ==============================*/
ЛОГ К_VE4             = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE5             = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE6             = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE7             = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ОТКР_VM14       = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ЗАКР_VM14       = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_МНмах           = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_МНмин           = {FPGA1_U1_1[1]}        ДЛЯ ВСЕХ;
/*=========== ТРЕТЬЕГО РЕГИСТРА ==============================*/
ЛОГ К_РП1             = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП2             = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП3             = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП4             = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП5        	   = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП6       	   = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_РП7             = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ДАТЧИКА_КАСАНИЯ = {FPGA1_U1_2[1]}        ДЛЯ ВСЕХ;  /* датчик касания */


/*=========== ЧЕТВЕРТОГО РЕГИСТРА ==============================*/
/*=========== FPGA2   ==========================*/
ЛОГ К_ДП              = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ; /* датчик привязки */
ЛОГ К_ОТКР_ЗАТВОР_В   = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ; /* затвор вакуумный отк*/
ЛОГ К_ЗАКР_ЗАТВОР_В   = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ; /* затвор вакуумный зак*/
ЛОГ К_СТЫКОВКИ_1      = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_2      = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_3      = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_4      = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_5      = {FPGA2_U1_0[1]}        ДЛЯ ВСЕХ;
/*=========== ПЯТОГО РЕГИСТРА ====                ===========*/
ЛОГ К_СТЫКОВКИ_6      = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_7      = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_СТЫКОВКИ_8      = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE10            = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_VE11            = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_220_НА_ВХОДЕ_ИБП = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ИБП_РАЗРЯЖЕН    = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ К_V1              = {FPGA2_U1_1[1]}        ДЛЯ ВСЕХ;/* предохранительный кл*/
/* ========== ШЕСТОГО РЕГИСТРА ====                ===========*/
ЛОГ К_НВР1            = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;/*автомат защиты включен*/
ЛОГ К_ДВН1            = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;/*автомат и пускатель включены*/
ЛОГ К_НВР2            = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ДВН2            = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_ПРОГР_ВКЛ_24В_48В = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_Закр_РРГ        = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;  /* нигде не используется пока */
ЛОГ К_РП8             = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ К_Откр_РРГ        = {FPGA2_U1_2[1]}        ДЛЯ ВСЕХ;


/*==========================================================*/
/*=========== ВЫХОДНЫЕ ЛОГИЧЕСКИЕ ==========================*/
/*==========================================================*/

/*========== СЕДЬМОГО РЕГИСТРА =================*/
/*=========== FPGA3   ==========================*/
ЛОГ У_ВКЛ_ПТД          = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;/*ПТД1 или ПТД2*/
ЛОГ У_ВЫК_ПТД          = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;/* - -- --- --*/
ЛОГ У_ВКЛ_РВ_ПТД       = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ; /*разреш вкл-ия ПТД*/
ЛОГ У_ВКЛ_АСС          = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;  /*авар-ый стоп-сброс ПТД*/
ЛОГ У_VE12             = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N5           = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N6           = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N7           = {FPGA3_U1_0[1]}        ДЛЯ ВСЕХ;

/*========== ВОСЬМОГО РЕГИСТРА ====                ===========*/
ЛОГ У_ЛАЗЕРА_ДП      = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N9           = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N10          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N11          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N12          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N13          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N14          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N15          = {FPGA3_U1_1[1]}        ДЛЯ ВСЕХ;

/*========== ДЕВЯТОГО РЕГИСТРА ====                ===========*/
ЛОГ FPGA3_N16          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N17          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N18          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N19          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N20          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N21          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N22          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ FPGA3_N23          = {FPGA3_U1_2[1]}        ДЛЯ ВСЕХ;

/*========== ДЕСЯТОГО РЕГИСТРА ====                ===========*/
/*=========== FPGA4   ==========================*/
ЛОГ У_НВР2           = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_НВР1           = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_РАЗБЛОКИРОВКА_ВК_НК     = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ; /* 1-разблокировка управления  */
ЛОГ У_ТЕСТ_ДК        = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ЗАКР_РРГ       = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ОТКР_РРГ       = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ВТ3            = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ВКЛ_48В        = {FPGA4_U1_0[1]}        ДЛЯ ВСЕХ;

/*========== ОДИННАДЦАТОГО РЕГИСТРА ====                ===========*/
/*=========== FPGA4   ==========================*/
ЛОГ У_VE1            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE2            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE3            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE4            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE5            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE6            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE7            = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ВКЛ_24В        = {FPGA4_U1_1[1]}        ДЛЯ ВСЕХ;  /*уточнить обознач-ие ?????? */

/*========== ДВЕНАДЦАТОГО РЕГИСТРА ====                ===========*/
/*=========== FPGA4   ==========================*/
ЛОГ У_ДВН2            = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ДВН1            = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE10                = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE11                = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ОТКР_VM14           = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_ЗАКР_VM14           = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE8                 = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
ЛОГ У_VE9                 = {FPGA4_U1_2[1]}        ДЛЯ ВСЕХ;
/*========== ДВЕНАДЦАТОГО РЕГИСТРА ====                ===========*/
/*=========== FPGA4   ==========================*/


/*===========================================================*/
/*=========== ЯЧЕЙКИ ОБЩЕГО УПРАВЛЕНИЯ ======================*/
/*===========================================================*/
ЦЕЛ ТекущийРежим          ДЛЯ ВСЕХ;
ЦЕЛ ТекущийЭтап           ДЛЯ ВСЕХ;
ЦЕЛ ПризнакВакуум         ДЛЯ ВСЕХ;
ЦЕЛ РежимИсполненияРА     ДЛЯ ВСЕХ;  /* по терминаторам, непрерывно */
ЦЕЛ Флаг_КонецТП          ДЛЯ ВСЕХ;  /* Используется для окончания ТП  */

ЛОГ ФлагПовторнойЗагрузки ДЛЯ ВСЕХ;  /* Требуется для исключения повторной 
                                     /* загрузки
                                     /* Устанавливается по включению КПУ, 
                                     /* сбрасывается по приходу запроса 
                                     /* инициализации от ПИВ или переходу 
                                     /* в РР*/

ЛОГ ФлагL_КЗ_УР           ДЛЯ ВСЕХ;/* Достоверность L_КЗ_УР */

ЛОГ ФлагHур               ДЛЯ ВСЕХ;/* Достоверность Hур для РЕГ */
ЛОГ ФлагHур_ДУ            ДЛЯ ВСЕХ;/* Достоверность Hур от ДУ */
ЛОГ ФлагHур_ДВ            ДЛЯ ВСЕХ;/* Достоверность Hур от ДВ */

ЛОГ ФлагDкр               ДЛЯ ВСЕХ;/* достоверность Диаметра для РЕГ */
ЛОГ ФлагDкр_ТДД           ДЛЯ ВСЕХ;/* достоверность данных от ТДД */
ЛОГ ФлагDкр_ДВ            ДЛЯ ВСЕХ;/* достоверность данных от ДВ */

ЛОГ ФлагДТН               ДЛЯ ВСЕХ;/* работоспособность ДТ для РЕГ */
ЛОГ ФлагДТР               ДЛЯ ВСЕХ;/* работоспособность ДТ для РЕГ */
ЛОГ ФлагВПО               ДЛЯ ВСЕХ;
ЛОГ ФлагГотовностиVроста  ДЛЯ ВСЕХ;  /*готовность вычисления ср/едней скорости затравки*/

ЛОГ ФлагРегулятора_V_ЗР   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ЗР   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_V_ЗУ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ЗУ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_V_ЗВ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ЗВ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_V_ТР   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ТР   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_V_ТУ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ТУ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_V_ТВ   ДЛЯ ВСЕХ;
ЛОГ ФлагРегулятора_X_ТВ   ДЛЯ ВСЕХ;

ЛОГ К_КВП_З               ДЛЯ ВСЕХ;
ЛОГ К_КНП_З               ДЛЯ ВСЕХ;
ЛОГ К_КВП_Т               ДЛЯ ВСЕХ;
ЛОГ К_КНП_Т               ДЛЯ ВСЕХ;


/* ИП_ЛИТ */
ЛОГ Флаг_ИП2К_К1           ДЛЯ ВСЕХ; /* Устанавливается при включении ИП */
ЛОГ Флаг_ИП2К_К2           ДЛЯ ВСЕХ; /* Устанавливается при включении ИП */

ЛОГ Флаг_НаличияМодуля0_ИП2К_К1 ДЛЯ ВСЕХ; /*  */
ЛОГ Флаг_НаличияМодуля1_ИП2К_К1 ДЛЯ ВСЕХ; /*  */
ЛОГ Флаг_НаличияМодуля2_ИП2К_К1 ДЛЯ ВСЕХ; /*  */
ЛОГ Флаг_НаличияМодуля3_ИП2К_К1 ДЛЯ ВСЕХ; /*  */
ЛОГ Флаг_НаличияМодуля4_ИП2К_К1 ДЛЯ ВСЕХ; /*  */
ЛОГ Флаг_НаличияМодуля5_ИП2К_К1 ДЛЯ ВСЕХ; /*  */

ЛОГ Флаг_АВД1             ДЛЯ ВСЕХ;
ЛОГ Флаг_АВД2             ДЛЯ ВСЕХ;

ЛОГ К_VE1                  ДЛЯ ВСЕХ; /* парирование помех для Гордеева */
ЛОГ К_VE2                  ДЛЯ ВСЕХ;


ДЦЕЛ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС ДЛЯ ВСЕХ; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
ДЦЕЛ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА ДЛЯ ВСЕХ; /* чтобы в отмену не уходить */

/*===========================================================*/
/*=========== ЯЧЕЙКИ ИНФОРМАЦИОННЫХ КАНАЛОВ =================*/
/*===========================================================*/
ЦЕЛ КодСобытия_от_ПИВ        ДЛЯ ВСЕХ;
ЦЕЛ КодСобытия_к_ПИВ         ДЛЯ ВСЕХ;


/*КЦЕЛ КЦЕЛ_ПараметрСобытия_от_ПИВ  ДЛЯ ВСЕХ;
ЦЕЛ  ЦЕЛ_ПараметрСобытия_от_ПИВ   ДЛЯ ВСЕХ;
ДЦЕЛ ДЦЕЛ_ПараметрСобытия_от_ПИВ  ДЛЯ ВСЕХ;
ПЛАВ ПЛАВ_ПараметрСобытия_от_ПИВ  ДЛЯ ВСЕХ;

КЦЕЛ КЦЕЛ_ПараметрСобытия_к_ПИВ  ДЛЯ ВСЕХ;
ЦЕЛ  ЦЕЛ_ПараметрСобытия_к_ПИВ   ДЛЯ ВСЕХ;
ДЦЕЛ ДЦЕЛ_ПараметрСобытия_к_ПИВ  ДЛЯ ВСЕХ;
ПЛАВ ПЛАВ_ПараметрСобытия_к_ПИВ  ДЛЯ ВСЕХ;   */

/*===========================================================*/
/*=========== ЯЧЕЙКИ ФАКТИЧЕСКИХ ЗНАЧЕНИЙ ===================*/
/*===========================================================*/
/*===========================================================*/
/*===========================================================*/
/*=========== ЯЧЕЙКИ ИНФОРМАЦИИ С АЦП =======================*/
/*===========================================================*/
/*=========== ПОЛОЖЕНИЯ ПРИВОДОВ ============================*/
ЦЕЛ КООРД_ЗАТ          ДЛЯ ВСЕХ;
ЦЕЛ КООРД_ТИГ          ДЛЯ ВСЕХ;

/*=========== РАСХОДА ГАЗА ==================================*/
ПЛАВ ФП_Qгаза         ДЛЯ ВСЕХ;

/*=========== ТОК, НАПРЯЖЕНИЕ ПТД,                   ========*/
/* ПЛАВ ФП_Iптд          ДЛЯ ВСЕХ;
ПЛАВ ФП_Uптд          ДЛЯ ВСЕХ; */

/*=========== ТОК, НАПРЯЖЕНИЕ... ИП       ==RS======*/
ПЛАВ ФП_ПотокОхлаждВоды_ИП2К_К1             ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемператураОхлНаВходе_ИП2К_К1       ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемператураОхлНаВыходе_ИП2К_К1      ДЛЯ ВСЕХ;
ПЛАВ ФП_Rиз_ИП2К_К1                        ДЛЯ ВСЕХ;
ПЛАВ ФП_ТокМодуля0_ИП2К_К1               ДЛЯ ВСЕХ; 
ПЛАВ ФП_ТокМодуля1_ИП2К_К1               ДЛЯ ВСЕХ;
ПЛАВ ФП_ТокМодуля2_ИП2К_К1               ДЛЯ ВСЕХ;
ПЛАВ ФП_ТокМодуля3_ИП2К_К1               ДЛЯ ВСЕХ;
ПЛАВ ФП_ТокМодуля4_ИП2К_К1               ДЛЯ ВСЕХ;
ПЛАВ ФП_ТокМодуля5_ИП2К_К1               ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля0_ИП2К_К1              ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля1_ИП2К_К1              ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля2_ИП2К_К1              ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля3_ИП2К_К1              ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля4_ИП2К_К1              ДЛЯ ВСЕХ;
ПЛАВ ФП_ТемпМодуля5_ИП2К_К1              ДЛЯ ВСЕХ;
ДЦЕЛ ФП_СостояниеМодуля_ИП2К_К1       ДЛЯ ВСЕХ;
ПЛАВ ФП_U380_ИП2К_К1             ДЛЯ ВСЕХ;

/*=========== ОБОБЩЕННЫЕ ПАРАМЕТРЫ I,U,W,R           ========*/
ПЛАВ ФП_Iипн_К1       ДЛЯ ВСЕХ;
ПЛАВ ФП_Uипн_К1       ДЛЯ ВСЕХ;
ПЛАВ ФП_Wипн_К1       ДЛЯ ВСЕХ;
ПЛАВ ФП_Rипн_К1       ДЛЯ ВСЕХ;

ПЛАВ ФП_Iипн_К2       ДЛЯ ВСЕХ;
ПЛАВ ФП_Uипн_К2       ДЛЯ ВСЕХ;
ПЛАВ ФП_Wипн_К2       ДЛЯ ВСЕХ;
ПЛАВ ФП_Rипн_К2       ДЛЯ ВСЕХ;




/*=========== ТЕМПЕРАТУРЫ НАГРЕВАТЕЛЯ========================*/
ПЛАВ ФП_Тдтн          ДЛЯ ВСЕХ;
ПЛАВ ФП_Тн            ДЛЯ ВСЕХ;
ДЦЕЛ ФП_PSWдтн        ДЛЯ ВСЕХ;
/*=========== ТЕМПЕРАТУРЫ РАСПЛАВА   ========================*/
ПЛАВ ФП_Тдтр          ДЛЯ ВСЕХ;
ПЛАВ ФП_Тр            ДЛЯ ВСЕХ;
ДЦЕЛ ФП_PSWдтр        ДЛЯ ВСЕХ;
/*=========== УРОВЕНЬ РАСПЛАВА ========================*/
ПЛАВ ФП_Hур            ДЛЯ ВСЕХ;
ПЛАВ ФП_Hур_ДУ         ДЛЯ ВСЕХ;
ПЛАВ ФП_Hур_ДВ         ДЛЯ ВСЕХ;
ПЛАВ ФП_ТочкиДля_ДУ    ДЛЯ ВСЕХ;

ДЦЕЛ ФП_STAT           ДЛЯ ВСЕХ;
ДЦЕЛ ФП_PEAKW          ДЛЯ ВСЕХ;
ДЦЕЛ ФП_PEAKC          ДЛЯ ВСЕХ;
ДЦЕЛ ФП_RANGE          ДЛЯ ВСЕХ;
ДЦЕЛ ФП_DISP           ДЛЯ ВСЕХ;
ДЦЕЛ ФП_MEAN           ДЛЯ ВСЕХ;
ДЦЕЛ ФП_LASER          ДЛЯ ВСЕХ;
/*=========== ДИАМЕТР КРИСТАЛЛА   ========================*/
ПЛАВ ФП_Dкр           ДЛЯ ВСЕХ;      /* обобщенный Дкр */
ПЛАВ ФП_Dкр_ТДД       ДЛЯ ВСЕХ;      /* читать от  по RS */
ПЛАВ ФП_Dкр_ДВ        ДЛЯ ВСЕХ;      /* по датчику веса */
ПЛАВ ФП_DeltaX        ДЛЯ ВСЕХ;      /* читаем из ТДД */
ПЛАВ ФП_DeltaY        ДЛЯ ВСЕХ;

/*=========== СКОРОСТЬ РОСТА  ========================*/
ПЛАВ ФП_Vроста          ДЛЯ ВСЕХ;      /* читать от Литвинц по RS??? */
/*=========== ТЕМПЕРАТУРЫ СИСТЕМЫ ОХЛ=================*/
ПЛАВ ФП_Твк1          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк2          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк3          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк4          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк5          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк6          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк7          ДЛЯ ВСЕХ;
ПЛАВ ФП_Твк8          ДЛЯ ВСЕХ;
/*=========== НАПРЯЖЕНИЕ ОТ Датчика Касания===================*/
ПЛАВ ФП_Uдк          ДЛЯ ВСЕХ;

/*=========== ДАВЛЕНИЯ ======================================*/
ПЛАВ ФП_Pнк          ДЛЯ ВСЕХ;
ПЛАВ ФП_Pвк          ДЛЯ ВСЕХ;
ПЛАВ ФП_Pавд1        ДЛЯ ВСЕХ;
ПЛАВ ФП_Pавд2        ДЛЯ ВСЕХ;

/*=========== ВЕСА КРИСТАЛЛА ================================*/
ПЛАВ ФП_Ммонокристалла                ДЛЯ ВСЕХ;
ПЛАВ ФП_Мкремния_в_тигле     ДЛЯ ВСЕХ;
ПЛАВ ТК_МначальнойЗагрузки   ДЛЯ ВСЕХ;
ПЛАВ ОП_Мзатравки            ДЛЯ ВСЕХ;

/*=========== ГЕОМЕТРИЯ КРИСТАЛЛА И ТИГЛЯ, РАСПЛАВА ======================*/
ПЛАВ ОП_Lзатравки            ДЛЯ ВСЕХ;


ПЛАВ ФП_ГлубинаРасплава                              ДЛЯ ВСЕХ;
ПЛАВ ОП_Dзеркала_расплава                            ДЛЯ ВСЕХ;
ПЛАВ ФП_Lмонокристалла                               ДЛЯ ВСЕХ;

ПЛАВ ФП_Lначала_текущей_части_монокристалла          ДЛЯ ВСЕХ;
ПЛАВ ФП_Мначала_текущей_части_монокристалла          ДЛЯ ВСЕХ;
ДЦЕЛ ФП_ВремяТекущегоЭтапа                           ДЛЯ ВСЕХ;

ПЛАВ ФП_ДлинаЗатравливания                       ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаПереходаЗатравка_Шейка              ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаШейки                               ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаПереходаШейка_Конус                 ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаКонуса                              ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаПереходаКонус_Цилиндр               ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаСтабилизацииЦилиндра                 ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаЦилиндра                            ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаПереходаЦилиндр_ОбрКонус            ДЛЯ ВСЕХ;
ПЛАВ ФП_ДлинаОбратногоКонуса                     ДЛЯ ВСЕХ;

ПЛАВ ФП_МассаЗатравливания                       ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаПереходаЗатравка_Шейка              ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаШейки                               ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаПереходаШейка_Конус                 ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаКонуса                              ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаПереходаКонус_Цилиндр               ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаСтабилизацииЦилиндра                 ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаЦилиндра                            ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаПереходаЦилиндр_ОбрКонус            ДЛЯ ВСЕХ;
ПЛАВ ФП_МассаОбратногоКонуса                     ДЛЯ ВСЕХ;

/*=========== ДРУГОЕ ======================*/

ПЛАВ ФП_I_ЗР           ДЛЯ ВСЕХ;
ПЛАВ ФП_I_ЗУ           ДЛЯ ВСЕХ;
ПЛАВ ФП_I_ЗВ           ДЛЯ ВСЕХ;
ПЛАВ ФП_I_ТР           ДЛЯ ВСЕХ;
ПЛАВ ФП_I_ТУ           ДЛЯ ВСЕХ;
ПЛАВ ФП_I_ТВ           ДЛЯ ВСЕХ;
ПЛАВ ФП_VзР            ДЛЯ ВСЕХ;
ПЛАВ ФП_VзУ            ДЛЯ ВСЕХ;
ПЛАВ ФП_Vз             ДЛЯ ВСЕХ;
ПЛАВ ФП_Xз             ДЛЯ ВСЕХ;
ПЛАВ ФП_Wз             ДЛЯ ВСЕХ;
ПЛАВ ФП_Wз_УГОЛ        ДЛЯ ВСЕХ;
ПЛАВ ФП_VтР            ДЛЯ ВСЕХ;
ПЛАВ ФП_VтУ            ДЛЯ ВСЕХ;
ПЛАВ ФП_Vт             ДЛЯ ВСЕХ;
ПЛАВ ФП_Xт             ДЛЯ ВСЕХ;
ПЛАВ ФП_Wт             ДЛЯ ВСЕХ;
ПЛАВ ФП_Wт_УГОЛ        ДЛЯ ВСЕХ;

ПЛАВ ФП_L_КЗ_УР        ДЛЯ ВСЕХ;


/*===========================================================*/
/*=========== ЯЧЕЙКИ УПРАВЛЯЮЩИХ ВОЗДЕЙСТВИЙ В ЦАП ==========*/
/*===========================================================*/

ПЛАВ ЗД_Qгаза        ДЛЯ ВСЕХ; /* в литрах */
/*===========================================================*/
/*================           ЗАДАНИЯ   ======================*/
/*===========================================================*/
ПЛАВ ЗД_Pнк                       ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Iптд                      ДЛЯ ВСЕХ;    /**/

ПЛАВ ЗД_Wипн_К1                   ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Wипн_К2                   ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/      ДЛЯ ВСЕХ;    /* 23.12.2005 - База для Рег_РОСТА Зюбин */
ПЛАВ ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее ДЛЯ ВСЕХ;    /* Зюбин добавить 23.12.2005 */

ПЛАВ ЗД_Тн                        ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Тр                        ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Hур                       ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Dкр                       ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Vроста                    ДЛЯ ВСЕХ;    /**/

ПЛАВ ЗД_VзР                      ДЛЯ ВСЕХ;
ПЛАВ ЗД_VзУ                      ДЛЯ ВСЕХ;
ПЛАВ ЗД_Xз                        ДЛЯ ВСЕХ;    /**/
ПЛАВ ЗД_Wз                        ДЛЯ ВСЕХ;
ПЛАВ ЗД_Wз_УГОЛ                   ДЛЯ ВСЕХ;

ПЛАВ ЗД_VтР                      ДЛЯ ВСЕХ;
ПЛАВ ЗД_VтУ                      ДЛЯ ВСЕХ;
ПЛАВ ЗД_Xт                        ДЛЯ ВСЕХ;
ПЛАВ ЗД_Wт                        ДЛЯ ВСЕХ;
ПЛАВ ЗД_Wт_УГОЛ                   ДЛЯ ВСЕХ;

ПЛАВ ЗД_VзР_ПРИВОД                ДЛЯ ВСЕХ;
ПЛАВ ЗД_VзУ_ПРИВОД                ДЛЯ ВСЕХ;
ПЛАВ ЗД_Wз_ПРИВОД                 ДЛЯ ВСЕХ;
ПЛАВ ЗД_VтР_ПРИВОД                ДЛЯ ВСЕХ;
ПЛАВ ЗД_VтУ_ПРИВОД                ДЛЯ ВСЕХ;
ПЛАВ ЗД_Wт_ПРИВОД                 ДЛЯ ВСЕХ;

    /**/
ПЛАВ ЗД_Vз                        ДЛЯ ВСЕХ;
ПЛАВ ЗД_Vт                        ДЛЯ ВСЕХ;



/*===========================================================*/
/*========= ТЕХНОЛОГИЧЕСКИЕ КОНСТАНТЫ ПРОЦЕССОВ =============*/
/*===========================================================*/
/*======= ТЕХНОЛОГИЧЕСКИЕ КОНСТАНТЫ ГАЗОВАКУУМНОЙ СИСТЕМЫ ===*/
/*===========================================================*/
/*===========================================================*/
/*============ ТЕХНОЛОГИЧЕСКИЕ КОНСТАНТЫ ПРОЦЕССОВ===========*/
/*===========================================================*/
 /* К о н т р о л ь   и с х о д н о г о   */
 /* К о н т р о л ь н о е   в а к у у м и р о в а н и е   */
ПЛАВ ТК_ГлубокийВакуум_Р2                       ДЛЯ ВСЕХ;
ДЦЕЛ ТК_TоткачкиДопустимое_Т2доP2        ДЛЯ ВСЕХ;

ДЦЕЛ ТК_ВремяПродувки_Т3                        ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТоткачкиАргона_Т4            ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ЧислоЦикловОсушки_Nц                     ДЛЯ ВСЕХ;

ДЦЕЛ ТК_ВремяОткачкиПослеОсушки_Т5  ДЛЯ ВСЕХ;


ПЛАВ ТК_ПределДопРнкПослеКонтроляНатек_Р3       ДЛЯ ВСЕХ; /*?? резерв ??*/


   /* К о н т р о л ь    н а т е к а н и я*/
ДЦЕЛ ТК_Тотгазовки_КонтрНат        ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ПериодКонтроля_КонтрНат             ДЛЯ ВСЕХ;
ПЛАВ ТК_ДопустимоеНатекание_КнтрНат                       ДЛЯ ВСЕХ;

   /* Р а б о ч е е   В а к у у м и р о в а н и е   */
ДЦЕЛ ТК_ВремяОткачкиДопустимое_Т7       ДЛЯ ВСЕХ;

   /*П о д г о  т о в к а   к   плавлению загрузки*/
ПЛАВ ТК_ЗД_Qгаза_ППЗ                       ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Pнк_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wипн_К1_ППЗ                     ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wипн_К2_ППЗ                     ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Тр_ППЗ                          ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Vроста_ППЗ                      ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Hур_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Dкр_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_VзР_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_VзУ_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Xз_ППЗ                          ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wз_ППЗ                          ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wз_УГОЛ_ППЗ                     ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_VтР_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_VтУ_ППЗ                         ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Xт_ППЗ                          ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wт_ППЗ                          ДЛЯ ВСЕХ;  /*?? резерв ??*/
ПЛАВ ТК_ЗД_Wт_УГОЛ_ППЗ                     ДЛЯ ВСЕХ;  /*?? резерв ??*/

  /*П о д г о  т о в к а   к   с т а б и л и з а ц и и   р а с п л а в а*/
ПЛАВ ТК_Qгаза_ПодгСтабРаспл                  ДЛЯ ВСЕХ;
ПЛАВ ТК_Pнк_ПодгСтабРаспл                    ДЛЯ ВСЕХ;
ПЛАВ ТК_Hур_ПодгСтабРаспл                 ДЛЯ ВСЕХ;
ПЛАВ ТК_Wт_ПодгСтабРаспл                             ДЛЯ ВСЕХ; 
ПЛАВ ТК_Wипн_К1_ПодгСтабРаспл                        ДЛЯ ВСЕХ;

   /*С т а б и л и з а ц и я   р а с п л а в а */
ЦЕЛ  ТК_Режим_СтабРаспл                        ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Время_СтабРаспл                          ДЛЯ ВСЕХ;
ПЛАВ ТК_Тр_СтабРаспл                             ДЛЯ ВСЕХ;
ПЛАВ ТК_ТнОж_СтабРасп                            ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ВремяОсред_Тн_СтабРаспл                   ДЛЯ ВСЕХ;
   /*П е р е м е щ е н и е  З а т р а в к и  П о л о ж е н и е  П р о г р е в а */
ПЛАВ ТК_РасстояниеДоРасплава_Lпп     ДЛЯ ВСЕХ;
ПЛАВ ТК_VзДвижения_кРасплаву_Vпп                             ДЛЯ ВСЕХ;
   /*З а т р а в л е н и е */
ПЛАВ ТК_Dмин_Затравл                            ДЛЯ ВСЕХ;
ПЛАВ ТК_Dмакс_Затравл                           ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТcлепогоПлавления_Затравл                  ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТожиданияДиаметра_Затравл           ДЛЯ ВСЕХ;

ПЛАВ ТК_Wз_Затравл                              ДЛЯ ВСЕХ;
ПЛАВ ТК_Vз_Погружения_Затравл                   ДЛЯ ВСЕХ;
ПЛАВ ТК_Wт_Затравл                              ДЛЯ ВСЕХ;
ПЛАВ ТК_Hур_Затравл                             ДЛЯ ВСЕХ;
ПЛАВ ТК_Тн_Затравл                              ДЛЯ ВСЕХ;
ПЛАВ ТК_Pнк_Затравл                             ДЛЯ ВСЕХ;
ПЛАВ ТК_Qгаза_Затравл                           ДЛЯ ВСЕХ;
ПЛАВ ТК_Hпогр_Затравл                           ДЛЯ ВСЕХ;
ПЛАВ ТК_VзВытягивания_Затравл                   ДЛЯ ВСЕХ; /* РЕЗЕРВ */
ПЛАВ ТК_ДиаметрДендрита                         ДЛЯ ВСЕХ;
/* В ы р а щ и в а н и е   Ш е й к и */
ПЛАВ ТК_Ки_Dкр_Шейка                            ДЛЯ ВСЕХ;
ПЛАВ ТК_Кд_Dкр_Шейка                            ДЛЯ ВСЕХ;
ПЛАВ ТК_Кп_Dкр_Шейка                            ДЛЯ ВСЕХ;
ПЛАВ ТК_Кз_Dкр_Шейка                            ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Пауза_Dкр_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_VслепогоВыращивания_Шейка                          ДЛЯ ВСЕХ;
ПЛАВ ТК_ПоправкаТн_Шейка                          ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТcлепогоВыращивания_Шейка            ДЛЯ ВСЕХ;
ПЛАВ ТК_DкрОжидаемый_Шейка                       ДЛЯ ВСЕХ;
ПЛАВ ТК_Попр_кТн_поDкро_Шейка             ДЛЯ ВСЕХ;
ПЛАВ ТК_ЗД_Dкр_Шейка                      ДЛЯ ВСЕХ;
ПЛАВ ТК_Ки_Vроста_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_Кд_Vроста_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_Кп_Vроста_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_Кз_Vроста_Шейка                         ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Пауза_Vроста_Шейка                      ДЛЯ ВСЕХ;
ПЛАВ ТК_ЗД_Vроста_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_Dкр_НачалаСчетаДлины_Шейка                          ДЛЯ ВСЕХ;
ПЛАВ ТК_DкрОтбраковки_Шейка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_ДлинаХорошейЧасти_Шейка                       ДЛЯ ВСЕХ;
ПЛАВ ТК_VпониженияТемпературы_Шейка            ДЛЯ ВСЕХ;

/* У п р е ж д е н и е  о т р ы в а   ш е й к и */
ПЛАВ ТК_БезопасныйDкр_Шейка                                ДЛЯ ВСЕХ;
ПЛАВ ТК_VзБезопасноеСреднее                     ДЛЯ ВСЕХ;
ПЛАВ ТК_VзБезопасное_Шейка                      ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТбезопаснойСкорости_Шейка   ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ТстабилизацииDкр_Шейка                ДЛЯ ВСЕХ;
ПЛАВ ТК_ВерхнийПорогПодрезкиDкр_Шейка           ДЛЯ ВСЕХ;

  /* В ы р а щ и в а н и е   к о н у с а */
ПЛАВ ТК_ПоправкаТн_Конус                               ДЛЯ ВСЕХ;
ПЛАВ ТК_Vз_Конус                                ДЛЯ ВСЕХ;
ПЛАВ ТК_DконусаКонечный_Конус                         ДЛЯ ВСЕХ;
ПЛАВ ТК_К1_Конуса                               ДЛЯ ВСЕХ;
ПЛАВ ТК_К2_Конуса                               ДЛЯ ВСЕХ;
   /* П е р е х о д   к о н у с - ц и л и н д р */
ПЛАВ ТК_Ки_Dкр_СтабЦил                     ДЛЯ ВСЕХ;
ПЛАВ ТК_Кп_Dкр_СтабЦил                     ДЛЯ ВСЕХ;
ПЛАВ ТК_Кд_Dкр_СтабЦил                     ДЛЯ ВСЕХ;
ПЛАВ ТК_Кз_Dкр_СтабЦил                     ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Пауза_Dкр_СтабЦил                  ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ВремяПереходаКонусЦилиндр          ДЛЯ ВСЕХ;

ПЛАВ ТК_DкрЦилиндра_КонЦил           ДЛЯ ВСЕХ;
ПЛАВ ТК_К1_КонЦил                    ДЛЯ ВСЕХ;
ПЛАВ ТК_К2_КонЦил                    ДЛЯ ВСЕХ;
ПЛАВ ТК_VразращиванияГр_КонЦил       ДЛЯ ВСЕХ;

   /* С т а б и л и з а ц и я   ц и л и н д р а */
ПЛАВ ТК_ПоправкаТн_СтабЦил                           ДЛЯ ВСЕХ;
ПЛАВ ТК_VзСтабНачальная_СтабЦил                   ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ВремяСтабЦил                            ДЛЯ ВСЕХ;

ПЛАВ ТК_Ки_Dкр_Цилиндр        ДЛЯ ВСЕХ;
ПЛАВ ТК_Кп_Dкр_Цилиндр        ДЛЯ ВСЕХ;
ПЛАВ ТК_Кд_Dкр_Цилиндр        ДЛЯ ВСЕХ;
ПЛАВ ТК_Кз_Dкр_Цилиндр        ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Пауза_Dкр_Цилиндр     ДЛЯ ВСЕХ;

ПЛАВ ТК_Кп_Vроста_Цилиндр         ДЛЯ ВСЕХ;
ПЛАВ ТК_Ки_Vроста_Цилиндр         ДЛЯ ВСЕХ;
ПЛАВ ТК_Кд_Vроста_Цилиндр         ДЛЯ ВСЕХ;
ПЛАВ ТК_Кз_Vроста_Цилиндр         ДЛЯ ВСЕХ;
ДЦЕЛ ТК_Пауза_Vроста_Цилиндр      ДЛЯ ВСЕХ;



ПЛАВ ТК_VзБезопасное_Цилиндр                      ДЛЯ ВСЕХ;
ПЛАВ ТК_ВерхнийПорогПодрезкиDкр_Цилиндр           ДЛЯ ВСЕХ;
ПЛАВ ТК_РЕЗЕРВ_1              ДЛЯ ВСЕХ; /* Кдв, Мкр = Кдв*Мдв,  */                                   
ПЛАВ ТК_РЕЗЕРВ_2              ДЛЯ ВСЕХ;                                                            
ПЛАВ ТК_РЕЗЕРВ_3              ДЛЯ ВСЕХ;                                                            
ПЛАВ ТК_РЕЗЕРВ_4              ДЛЯ ВСЕХ; /* граничное значение изменения диаметра при контроле окончания перехода К-Ц */ 
ПЛАВ ТК_РЕЗЕРВ_5              ДЛЯ ВСЕХ; /* Кк-ц, Vслеп.выр. = Vразращ.Dкр * Кк-ц (при переходе К-Ц) */



   /* К о н т р о л ь   о к о н ч а н и я   ц и л и н д р а */
ПЛАВ ТК_ПороговаяLкр_Цилиндр                               ДЛЯ ВСЕХ;
ПЛАВ ТК_Загрузки                                ДЛЯ ВСЕХ;
ПЛАВ ТК_ПороговаяМрасплава_Цилиндр                  ДЛЯ ВСЕХ;
   /* ЗАТ_РС_ОК */
ДЦЕЛ ТК_Нормирование_Времени                    ДЛЯ ВСЕХ;
ДЦЕЛ ТК_ВремяИзменения_V_Диаметра               ДЛЯ ВСЕХ;
ПЛАВ ТК_КоррекцииСкорости                       ДЛЯ ВСЕХ;
ПЛАВ ТК_АварийнаяСкоростьПодрезки               ДЛЯ ВСЕХ;
ПЛАВ ТК_СлабаяПодрезка                          ДЛЯ ВСЕХ;
ПЛАВ ТК_СильнаяПодрезка                         ДЛЯ ВСЕХ;
ПЛАВ ТК_ДлинаПереходаЦилиндрКонус               ДЛЯ ВСЕХ;
   /* П р о ц е с с   о т р ы в   к р и с т а л л а */
ПЛАВ ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА               ДЛЯ ВСЕХ;
ПЛАВ ТК_УскорениеПриОтрывеКристалла               ДЛЯ ВСЕХ;
ПЛАВ ТК_VзПослеОтрываКристалла        ДЛЯ ВСЕХ; 

/*===========================================================*/
/*===========================================================*/
/*===========================================================*/
/*============       НАСТРОЕЧНЫЕ ПАРАМЕТРЫ        ===========*/
/*===========================================================*/
/*===========================================================*/
/*===========================================================*/
ЛОГ НП_ФлагРасчетаHур_поДУ         ДЛЯ ВСЕХ;/* разрешение исп. при расчете Dкр */
ЛОГ НП_ФлагРасчетаHур_поДВ         ДЛЯ ВСЕХ;/* разрешение исп. при расчете Dкр */
ЛОГ НП_ФлагРасчетаDкр_поТДД        ДЛЯ ВСЕХ;/* разрешение исп. при расчете Dкр */
ЛОГ НП_ФлагРасчетаDкр_поДВ         ДЛЯ ВСЕХ;/* разрешение исп. при расчете Dкр */

ДЦЕЛ НП_Тизмерения_Dкр_ДВ          ДЛЯ ВСЕХ; /*время измерения Dкр по датчику веса */
/*===========================================================*/
/*============  НП ПОДСИСТЕМ Д2.31 - Д2.39        ===========*/
/*===========================================================*/
/* === Тарировка Затравки */
ПЛАВ НП_Lз_ОТ_КВП_ДО_ДП_Lппз                         ДЛЯ ВСЕХ;
ПЛАВ НП_Lз_ОТ_КВП_ДО_СТЫКА_НК                        ДЛЯ ВСЕХ;
/* ПЛАВ НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2                      ДЛЯ ВСЕХ; /* ????? */
ПЛАВ НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1                     ДЛЯ ВСЕХ;
ПЛАВ НП_Lз_ОТ_КВП_ДО_КНП                             ДЛЯ ВСЕХ;
ПЛАВ Реальная_Xз_Измеренная_Оператором               ДЛЯ ВСЕХ;
ПЛАВ НП_Кдв                                          ДЛЯ ВСЕХ; 
ПЛАВ НП_Мзатравкодержателя                           ДЛЯ ВСЕХ;
ПЛАВ НП_Мтроса                                       ДЛЯ ВСЕХ;

ПЛАВ ОП_Lсумм_Цилиндров ДЛЯ ВСЕХ;    /* при выращивании нескольких коротких */
ДЦЕЛ ОП_Тсумм_Цилиндров ДЛЯ ВСЕХ; /* кристаллов на одной плавке необходима */
ПЛАВ ОП_Мсумм_Цилиндров ДЛЯ ВСЕХ;     /* коррекция ТП выращивания цилиндра */


/* === Тарировка Тигля */
ПЛАВ НП_Lт_ОТ_КНП_ДО_КВП                             ДЛЯ ВСЕХ;
ПЛАВ НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР                ДЛЯ ВСЕХ;


/* === Тарировка ГВС */
ПЛАВ НП_ОбъемВакПолости_V                            ДЛЯ ВСЕХ;
ПЛАВ НП_ДавлениеВключенияДВН_P1                 ДЛЯ ВСЕХ;
ДЦЕЛ НП_КонтрольноеВремяДостиженияP1_Т1         ДЛЯ ВСЕХ;
ПЛАВ НП_Pатмосф                                 ДЛЯ ВСЕХ; /* иниц. 720 мм.рт.ст. */
/*===========================================================*/
/*============  НП РЕГУЛЯТОРОВ Д2.40 - Д2.48      ===========*/
/*===========================================================*/

/* === Тарировка Регулятора Расхода Газа */
ДЦЕЛ НП_ВремяПереходногоПроцессаQгаза                ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьQгаза                             ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Давления */
ПЛАВ НП_Pпор                                         ДЛЯ ВСЕХ;
ДЦЕЛ НП_КОЭФ_НА_ОТКР                                 ДЛЯ ВСЕХ;
ДЦЕЛ НП_КОЭФ_НА_ЗАКР                                 ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяПереходногоПроцессаPнк                  ДЛЯ ВСЕХ;
ПЛАВ ОП_ПогрешностьPнк                               ДЛЯ ВСЕХ; /* !!!!!! перевести в ОП */
ПЛАВ НП_КоэфА_Pнк                                    ДЛЯ ВСЕХ;
ПЛАВ НП_КоэфВ_Pнк                                    ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Мощности ПТД */
ДЦЕЛ НП_ВремяПереходногоПроцессаWптд                 ДЛЯ ВСЕХ;
ПЛАВ НП_Кп_Wптд                                      ДЛЯ ВСЕХ;
ДЦЕЛ НП_ТипИПН                                       ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_Wптд                                   ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьWипн_К1                           ДЛЯ ВСЕХ;
ПЛАВ НП_Iптд_МАХ                                     ДЛЯ ВСЕХ;
ПЛАВ НП_Wипн_К1_МАХ                                  ДЛЯ ВСЕХ;
ПЛАВ НП_ДелтаW_Разогрева                             ДЛЯ ВСЕХ;
ДЦЕЛ НП_ДелтаВремениРазогрева                        ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Температуры Нагревателя */
ПЛАВ НП_Тн_MAX                                       ДЛЯ ВСЕХ;
ПЛАВ НП_Кп_Тн                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Кд_Тн                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Ки_Тн                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Кз_Тн                                        ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяПереходногоПроцессаТн                   ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьТн                                ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_Тн                                     ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Температуры Расплава */
ПЛАВ НП_Кп_Тр                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Кд_Тр                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Ки_Тр                                        ДЛЯ ВСЕХ;
ПЛАВ НП_Кз_Тр                                        ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_Тр                                     ДЛЯ ВСЕХ;
ПЛАВ НП_Тр_MAX                                       ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяПереходногоПроцессаТр                   ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьТр                                ДЛЯ ВСЕХ;
ПЛАВ НП_ДелтаТр_MAX                                  ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Уровня */
ПЛАВ НП_MIN_ДУ_Hур                                   ДЛЯ ВСЕХ;
ПЛАВ НП_MAX_ДУ_Hур                                   ДЛЯ ВСЕХ;
ПЛАВ НП_MIN_ДУДД_Hур                                 ДЛЯ ВСЕХ;
ПЛАВ НП_MAX_ДУДД_Hур                                 ДЛЯ ВСЕХ;
ПЛАВ НП_Кп_ДУ_Hур                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Кп_ДУДД_Hур                                  ДЛЯ ВСЕХ;
ПЛАВ НП_ПредупредительныйHур                         ДЛЯ ВСЕХ;
ПЛАВ НП_АварийнаяОшибкаHур                           ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Диаметра */
ПЛАВ НП_Кп_Dкр                                       ДЛЯ ВСЕХ;
ПЛАВ НП_Кд_Dкр                                       ДЛЯ ВСЕХ;
ПЛАВ НП_Ки_Dкр                                       ДЛЯ ВСЕХ;
ПЛАВ НП_Кз_Dкр                                       ДЛЯ ВСЕХ;
ПЛАВ НП_Dкр_MAX                                      ДЛЯ ВСЕХ;
ПЛАВ НП_ДелтаVзРС_МАХ                              ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяПереходногоПроцессаDкр                  ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьDкр                               ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_Dкр                                    ДЛЯ ВСЕХ;

/* === Тарировка Регулятора Роста */
ПЛАВ НП_Кп_Vроста                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Кд_Vроста                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Ки_Vроста                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Кз_Vроста                                    ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_Vроста                                 ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяОсредненияVзVроста                      ДЛЯ ВСЕХ;
ПЛАВ НП_VзР_MAX                                  ДЛЯ ВСЕХ;  /* вопрос */
ПЛАВ НП_ДелтаТн_MAX                                  ДЛЯ ВСЕХ;
ДЦЕЛ НП_Пауза_РЕГ_РОСТА                              ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяПереходногоПроцессаVроста               ДЛЯ ВСЕХ;
ПЛАВ НП_ПогрешностьVроста                            ДЛЯ ВСЕХ;

/*===========================================================*/
/*============  НП ДАТЧИКОВ Д2.49 - Д2.53         ===========*/
/*===========================================================*/
/* === Тарировка ДУ */


/* === Тарировка ТДД */
ПЛАВ НП_ПоправкаVтР_Нур                              ДЛЯ ВСЕХ;
/* для ДУ -----------------*/
ПЛАВ НП_THRESH_ДУ                               ДЛЯ ВСЕХ;
ПЛАВ НП_DRELQ_ДУ                                ДЛЯ ВСЕХ;
ПЛАВ НП_THRESH_GIST_ДУ                          ДЛЯ ВСЕХ;
ПЛАВ НП_RELATIV_QUALITY_ДУ                      ДЛЯ ВСЕХ;
ПЛАВ НП_AH_ДУ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_BH_ДУ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_CH_ДУ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_MIN_SIGN_RANGE_ДУ                       ДЛЯ ВСЕХ;
ПЛАВ НП_MIDDLE_ДУ                               ДЛЯ ВСЕХ;
ПЛАВ НП_MIDDLE_SIGN_ДУ                          ДЛЯ ВСЕХ;
ПЛАВ НП_MAX_SIGNAL_VALUE_ДУ                     ДЛЯ ВСЕХ;
ПЛАВ НП_T_MAX_ДУ                                ДЛЯ ВСЕХ;
ПЛАВ НП_BAD_NUMB_ДУ                             ДЛЯ ВСЕХ;
ПЛАВ НП_H_MAX_ДУ                                ДЛЯ ВСЕХ;
ПЛАВ НП_H_MIN_ДУ                                ДЛЯ ВСЕХ;
ПЛАВ НП_WIDTH_PEAK_MAX_ДУ                       ДЛЯ ВСЕХ;
ПЛАВ НП_ADAPT_LENGTH_ДУ                         ДЛЯ ВСЕХ;
ПЛАВ НП_KOL_KALIBR_ДУ                           ДЛЯ ВСЕХ;
ПЛАВ НП_CORRECT_LEVEL_LASER_1_ДУ                ДЛЯ ВСЕХ;
ПЛАВ НП_NLINE1_ДУ                               ДЛЯ ВСЕХ;
ПЛАВ НП_NLINE2_ДУ                               ДЛЯ ВСЕХ;

ПЛАВ НП_EXPOSURE_TIME0_ДУ                       ДЛЯ ВСЕХ;
ПЛАВ НП_EXPOSURE_TIME1_ДУ                       ДЛЯ ВСЕХ;
/* для ТДД -----------------*/
ПЛАВ НП_XTOLER                                       ДЛЯ ВСЕХ;
ПЛАВ НП_YTOLER                                       ДЛЯ ВСЕХ;
ПЛАВ НП_YDOWNTOLER                                   ДЛЯ ВСЕХ;
ПЛАВ НП_NUMOFSTR                                     ДЛЯ ВСЕХ;
ПЛАВ НП_THRRELIAB                                    ДЛЯ ВСЕХ;
ПЛАВ НП_THRDERIV                                     ДЛЯ ВСЕХ;
ПЛАВ НП_THRDERIVCLB                                  ДЛЯ ВСЕХ;
ПЛАВ НП_BIGZERO_LVL                                  ДЛЯ ВСЕХ;
ПЛАВ НП_BIGPLUS_LVL                                 ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLZERO_LVL                                ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLPLUS_LVL                                ДЛЯ ВСЕХ;

ПЛАВ НП_MINAVERTIME                                  ДЛЯ ВСЕХ;

ПЛАВ НП_BIGZERO_CTG                                    ДЛЯ ВСЕХ;
ПЛАВ НП_BIGZERO_KY                                     ДЛЯ ВСЕХ;
ПЛАВ НП_BIGZERO_X                                     ДЛЯ ВСЕХ;
ПЛАВ НП_BIGZERO_TG                                   ДЛЯ ВСЕХ;
ПЛАВ НП_BIGPLUS_CTG                               ДЛЯ ВСЕХ;
ПЛАВ НП_BIGPLUS_KY                                ДЛЯ ВСЕХ;
ПЛАВ НП_BIGPLUS_X                                ДЛЯ ВСЕХ;
ПЛАВ НП_BIGPLUS_TG                              ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLZERO_CTG                                    ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLZERO_KY                                     ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLZERO_X                                     ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLZERO_TG                                   ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLPLUS_CTG                               ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLPLUS_KY                                ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLPLUS_X                                ДЛЯ ВСЕХ;
ПЛАВ НП_SMALLPLUS_TG                              ДЛЯ ВСЕХ;

/* ПЛАВ НП_ПОПРАВКА_К_ТДД                            ДЛЯ ВСЕХ; */
ПЛАВ  НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР                   ДЛЯ ВСЕХ;
ПЛАВ  НП_ПОПРАВКА_К_ТДД_ШЕЙКА                     ДЛЯ ВСЕХ;

/* === Тарировка ДТН */
ПЛАВ НП_Тсм_ДТН                                      ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяОсреднения_ДТН                          ДЛЯ ВСЕХ;

/* === Тарировка ДТР */
ПЛАВ НП_Тсм_ДТР                                      ДЛЯ ВСЕХ;
ДЦЕЛ НП_ВремяОсреднения_ДТР                          ДЛЯ ВСЕХ;

/*===========================================================*/
/*============  НП ПРИВОДОВ Д2.54 - Д2.57         ===========*/
/*===========================================================*/
/* === Тарировка Приводов */
ПЛАВ НП_Номинальный_Коэф_V_ЗР                        ДЛЯ ВСЕХ;
ПЛАВ НП_Номинальный_Коэф_X_ЗР                        ДЛЯ ВСЕХ;
ПЛАВ НП_Номинальный_Коэф_V_ЗУ                        ДЛЯ ВСЕХ;
ПЛАВ НП_Номинальный_Коэф_X_ЗУ                        ДЛЯ ВСЕХ;
/* решить вопрос о прямой модификации их с экрана тарировки ЗУ, ЗР */
ПЛАВ НП_Коэф_V_ЗР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ЗР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_V_ЗУ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ЗУ                                    ДЛЯ ВСЕХ;

ПЛАВ НП_Коэф_V_ЗВ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ЗВ                                    ДЛЯ ВСЕХ;

ПЛАВ НП_Коэф_V_ТР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ТР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_V_ТУ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ТУ                                    ДЛЯ ВСЕХ;

ПЛАВ НП_Коэф_V_ТВ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_Коэф_X_ТВ                                    ДЛЯ ВСЕХ;

ПЛАВ НП_РАБ_УСК_ЗР                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ЗР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ЗР                                   ДЛЯ ВСЕХ;
ПЛАВ НП_РАБ_УСК_ЗУ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ЗУ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ЗУ                                   ДЛЯ ВСЕХ;

ПЛАВ НП_РАБ_УСК_ЗВ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ЗВ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ЗВ                                   ДЛЯ ВСЕХ;

ПЛАВ НП_РАБ_УСК_ТР                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ТР                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ТР                                   ДЛЯ ВСЕХ;
ПЛАВ НП_РАБ_УСК_ТУ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ТУ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ТУ                                   ДЛЯ ВСЕХ;

ПЛАВ НП_РАБ_УСК_ТВ                                   ДЛЯ ВСЕХ;
ПЛАВ НП_КОЭФ_А_ТВ                                    ДЛЯ ВСЕХ;
ПЛАВ НП_АВР_ТОР_ТВ                                   ДЛЯ ВСЕХ;

/*===========================================================*/
/*============  НП ВПО      Д2.58 - Д2.59         ===========*/
/*===========================================================*/
/*===========================================================*/
/*============  НП ИП2К     Д2.60 - Д2.61         ===========*/
/*===========================================================*/
/* ИП_ЛИТ */

ПЛАВ НП_ТокЗащитыМодуля_ИП2К_К1                               ДЛЯ ВСЕХ;
ПЛАВ НП_СкоростьИзменения_W_ИП2К_К1                           ДЛЯ ВСЕХ;
ДЦЕЛ НП_МинимальноеКоличествоМодулей_ИП2К_К1                  ДЛЯ ВСЕХ;
ПЛАВ НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ            ДЛЯ ВСЕХ;
ПЛАВ НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ                    ДЛЯ ВСЕХ;
ПЛАВ НП_УставкаПотокаОхлЖидкости_ИП2К_К1                      ДЛЯ ВСЕХ;
ПЛАВ НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1                 ДЛЯ ВСЕХ;
ПЛАВ НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1                ДЛЯ ВСЕХ;
ПЛАВ НП_НижняяГраницаRиз_ИП2К_К1                                ДЛЯ ВСЕХ;
ПЛАВ НП_НижняяГраницаRн_ИП2К_К1                                ДЛЯ ВСЕХ;
ПЛАВ НП_ВерхняяГраницаRн_ИП2К_К1                               ДЛЯ ВСЕХ;
/*-----------------------------------------------------------*/

ЦЕЛ НП_РЕЖ_ИСПОЛН_РА                                ДЛЯ ВСЕХ;

ПЛАВ НП_РАДИУС_СТЕНКИ_ТИГЛЯ                         ДЛЯ ВСЕХ;
ПЛАВ НП_РАДИУС_ДНА_ТИГЛЯ                            ДЛЯ ВСЕХ;
ПЛАВ НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ       ДЛЯ ВСЕХ;

ПЛАВ НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ ДЛЯ ВСЕХ; /* мм.рт.ст */
ПЛАВ НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                       ДЛЯ ВСЕХ; /* мм.рт.ст */
ПЛАВ НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                              ДЛЯ ВСЕХ; /* 100 Вт   */
ДЦЕЛ НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                              ДЛЯ ВСЕХ; /* дельта разогрева */
ПЛАВ НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                         ДЛЯ ВСЕХ; /* мм.рт.ст.*/
ПЛАВ НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                          ДЛЯ ВСЕХ; /* мм.рт.ст.*/
ПЛАВ НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                     ДЛЯ ВСЕХ; /* 100 КВт  */
ДЦЕЛ НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА                                 ДЛЯ ВСЕХ;
ПЛАВ НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                      ДЛЯ ВСЕХ;
ДЦЕЛ НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                      ДЛЯ ВСЕХ;


/* качество тарировки конца затравки и уровня расплава */
ЛОГ ФлагLмонокристалла                              ДЛЯ ВСЕХ;


/* === !!!!!!! ???????? */


ПЛАВ НП_МаксимальнаяVзР                              ДЛЯ ВСЕХ; /*!!!!! непонятно зачем - убрать? */


/*===========================================================*/
/*============       ОПРЕДЕЛЯЕМЫЕ ПАРАМЕТРЫ       ===========*/
/*===========================================================*/

ПЛАВ ОП_Lт_ОТ_КНП_ДО_ПНУР                                   ДЛЯ ВСЕХ;
/* затравливание */
ПЛАВ ОП_КоординатаТекЧастиМонокристалла                     ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаЗатравливания                       ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаПереходаЗатравка_Шейка              ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаШейки                               ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаПереходаШейка_Конус                 ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаКонуса                              ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаПереходаКонус_Цилиндр               ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаСтабилизацииЦилиндра                 ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаЦилиндра                            ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаПереходаЦилиндр_ОбрКонус            ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаНачалаОбратногоКонуса                     ДЛЯ ВСЕХ;
ПЛАВ ОП_КоординатаОрываМонокристалла                        ДЛЯ ВСЕХ;



/*============================================================*/

 СОСТ Начало{     /* состояния процесса инициализация */
    /*=======================================================*/
    /*========= ИНИЦИАЛИЗАЦИЯ ЛОГИЧЕСКИХ ПЕРЕМЕННЫХ =========*/
    /*=======================================================*/
      ТекущийРежим = РЕЖИМ_ИНИЦИАЛИЗАЦИИ;
      ТекущийЭтап = ЭТАП_КИП;
      ФлагПовторнойЗагрузки = ВКЛ;        /*добавлено*/
      ФП_МассаЗатравливания            = 0.0;
      ФП_МассаПереходаЗатравка_Шейка   = 0.0;
      ФП_МассаШейки                    = 0.0;
      ФП_МассаПереходаШейка_Конус      = 0.0;
      ФП_МассаКонуса                   = 0.0;
      ФП_МассаПереходаКонус_Цилиндр    = 0.0;
      ФП_МассаСтабилизацииЦилиндра     = 0.0;
      ФП_МассаЦилиндра                 = 0.0;
      ФП_МассаПереходаЦилиндр_ОбрКонус = 0.0;
      ФП_МассаОбратногоКонуса          = 0.0;

      ФП_ДлинаЗатравливания            = 0.0;
      ФП_ДлинаПереходаЗатравка_Шейка   = 0.0;
      ФП_ДлинаШейки                    = 0.0;
      ФП_ДлинаПереходаШейка_Конус      = 0.0;
      ФП_ДлинаКонуса                   = 0.0;
      ФП_ДлинаПереходаКонус_Цилиндр    = 0.0;
      ФП_ДлинаСтабилизацииЦилиндра     = 0.0;
      ФП_ДлинаЦилиндра                 = 0.0;
      ФП_ДлинаПереходаЦилиндр_ОбрКонус = 0.0;
      ФП_ДлинаОбратногоКонуса          = 0.0;

      КООРД_ЗАТ = КООРД_ЗАТ_НЕОПРЕДЕЛЕНА;
      КООРД_ТИГ = КООРД_ТИГ_НЕОПРЕДЕЛЕНА;
      Флаг_КонецТП = ВЫКЛ;

      ФлагL_КЗ_УР = ВКЛ; /* так, чтобы вначале не ругался ЦУКМ... 16.01.2004 */

      ФлагHур     = ВКЛ;
      ФлагHур_ДУ  = ВКЛ;
      ФлагHур_ДВ  = ВКЛ;

      ФлагDкр     = ВКЛ;
      ФлагDкр_ТДД = ВКЛ;
      ФлагDкр_ДВ  = ВКЛ;

      ФлагДТН = ВКЛ;
      ФлагДТР = ВКЛ;
      ФлагВПО = ВКЛ;
      ФлагРегулятора_V_ЗР = ВЫКЛ;
      ФлагРегулятора_X_ЗР = ВЫКЛ;
      ФлагРегулятора_V_ЗУ = ВЫКЛ;
      ФлагРегулятора_X_ЗУ = ВЫКЛ;
      ФлагРегулятора_V_ЗВ = ВЫКЛ;
      ФлагРегулятора_X_ЗВ = ВЫКЛ;
      ФлагРегулятора_V_ТР = ВЫКЛ;
      ФлагРегулятора_X_ТР = ВЫКЛ;
      ФлагРегулятора_V_ТУ = ВЫКЛ;
      ФлагРегулятора_X_ТУ = ВЫКЛ;
      ФлагРегулятора_V_ТВ = ВЫКЛ;
      ФлагРегулятора_X_ТВ = ВЫКЛ;

      К_КВП_З = ВЫКЛ;
      К_КНП_З = ВЫКЛ;
      К_КВП_Т = ВЫКЛ;
      К_КНП_Т = ВЫКЛ;

      НП_РЕЖ_ИСПОЛН_РА = НЕПРЕРЫВНО;

      НП_РАДИУС_СТЕНКИ_ТИГЛЯ                   = 219.5; /* 218.3; */
      НП_РАДИУС_ДНА_ТИГЛЯ                      = 448.0; /* 442.0; */
      НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ = 82.0;  /* 75.8;  */
      InitTigGeometry(НП_РАДИУС_СТЕНКИ_ТИГЛЯ,
                      НП_РАДИУС_ДНА_ТИГЛЯ,
                      НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ,
                      (ПЛАВ)КОЭФ_ПЛОТНОСТИ_ЖД_SI); /* инициализируем описание геометрии тигля */


 НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ  = ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ; 
 НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                        = ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                      ; 
 НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                               = ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                             ; 
 НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                               = ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                             ; 
 НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                          = ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                        ;
 НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                           = ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                         ;
 НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                      = ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                    ;
 НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА                                  = ОТЖИГ_ВРЕМЯ_ОТЖИГА                                ;
 НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                       = ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                     ;
 НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                       = ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                     ;
  

      ФлагLмонокристалла = ВЫКЛ;

/* ИП_ЛИТ */
      Флаг_ИП2К_К1     = ВЫКЛ;
      Флаг_ИП2К_К2     = ВЫКЛ;

      Флаг_НаличияМодуля0_ИП2К_К1 = ВЫКЛ; /*  */
      Флаг_НаличияМодуля1_ИП2К_К1 = ВЫКЛ; /*  */
      Флаг_НаличияМодуля2_ИП2К_К1 = ВЫКЛ; /*  */
      Флаг_НаличияМодуля3_ИП2К_К1 = ВЫКЛ; /*  */
      Флаг_НаличияМодуля4_ИП2К_К1 = ВЫКЛ; /*  */
      Флаг_НаличияМодуля5_ИП2К_К1 = ВЫКЛ; /*  */

      НП_ТокЗащитыМодуля_ИП2К_К1                    = 1000.0; 
      НП_СкоростьИзменения_W_ИП2К_К1                = 64000.0;
      НП_МинимальноеКоличествоМодулей_ИП2К_К1       = 6;
      НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ = 60.0;
      НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ         = 80.0;
      НП_УставкаПотокаОхлЖидкости_ИП2К_К1           = 25.0;
      НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1      = 30.0;
      НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1     = 70.0;
      НП_НижняяГраницаRиз_ИП2К_К1                   = 1000.0;
      НП_НижняяГраницаRн_ИП2К_К1                    = 0.015;
      НП_ВерхняяГраницаRн_ИП2К_К1                   = 0.035;



      Флаг_АВД1        = ВЫКЛ;
      Флаг_АВД2        = ВЫКЛ;
      Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС = 10; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
      ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА = 1; /* чтобы в отмену не уходить */

      У_VE1            = ЗАКР;
      У_VE2            = ЗАКР;
      У_VE3            = ЗАКР;
      У_VE4            = ЗАКР;
      У_VE5            = ЗАКР;
      У_VE6            = ЗАКР;
      У_VE7            = ЗАКР;
      У_VE8            = ЗАКР;
      У_VE9            = ЗАКР;
      У_VE10           = ЗАКР;
      У_VE11           = ЗАКР;
      У_ОТКР_VM14      = ВЫКЛ;
      У_ЗАКР_VM14      = ВЫКЛ;
      У_ВКЛ_ПТД        = ВЫКЛ;
      У_ВЫК_ПТД        = ВЫКЛ;
      У_ВКЛ_РВ_ПТД     = ВЫКЛ;
      У_ВКЛ_АСС        = ВЫКЛ;
      У_VE12           = ЗАКР;
      У_НВР1           = ВЫКЛ;
      У_НВР2           = ВЫКЛ;
      У_РАЗБЛОКИРОВКА_ВК_НК     = ВЫКЛ; /* блокируем */
      У_ЗАКР_РРГ       = ВЫКЛ;
      У_ОТКР_РРГ       = ВЫКЛ;
      У_ВТ3            = ВЫКЛ;
      У_ВКЛ_48В        = ВЫКЛ;
      У_ТЕСТ_ДК        = ВЫКЛ;
      У_ДВН1           = ВЫКЛ;
      У_ДВН2           = ВЫКЛ;
      FPGA3_N5           = ВЫКЛ;
      FPGA3_N6           = ВЫКЛ;
      FPGA3_N7           = ВЫКЛ;
      У_ЛАЗЕРА_ДП        = ВЫКЛ;
      FPGA3_N9           = ВЫКЛ;
      FPGA3_N10          = ВЫКЛ;
      FPGA3_N11          = ВЫКЛ;
      FPGA3_N12          = ВЫКЛ;
      FPGA3_N13          = ВЫКЛ;
      FPGA3_N14          = ВЫКЛ;
      FPGA3_N15          = ВЫКЛ;
      FPGA3_N16          = ВЫКЛ;
      FPGA3_N17          = ВЫКЛ;
      FPGA3_N18          = ВЫКЛ;
      FPGA3_N19          = ВЫКЛ;
      FPGA3_N20          = ВЫКЛ;
      FPGA3_N21          = ВЫКЛ;
      FPGA3_N22          = ВЫКЛ;
      FPGA3_N23          = ВЫКЛ;
      У_ВКЛ_24В          = ВЫКЛ;

      РежимИсполненияРА = ПО_ТЕРМИНАТОРАМ;

/*===========================================================*/
/*========= ИНИЦИАЛИЗАЦИЯ ТЕХНОЛОГИЧЕСКИХ КОНСТАНТ ==========*/
/*===========================================================*/
/*=======  ТЕХНОЛОГИЧЕСКИх КОНСТАНТ ГАЗОВАКУУМНОЙ СИСТЕМЫ ===*/
/*===========================================================*/
ТК_ГлубокийВакуум_Р2                       = 0.01; /*мм. рт. ст*/
ТК_TоткачкиДопустимое_Т2доP2        = 30*ОДНА_МИНУТА;
ТК_ВремяОткачкиПослеОсушки_Т5  = ОДНА_МИНУТА;
ТК_ВремяОткачкиДопустимое_Т7       = 2*ОДНА_МИНУТА;

ТК_ЧислоЦикловОсушки_Nц                  = 3;
ТК_ВремяПродувки_Т3                        = 10*ОДНА_МИНУТА;
ТК_ТоткачкиАргона_Т4            = 20*ОДНА_МИНУТА;
ТК_ПределДопРнкПослеКонтроляНатек_Р3       = 1.0;

ТК_РЕЗЕРВ_1 = 1.0; /* добавить - временное решение - после доработки ДВ 
                      придется убрать */
/*============ ТЕХНОЛОГИЧЕСКИХ КОНСТАНТ ПРОЦЕССОВ ===========*/
/*    ------- Контроль  натекания  ---------------------     */
ТК_Тотгазовки_КонтрНат        = ОДНА_МИНУТА;
ТК_ПериодКонтроля_КонтрНат             = ДЕСЯТЬ_МИНУТ;
ТК_ДопустимоеНатекание_КнтрНат                       = 1000.0;

/*    ----- Подготовка к плавлению загрузки   -----------*/
ТК_ЗД_Qгаза_ППЗ               = 2000.0;    /* --------- */
ТК_ЗД_Pнк_ППЗ                 = 12.0;
ТК_ЗД_Wипн_К1_ППЗ             = 0.0;
ТК_ЗД_Wипн_К2_ППЗ             = 0.0; /* 23.12.2005 - База для Рег_РОСТА Зюбин */
ТК_ЗД_Тр_ППЗ                  = 1420.0;
ТК_ЗД_Vроста_ППЗ              = 1.0;
ТК_ЗД_Hур_ППЗ                 = 0.0;
ТК_ЗД_Dкр_ППЗ                 = 150.0;
ТК_ЗД_VзР_ППЗ                 = 0.0;
ТК_ЗД_VзУ_ППЗ                 = 0.0;
ТК_ЗД_Xз_ППЗ                  = 0.0;
ТК_ЗД_Wз_ППЗ                  = 0.0;
ТК_ЗД_Wз_УГОЛ_ППЗ             = 0.0;
ТК_ЗД_VтР_ППЗ                 = 0.0;
ТК_ЗД_VтУ_ППЗ                 = 0.0;
ТК_ЗД_Xт_ППЗ                  = 0.0;
ТК_ЗД_Wт_ППЗ                  = 0.0;
ТК_ЗД_Wт_УГОЛ_ППЗ             = 0.0;


/*    ----- Подготовка к стабилизации  расплава   -----------*/
ТК_Qгаза_ПодгСтабРаспл          = 2000.0;
ТК_Pнк_ПодгСтабРаспл            = 12.0;
ТК_Hур_ПодгСтабРаспл                 = 0.0; /*мм*/

/*   -------------- Стабилизация расплава  -----------       */
ТК_Режим_СтабРаспл      = СТАБИЛИЗАЦИЯ_ПО_МОЩНОСТИ;
ТК_Время_СтабРаспл        = ТРИ_ЧАСА;
ТК_Wт_ПодгСтабРаспл           = -10.0;
ТК_Wипн_К1_ПодгСтабРаспл      = 55000.0;  /* Вт/ч */
ТК_Тр_СтабРаспл           = 1450.0;
ТК_ТнОж_СтабРасп          = 1700.0;
ТК_ВремяОсред_Тн_СтабРаспл = N_ИЗМЕРЕНИЙ_ТН_ДЛЯ_РАСЧЕТА_ПОПРАВКИ_СТАБ;

/*   --------- Перемещение Затравки Положение Прогрева ----- */
ТК_РасстояниеДоРасплава_Lпп     =       50.0; /* мм */
ТК_VзДвижения_кРасплаву_Vпп                             =        10.0; /* мм/мин */

/*     -----------------     Затравление     ----------------*/
/*  ТК_Dмин_Затравл                         =              */
/*  ТК_Dмакс_Затравл,                       =              */
/*  ТК_ТcлепогоПлавления_Затравл,                      =              */
/*  ТК_ТожиданияДиаметра_Затравл            =              */
/*  ТК_Wз_Затравл                            =             */
/*  ТК_Vз_Погружения_Затравл                 =             */
/*  ТК_Wт_Затравл                            =             */
/*  ТК_Hур_Затравл                           =             */
/*  ТК_Тн_Затравл                            =             */
/*  ТК_Pнк_Затравл                           =             */
/*  ТК_Qгаза_Затравл                         =             */
/*  ТК_Hпогр_Затравл                         =             */
/*  ТК_VзВытягивания_Затравл                 =             */
/*  ТК_ДиаметрДендрита                       =             */
/*      ---------       Выращивание Шейки         ---------  */
/*  ТК_Ки_Dкр_Шейка                          =             */
/*  ТК_Кд_Dкр_Шейка                          =             */
/*  ТК_Кп_Dкр_Шейка                          =             */
/*  ТК_Кз_Dкр_Шейка                          =             */
/*  ТК_Пауза_Dкр_Шейка                       =             */
/*  ТК_VслепогоВыращивания_Шейка                        =             */
    ТК_ПоправкаТн_Шейка                        =             0.0;
/*  ТК_ТcлепогоВыращивания_Шейка          =             */
    ТК_DкрОжидаемый_Шейка                     =             8.0;
    ТК_Попр_кТн_поDкро_Шейка           =             0.01;
/*  ТК_ЗД_Dкр_Шейка                    =             */
/*  ТК_Ки_Vроста_Шейка                       =             */
/*  ТК_Кд_Vроста_Шейка                       =             */
/*  ТК_Кп_Vроста_Шейка                       =             */
/*  ТК_Кз_Vроста_Шейка                       =             */
/*  ТК_Пауза_Vроста_Шейка                    =             */
/*  ТК_ЗД_Vроста_Шейка                       =             */
/*  ТК_Dкр_НачалаСчетаДлины_Шейка                        =             */
/*  ТК_DкрОтбраковки_Шейка                       =             */
/*  ТК_ДлинаХорошейЧасти_Шейка                     =             */
/*        ---------    Упреждение отрыва  шейки    -------   */
/*  ТК_БезопасныйDкр_Шейка                                =             */
/*  ТК_VзБезопасноеСреднее                     =             */
/*  ТК_VзБезопасное_Шейка                            =             */
/*  ТК_ТбезопаснойСкорости_Шейка   =             */
/*  ТК_ТстабилизацииDкр_Шейка                =             */
/*       ---------    Выращивание  конуса   ---------        */
    ТК_ПоправкаТн_Конус                               =             0.0;
/*  ТК_Vз_Конус                               =             */
/*  ТК_DконусаКонечный_Конус                         =             */
/*  ТК_К1_Конуса                               =             */
/*  ТК_К2_Конуса                               =             */
/*        ---------  Переход  конус-цилиндр   ---------      */
/*  ТК_Ки_Dкр_СтабЦил                    =             */
/*  ТК_Кп_Dкр_СтабЦил                    =             */
/*  ТК_Кд_Dкр_СтабЦил                    =             */
/*  ТК_Кз_Dкр_СтабЦил                    =             */
/*  ТК_Пауза_Dкр_СтабЦил                 =             */
/*  ТК_ВремяПереходаКонусЦилиндр               =             */
/*  ТК_DкрЦилиндра_КонЦил                            =             */
/*       ---------   Стабилизация  цилиндра    ---------     */
/*  ТК_ПоправкаТн_СтабЦил                           =             */
/*  ТК_VзСтабНачальная_СтабЦил                   =             */
/*  ТК_ВремяСтабЦил                            =             */
/*       --------  Контроль окончания  цилиндра    --------  */
 ТК_ПороговаяLкр_Цилиндр                               = 1700.0;
/*  ТК_Загрузки                                =             */
/*  ТК_ПороговаяМрасплава_Цилиндр                  =             */
/*       -------- --------  ЗАТ_РС_ОК    ---------------     */
/*  ТК_Нормирование_Времени                    =             */
/*  ТК_ВремяИзменения_V_Диаметра               =             */
/*  ТК_КоррекцииСкорости                       =             */
/*  ТК_АварийнаяСкоростьПодрезки               =             */
/*  ТК_СлабаяПодрезка                          =             */
/*  ТК_СильнаяПодрезка                         =             */
/*  ТК_ДлинаПереходаЦилиндрКонус               =             */
/*       --------   Процесс отрыв кристалла  ----------      */
/*  ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА               =             */
/*  ТК_УскорениеПриОтрывеКристалла               =             */


/*===========================================================*/
/*========= ИНИЦИАЛИЗАЦИЯ ЗАДАНИЙ ДЛЯ РЕГУЛЯТОРОВ  ==========*/
/*===========================================================*/
    ЗД_Qгаза = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РГ; */
    ЗД_Pнк   = 12.0; /*МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д;  */
    ЗД_Wипн_К1 = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1; */
    ЗД_Wипн_К2 = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2; */
    ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/ = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2; */ /* 23.12.2005 - База для Рег_РОСТА Зюбин */
    ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее = 0.0; /* Зюбин добавить 23.12.2005 */

    ЗД_Тн    = МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН;
    ЗД_Тр    = МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТР;
    ЗД_Vроста= МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РОСТА;
    ЗД_Hур   = 0.0;
    ЗД_Dкр   = МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ДК;

    ЗД_VзР   = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР; */
    ЗД_VзУ   = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ; */
    ЗД_Xз    = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xз;  */
    ЗД_Wз    = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз;  */

    ЗД_VтР   = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР; */
    ЗД_VтУ   = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ; */
    ЗД_Xт    = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xт;  */
    ЗД_Wт    = 0.0; /* МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт;  */

    ЗД_VзР_ПРИВОД = 0.0;
    ЗД_VзУ_ПРИВОД = 0.0;
    ЗД_Wз_ПРИВОД  = 0.0;
    ЗД_VтР_ПРИВОД = 0.0;
    ЗД_VтУ_ПРИВОД = 0.0;
    ЗД_Wт_ПРИВОД   = 0.0;

/*===========================================================*/
/*========= ИНИЦИАЛИЗАЦИЯ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   ==========*/
/*===========================================================*/

    НП_ФлагРасчетаHур_поДУ  = ВКЛ;
    НП_ФлагРасчетаHур_поДВ  = ВКЛ;
    НП_ФлагРасчетаDкр_поТДД = ВКЛ;
    НП_ФлагРасчетаDкр_поДВ  = ВКЛ;

    НП_Тизмерения_Dкр_ДВ =  ОДНА_СЕКУНДА;             /*!!!!!!!!!????*/


/*!!!!!                проинициализировать ВСЕ НП            */
    НП_Lз_ОТ_КВП_ДО_ДП_Lппз                 = 1500.0; /*мм*/
    НП_Lз_ОТ_КВП_ДО_СТЫКА_НК                = 2000.0; /*мм*/
    НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1             = 514.0;  /*мм*/
    НП_Lз_ОТ_КВП_ДО_КНП                     = 2900.0; /*мм*/


/*=========== ВЕСА КРИСТАЛЛА ================================*/
    ТК_МначальнойЗагрузки = 60.09; /* !!!!! уточняется на ПСИ */
    НП_Кдв = 1.0;
    НП_Мзатравкодержателя = 0.0; /* !!!!! уточняется на ПСИ */
    ОП_Мзатравки          = 0.0; /* !!!!! уточняется на ПСИ */
    НП_Мтроса             = 0.0;

    ОП_Lсумм_Цилиндров = 0.0;     /* при выращивании нескольких коротких */
    ОП_Тсумм_Цилиндров = 0; /* кристаллов на одной плавке необходима */
    ОП_Мсумм_Цилиндров = 0.0;     /* коррекция ТП выращивания цилиндра */

    ОП_Lзатравки          = 0.0; /* !!!!! уточняется на ПСИ */


    ФП_ГлубинаРасплава    = 10.0;
    ОП_Dзеркала_расплава  = 436.6;
    ФП_Lмонокристалла = 0.1;

    НП_Lт_ОТ_КНП_ДО_КВП                    = 425.0;
    НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР       = 400.0; /* ??? */

    НП_ОбъемВакПолости_V                   = 1300.0;
    НП_ДавлениеВключенияДВН_P1                 = 3.0; /*мм. рт. ст*/
    НП_КонтрольноеВремяДостиженияP1_Т1         = ДЕСЯТЬ_МИНУТ;
    НП_Pатмосф                                 = 700.00;

    НП_ВремяПереходногоПроцессаQгаза       = ОДНА_МИНУТА;
    НП_ПогрешностьQгаза                    = 75.0;

    НП_КоэфА_Pнк                           = 0.075;
    НП_КоэфВ_Pнк                           = 0.01;
    НП_Pпор                                = 0.05;  /*  */
    НП_КОЭФ_НА_ОТКР                        = 3000; /* 5 минут */
    НП_КОЭФ_НА_ЗАКР                        = 3000; /* 5 минут */
    НП_ВремяПереходногоПроцессаPнк         = 7*ОДНА_МИНУТА;

    НП_ВремяПереходногоПроцессаWптд        = ДВЕ_МИНУТЫ;
    НП_Кп_Wптд                             = -0.017;
    НП_ТипИПН                              = ИПН_ПТД;
    НП_Пауза_Wптд                          = ОДНА_СЕКУНДА;
    НП_ПогрешностьWипн_К1                  = 4000.0; /* 4КВт */
    НП_Iптд_МАХ                            = 2400.0; /* 3000 А */

    НП_Wипн_К1_МАХ                         = 180000.0; /* 180 КВт */
    НП_ДелтаW_Разогрева                    = 10.0;     /* 10 Вт */
    НП_ДелтаВремениРазогрева               = 3;        /* 0,3 сек  */
    НП_Тн_MAX                              = 2200.0;   /* 1700 град.С добав-но 26.01.2004 */
    НП_Кп_Тн                               = 50.0;
    НП_Кд_Тн                               = 0.0;
    НП_Ки_Тн                               = 0.0;
    НП_Кз_Тн                               = 0.0;
    НП_ВремяПереходногоПроцессаТн          = 7*ОДНА_МИНУТА;
    НП_ПогрешностьТн                       = 3.0;
    НП_Пауза_Тн                            = ДЕСЯТЬ_СЕКУНД;

    НП_Кп_Тр                               = 1.0;
    НП_Кд_Тр                               = 0.0;
    НП_Ки_Тр                               = 0.0;
    НП_Кз_Тр                               = 0.0;
    НП_Пауза_Тр                            = ДЕСЯТЬ_МИНУТ;
    НП_Тр_MAX                              = 1500.0;
    НП_ВремяПереходногоПроцессаТр          = 3*ДЕСЯТЬ_МИНУТ;
    НП_ПогрешностьТр                       = 5.0;
    НП_ДелтаТр_MAX                         = 2.0; /* если Кз=0, то dTр ~1500.0 */

    НП_MIN_ДУ_Hур                          = 0.5; /* это прямо мм */
    НП_MAX_ДУ_Hур                          = 3.0; /* это прямо мм */
    НП_MIN_ДУДД_Hур                        = 0.5; /* это прямо мм */
    НП_MAX_ДУДД_Hур                        = 3.0; /* это прямо мм */
    НП_Кп_ДУ_Hур                           = -0.2;
    НП_Кп_ДУДД_Hур                         = -0.04;
    НП_ПредупредительныйHур                = 1.5;
    НП_АварийнаяОшибкаHур                  = 3.1;
    НП_ПоправкаVтР_Нур                     = 0.0;    /* Поправка оператора */

    НП_Кп_Dкр                              = 0.1;
    НП_Кд_Dкр                              = 0.0;
    НП_Ки_Dкр                              = 0.0;
    НП_Кз_Dкр                              = 0.0;
    НП_Dкр_MAX                             = 250.0;
    НП_ДелтаVзРС_МАХ                       = 2.0;
    НП_ВремяПереходногоПроцессаDкр         = 30*ОДНА_МИНУТА;
    НП_ПогрешностьDкр                      = 1.5;
    НП_Пауза_Dкр                           = ДЕСЯТЬ_СЕКУНД;

    НП_Кп_Vроста                           = 0.0;
    НП_Кд_Vроста                           = 0.0;
    НП_Ки_Vроста                           = 0.1;
    НП_Кз_Vроста                           = 0.0;
    НП_Пауза_РЕГ_РОСТА                     = ДЕСЯТЬ_МИНУТ;
    НП_Пауза_Vроста                        = ОДНА_СЕКУНДА;
    НП_ВремяОсредненияVзVроста             = ДЕСЯТЬ_МИНУТ/ОДНА_СЕКУНДА; /* Пауза/Пауза !!! */
    НП_VзР_MAX                             = 5.0;
    НП_ДелтаТн_MAX                         = 0.1;
    НП_ВремяПереходногоПроцессаVроста      = ОДИН_ЧАС;
    НП_ПогрешностьVроста                   = 0.1;



/*      НП_CTGPHI_BIGZERO_KY                     = ;           */
/*      НП_XSIZE_BIGZERO_TG                    = ;           */
/*      НП_CTGPHI_SMALLZERO_KY                     = ;           */
/*      НП_XSIZE_SMALLZERO_TG                    = ;           */
НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР = 0.0;
НП_ПОПРАВКА_К_ТДД_ШЕЙКА = 0.0;

НП_Тсм_ДТН = 0.0;
НП_Тсм_ДТР = 0.0;
НП_ВремяОсреднения_ДТН = 1;
НП_ВремяОсреднения_ДТР = 1;
Tdtn_Init();
Tdtr_Init();


/*      НП_Номинальный_Коэф_V_ЗР               = 1.395708E-4;
      НП_Номинальный_Коэф_X_ЗР               = 1.0;
      НП_Номинальный_Коэф_V_ЗУ               = 1.216672e-2;
      НП_Номинальный_Коэф_X_ЗУ               = 3.14453125e-2;
      НП_Коэф_V_ЗР                           = 1.395708e-4;
      НП_Коэф_X_ЗР                           = 1.0;
      НП_Коэф_V_ЗУ                           = 1.216672e-2;
      НП_Коэф_X_ЗУ                           = 3.14453125e-2;
*/

      НП_Номинальный_Коэф_V_ЗР               = 0.0001395708;
      НП_Номинальный_Коэф_X_ЗР               = 1.0;
      НП_Номинальный_Коэф_V_ЗУ               = 0.01216672;
      НП_Номинальный_Коэф_X_ЗУ               = 0.0314453125;
      НП_Коэф_V_ЗР                           = 0.0001395708;
      НП_Коэф_X_ЗР                           = 1.0;
      НП_Коэф_V_ЗУ                           = 0.01216672;
      НП_Коэф_X_ЗУ                           = 0.0314453125;

/*      НП_Коэф_V_ЗВ                           = ;           */
/*      НП_Коэф_X_ЗВ                           = ;           */
/*      НП_Коэф_V_ТР                           = ;           */
/*      НП_Коэф_X_ТР                           = ;           */
/*      НП_Коэф_V_ТУ                           = ;           */
/*      НП_Коэф_X_ТУ                           = ;           */
/*      НП_Коэф_V_ТВ                           = ;           */
/*      НП_Коэф_X_ТВ                           = ;           */
/*      НП_РАБ_УСК_ЗР                          = ;           */
/*      НП_КОЭФ_А_ЗР                           = ;           */
/*      НП_АВР_ТОР_ЗР                          = ;           */

/*      НП_РАБ_УСК_ЗУ                          = ;           */
/*      НП_КОЭФ_А_ЗУ                           = ;           */
/*      НП_АВР_ТОР_ЗУ                          = ;           */

/*      НП_РАБ_УСК_ЗВ                          = ;           */
/*      НП_КОЭФ_А_ЗВ                           = ;           */
/*      НП_АВР_ТОР_ЗВ                          = ;           */

/*      НП_РАБ_УСК_ТР                          = ;           */
/*      НП_КОЭФ_А_ТР                           = ;           */
/*      НП_АВР_ТОР_ТР                          = ;           */

/*      НП_РАБ_УСК_ТУ                          = ;           */
/*      НП_КОЭФ_А_ТУ                           = ;           */
/*      НП_АВР_ТОР_ТУ                          = ;           */

/*      НП_РАБ_УСК_ТВ                          = ;           */
/*      НП_КОЭФ_А_ТВ                           = ;           */
/*      НП_АВР_ТОР_ТВ                          = ;           */




/*!!!!! проинициализировать ВСЕ НП */
/*===========================================================*/

    СТАРТ ПРОЦ УстановкаСвязиС_ПИВ_ПоВключениюПитания;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаПодключенияПИВ{
    ЕСЛИ (ПРОЦ УстановкаСвязиС_ПИВ_ПоВключениюПитания В СОСТ СТОП) {

/*         СТАРТ ПРОЦ ВключениеПитания24_48В; !!!!!!! */
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПроверкаВключения24_48В{
/*    ЕСЛИ (ПРОЦ ВключениеПитания24_48В В СОСТ СТОП) !!!!!!!!! */
        В СЛЕДУЮЩЕЕ;
/*      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ; */
 }
 СОСТ ЗапросИнициализации {     /* состояния процесса инициализация */
    ЕСЛИ (SendMsgPIVCode(ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ПК)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
 СОСТ НачалоРаботы{
    СТАРТ ПРОЦ СНЯТИЕ_ДАННЫХ_С_АЦП;
    СТАРТ ПРОЦ ЗАПИСЬ_ДАННЫХ_В_ЦАП;

    СТАРТ ПРОЦ ПарированиеПомех_VE1; /* Парирование помех для Гордеева */
    СТАРТ ПРОЦ ПарированиеПомех_VE2;

    СТАРТ ПРОЦ РЕГУЛЯТОР_ТРАФИКА;

/*    СТАРТ ПРОЦ КонтрольПитания24_48В; !!!!!!!!!! */
    СТАРТ ПРОЦ КонтрольПитанияСистемыИБП;
    СТАРТ ПРОЦ Контроль220наВходеИБП;
    СТАРТ ПРОЦ КонтрольРесурсовИБП;
    СТАРТ ПРОЦ Блокировка_ВК_НК;
    СТАРТ ПРОЦ КонтрольУсловийРаботыИПН;
    СТАРТ ПРОЦ КонтрольОтменыПоКнопке;
    СТАРТ ПРОЦ ОпределениеКоординатыЗатравки;
    СТАРТ ПРОЦ ОпределениеКоординатыТигля;
    СТАРТ ПРОЦ ИзмерениеНатекания;
    СТАРТ ПРОЦ КонтрольИзменения_ОП_Lсумм_Цилиндров; /*добавить*/
    СТАРТ ПРОЦ КонтрольИзменения_ОП_Мсумм_Цилиндров;
    СТАРТ ПРОЦ КонтрольИзменения_ОП_Тсумм_Цилиндров;


    СТАРТ ПРОЦ КонтрольМассИ_Длин;

    СТАРТ ПРОЦ РасчетФП_Dкр;
    СТАРТ ПРОЦ РасчетСкоростиРостаДиаметра; /* добавитьдобавлено  */
    СТАРТ ПРОЦ РасчетФП_Dкр_ДВ;
    СТАРТ ПРОЦ РасчетФП_Hур_ДВ;
    СТАРТ ПРОЦ РасчетФП_Hур;

    СТАРТ ПРОЦ ЗапускПроцессовКонтроляСтыковок;

    СТАРТ ПРОЦ КонтрольОбновленияСостоянияИсполнительныхУстройств;
    СТАРТ ПРОЦ ЗапускПроцессовКонтроляИзмененияЗаданий;

    СТАРТ ПРОЦ ЧтениеФактПараметров_с_Датчиков_и_Приводов;
    СТАРТ ПРОЦ РасчетРасстоянияЗатравка_Расплав;
    СТАРТ ПРОЦ ЗапускПроцессовКонтроляИзмененияФактПараметров;  /* разбивка на более мелкие процессы и запуск группы этих процессов */

    СТАРТ ПРОЦ КонтрольСостоянияРегуляторов; /* запуск кучи процессов */
    СТАРТ ПРОЦ МониторингСтатусаКаналов;     /* запуск кучи процессов */
    СТАРТ ПРОЦ МониторингСистемныхОшибок;
    СТАРТ ПРОЦ ЗапускПроцессовВосстановленияСвязи;
    СТАРТ ПРОЦ ЗапускОбработкиКомандОтУстройств;   /* запуск кучи процессов */

    В СЛЕДУЮЩЕЕ;
 }

 СОСТ ЗапускРР {
    СТАРТ ПРОЦ РежимНачальнаяИнициализация;
/*    СТАРТ ПРОЦ РежимРР;*/
    СТОП;
 }
}


/*================================================*/
/*=      ТЕСТ ИСПРАВНОСТИ ДК                    ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ ТестДатчикаКасания{
ИЗ ПРОЦ Инициализация ЗД_Xз,
                      ФП_Xз,
                      У_ТЕСТ_ДК,
                      К_ДАТЧИКА_КАСАНИЯ;
 ЛОГ ФлагВозврата_вКВП ЛОКАЛ;
 ЛОГ ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
      ЕСЛИ (ФП_Xз >= -360.0) {       /* добавлено Зюбин */
          ФлагВозврата_вКВП = ВКЛ;
          ЗД_Xз = -400.0;  
          СТАРТ ПРОЦ ЗАТ_УК;
          В СЛЕДУЮЩЕЕ;
      }
      ИНАЧЕ {
          ФлагВозврата_вКВП = ВЫКЛ;
          В СОСТ ЗапускТеста;
      }
 }
 СОСТ КонтрольВыезда{
    ЕСЛИ (ПРОЦ  ЗАТ_УК В СОСТ ПАССИВНОЕ) { 
         ЕСЛИ (ПРОЦ ЗАТ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускТеста{
    СТОП ПРОЦ КонтрольСостоянияДатчикаКасания; /* во время теста убираем сообщения добавитьдобавлено */
    У_ТЕСТ_ДК = ВКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза_для_ДК{
    ТАЙМАУТ ДВЕ_СЕКУНДЫ В СОСТ ТестДК;
 }
 СОСТ ТестДК{
    ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) {
         ФлагОшибки = ВЫКЛ;
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДК_В_НОРМЕ))  В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ФлагОшибки = ВКЛ;
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОШИБКА_ДК))  В СЛЕДУЮЩЕЕ;
    }
    У_ТЕСТ_ДК = ВЫКЛ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
 СОСТ ЗаездНаКВП{
     ЕСЛИ (ФлагВозврата_вКВП == ВКЛ) {
        СТАРТ ПРОЦ ЗАТ_КВП;
        В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ В СОСТ Конец;
 }
 СОСТ КонтрольВозвратавКВП{
    ЕСЛИ (ПРОЦ ЗАТ_КВП В СОСТ ПАССИВНОЕ) { 
         ЕСЛИ (ПРОЦ ЗАТ_КВП В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ Конец {
     СТАРТ ПРОЦ КонтрольСостоянияДатчикаКасания; /* а после теста снова запускаем */
     ЕСЛИ (ФлагОшибки == ВЫКЛ) СТОП;
     ИНАЧЕ ОШИБКА;
 }
}

/*================================================*/
/*=          СНЯТИЕ_ДАННЫХ_С_АЦП                ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ СНЯТИЕ_ДАННЫХ_С_АЦП{
ИЗ ПРОЦ Инициализация
                      ТекущийЭтап,
                      НП_ТипИПН, ФП_Iипн_К1, ФП_Uипн_К1,
                      ФП_Wипн_К1, ФП_Rипн_К1,
                      ФП_Qгаза, ФП_Pнк,ФП_Pвк,
                      ФП_Pавд1, ФП_Pавд2, ФП_Ммонокристалла,
                      ФП_Мкремния_в_тигле,
                      ФП_Твк1,ФП_Твк2,
                      ФП_Твк3, ФП_Твк4, ФП_Твк5, ФП_Твк6, ФП_Твк7,
                      ФП_Твк8,ФП_Uдк, У_ВТ3, К_ЗАКР_ЗАТВОР_В,

                      НП_Мзатравкодержателя, ОП_Мзатравки, НП_Мтроса,
                      ФП_Xз, НП_Lз_ОТ_КВП_ДО_КНП,
                      НП_Кдв, /* временный коэффициент коррекции показаний ДВ, добавить Зюбин 06.01.18 */    
                      ТК_МначальнойЗагрузки;
 СОСТ Начало{
      ADC();
      ЕСЛИ (НП_ТипИПН == ИПН_ПТД) {
          ФП_Iипн_К1  = GetADC(НОМЕР_КАНАЛА_АЦП_ФП_Iптд);
          ФП_Uипн_К1  = GetADC(НОМЕР_КАНАЛА_АЦП_ФП_Uптд);
          ФП_Wипн_К1  = ФП_Uипн_К1 * ФП_Iипн_К1;
          ЕСЛИ (ФП_Iипн_К1 > 1.0)
             ФП_Rипн_К1 = (ФП_Uипн_К1/ФП_Iипн_К1);
          ИНАЧЕ
             ФП_Rипн_К1 = 0.0;
      }
      ФП_Qгаза = GetADC(НОМЕР_КАНАЛА_АЦП_ФП_Qгаза);

      ЕСЛИ ((ТекущийЭтап <= ЭТАП_РАБОЧЕЕ_ВАКУУМИРОВАНИЕ) ||
            (ТекущийЭтап >= ЭТАП_ТП_ОХЛ_КРИСТАЛЛА)) {
         У_ВТ3 = ВКЛ;   /* управл. пит. ВТ3 (НК - 0,001-1мм.рт.ст) */
      } ИНАЧЕ {
         У_ВТ3 = ВЫКЛ;  /* управл. пит. ВТ3 (НК - 0,001-1мм.рт.ст) */
      }

      ФП_Pнк = GetADC(НОМЕР_КАНАЛА_АЦП_НК_0_45); /* ПИ1(МС2030) 5-45мм.рт.ст */
      ФП_Pвк = GetADC(НОМЕР_КАНАЛА_АЦП_Рвк);
      ЕСЛИ (!К_ЗАКР_ЗАТВОР_В) {  /* новая логика по Ю.В. Елисееву 26.03.2004  */
         ЕСЛИ (ФП_Pнк > 43.0) {
              ФП_Pнк = ФП_Pвк;
         } ИНАЧЕ {
              ЕСЛИ (ФП_Pнк < 1.0) {
                  ФП_Pнк = GetADC(НОМЕР_КАНАЛА_АЦП_ВК_0_1);  /* ВТ3 (НК - 0,001-1мм.рт.ст) */
      	      }
              ФП_Pвк = ФП_Pнк;  /* добавить */
         }
      } ИНАЧЕ {
         ЕСЛИ (ФП_Pвк < 1.0) {
              ФП_Pвк = GetADC(НОМЕР_КАНАЛА_АЦП_ВК_0_1);  /* ВТ3 (НК - 0,001-1мм.рт.ст) */
         }
      }

      ФП_Pавд1 = GetADC(НОМЕР_КАНАЛА_АЦП_ФП_Равд1);
      ФП_Pавд2 = GetADC(НОМЕР_КАНАЛА_АЦП_ФП_Равд2);

      ФП_Ммонокристалла = НП_Кдв*GetADC(НОМЕР_КАНАЛА_АЦП_ПоказанияДатчикаВеса) -
                 (НП_Мзатравкодержателя +
                  ОП_Мзатравки -                         /*добавить */
                  НП_Мтроса*ФП_Xз/НП_Lз_ОТ_КВП_ДО_КНП);
      ФП_Мкремния_в_тигле = ТК_МначальнойЗагрузки - ФП_Ммонокристалла;
      ФП_Твк1  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк1);
      ФП_Твк2  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк2);
      ФП_Твк3  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк3);
      ФП_Твк4  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк4);
      ФП_Твк5  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк5);
      ФП_Твк6  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк6);
      ФП_Твк7  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк7);
      ФП_Твк8  = GetADC(НОМЕР_КАНАЛА_АЦП_Твк8);
      ФП_Uдк  = GetADC(НОМЕР_КАНАЛА_АЦП_Uдк);

/*-------------------------------------*/
      ЗАЦИКЛИТЬ;
 }
}   /* Конец процесса СНЯТИЕ_ДАННЫХ_С_АЦП  */

/*================================================*/
/*=          ПАРИРОВАНИЕ ПОМЕХ_VE1              ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ ПарированиеПомех_VE1{ /* добавлено */
ИЗ ПРОЦ Инициализация	К_VE1_ИСХ,
			К_VE1;

 СОСТ Начало {
	ЕСЛИ (К_VE1 != К_VE1_ИСХ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Проверка2 {
	ЕСЛИ (К_VE1 != К_VE1_ИСХ) В СЛЕДУЮЩЕЕ;
        ИНАЧЕ В СОСТ Начало;
 }
 СОСТ Проверка3 {
	ЕСЛИ (К_VE1 != К_VE1_ИСХ) К_VE1 = К_VE1_ИСХ;
	В СОСТ Начало;
 }
}
/*================================================*/
/*=          ПАРИРОВАНИЕ ПОМЕХ_VE2              ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ ПарированиеПомех_VE2{ /* добавлено */
ИЗ ПРОЦ Инициализация	К_VE2_ИСХ,
			К_VE2;

 СОСТ Начало {
	ЕСЛИ (К_VE2 != К_VE2_ИСХ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Проверка2 {
	ЕСЛИ (К_VE2 != К_VE2_ИСХ) В СЛЕДУЮЩЕЕ;
        ИНАЧЕ В СОСТ Начало;
 }
 СОСТ Проверка3 {
	ЕСЛИ (К_VE2 != К_VE2_ИСХ) К_VE2 = К_VE2_ИСХ;
	В СОСТ Начало;
 }
}

/*========================================================*/
/*                                                        */
/*==            ЧТЕНИЕ ФАКТИЧЕСКИХ ПАРАМЕТРОВ           ==*/
/*               643.АЭ1610.10000 Д2                      */
/*========================================================*/
ПРОЦ ЧтениеФактПараметров_с_Датчиков_и_Приводов{
ИЗ ПРОЦ Инициализация ФП_Hур_ДУ,
                      ФП_STAT,
                      ФП_PEAKW,
                      ФП_PEAKC,
                      ФП_RANGE,
                      ФП_DISP,
                      ФП_MEAN,
                      ФП_LASER,
                      ФП_Тдтр,
                      ФП_Тр,
                      ФП_PSWдтр,
                      НП_Тсм_ДТР,
                      НП_ВремяОсреднения_ДТР,
                      ФП_Тдтн,
                      ФП_Тн,
                      ФП_PSWдтн,
                      НП_Тсм_ДТН,
                      НП_ВремяОсреднения_ДТН,
                      ФП_I_ЗР,
                      ФП_I_ЗУ,
                      ФП_I_ЗВ,
                      ФП_I_ТР,
                      ФП_I_ТУ,
                      ФП_I_ТВ,
                      ФП_VзР,
                      ФП_VзУ,
                      ФП_Vз,
                      ФП_Xз,
                      ФП_Wз,
                      ФП_Wз_УГОЛ,
                      ФП_VтР,
                      ФП_VтУ,
                      ФП_Vт,
                      ФП_Xт,
                      ФП_Wт,
                      ФП_Wт_УГОЛ,
                      ЗД_Vз,
                      ЗД_VзР,
                      ЗД_VзУ,
                      ЗД_Vт,
                      ЗД_VтР,
                      ЗД_VтУ,
                      ФлагРегулятора_V_ЗР,
                      ФлагРегулятора_X_ЗР,
                      ФлагРегулятора_V_ТР,
                      ФлагРегулятора_X_ТР,

                      ФП_Dкр_ТДД,
                      ФП_DeltaX,
                      ФП_DeltaY,
                      НП_ТипИПН,
/* ИП_ЛИТ */          
                      Флаг_НаличияМодуля0_ИП2К_К1,
                      Флаг_НаличияМодуля1_ИП2К_К1,
                      Флаг_НаличияМодуля2_ИП2К_К1,
                      Флаг_НаличияМодуля3_ИП2К_К1,
                      Флаг_НаличияМодуля4_ИП2К_К1,
                      Флаг_НаличияМодуля5_ИП2К_К1,
                      ФП_ПотокОхлаждВоды_ИП2К_К1,
                      ФП_ТемператураОхлНаВходе_ИП2К_К1,
                      ФП_ТемператураОхлНаВыходе_ИП2К_К1,
                      ФП_Rиз_ИП2К_К1,
                      ФП_ТокМодуля0_ИП2К_К1,
                      ФП_ТокМодуля1_ИП2К_К1,
                      ФП_ТокМодуля2_ИП2К_К1,
                      ФП_ТокМодуля3_ИП2К_К1,
                      ФП_ТокМодуля4_ИП2К_К1,
                      ФП_ТокМодуля5_ИП2К_К1,
                      ФП_ТемпМодуля0_ИП2К_К1,
                      ФП_ТемпМодуля1_ИП2К_К1,
                      ФП_ТемпМодуля2_ИП2К_К1,
                      ФП_ТемпМодуля3_ИП2К_К1,
                      ФП_ТемпМодуля4_ИП2К_К1,
                      ФП_ТемпМодуля5_ИП2К_К1,
                      ФП_СостояниеМодуля_ИП2К_К1,
                      ФП_U380_ИП2К_К1,
                      ФП_Wипн_К1,
                      ФП_Uипн_К1,
                      ФП_Iипн_К1,
                      ФП_Rипн_К1;


 СОСТ Начало {
   ФП_Hур_ДУ = GetFP_H_DU();     /* чтение ФП уровня расплава      */
/*
   ЕСЛИ (fabs(ФП_Hур_ДУ) > 20.0) ФлагHур_ДУ == ВЫКЛ; ВОПРОС!!!!
*/

   ФП_STAT  = GetFP_STAT_DU();
   ФП_PEAKW = GetFP_PEAKW_DU();
   ФП_PEAKC = GetFP_PEAKC_DU();
   ФП_RANGE = GetFP_RANGE_DU();
   ФП_DISP  = GetFP_DISP_DU();
   ФП_MEAN  = GetFP_MEAN_DU();
   ФП_LASER  = GetFP_LASER_DU();


   ФП_Тдтр  = GetFP_T_DTR();    /* чтение ФП температуры расплава */
   ФП_Тр = AverageTdtr(НП_ВремяОсреднения_ДТР, ФП_Тдтр + НП_Тсм_ДТР);
   ФП_PSWдтр  = GetFP_PSW_DTR();    /* чтение ФП слова-состояния */


   ФП_Тдтн  = GetFP_T_DTN();    /* чтение ФП температуры нагревателя */
   ФП_Тн = AverageTdtn(НП_ВремяОсреднения_ДТН, ФП_Тдтн + НП_Тсм_ДТН);
   ФП_PSWдтн  = GetFP_PSW_DTN();    /* чтение ФП слова-состояния */



   ФП_I_ЗР = GetFP_IZR();    /* чтение ФП тока двигателя */
   ФП_I_ЗУ = GetFP_IZU();
   ФП_I_ЗВ = GetFP_IZV();
   ФП_I_ТР = GetFP_ITR();
   ФП_I_ТУ = GetFP_ITU();
   ФП_I_ТВ = GetFP_ITV();

   ФП_VзР = GetFP_VZR();       /* затравка  */
   ФП_VзУ = GetFP_VZU();
   ЕСЛИ (ФлагРегулятора_V_ЗР == ВКЛ) {
     ФП_Vз = ФП_VзР;
     ЗД_Vз = ЗД_VзР;
   } ИНАЧЕ {
     ФП_Vз = ФП_VзУ;
     ЗД_Vз = ЗД_VзУ;
   }
   ФП_Xз = GetFP_XZU();

   ФП_Wз = GetFP_VZV();
   ФП_Wз_УГОЛ = GetFP_XZV();

   ФП_VтР = GetFP_VTR();       /* тигель  */
   ФП_VтУ = GetFP_VTU();
   ЕСЛИ (ФлагРегулятора_V_ТР == ВКЛ) {
      ФП_Vт = ФП_VтР;
      ЗД_Vт = ЗД_VтР;
   } ИНАЧЕ {
      ФП_Vт = ФП_VтУ;
      ЗД_Vт = ЗД_VтУ;
   }

   ФП_Xт  = GetFP_XTU();

   ФП_Wт = GetFP_VTV();
   ФП_Wт_УГОЛ = GetFP_XTV();


   ФП_Dкр_ТДД = GetFP_D_TDD();
   ФП_DeltaX = GetFP_DeltaX_TDD();
   ФП_DeltaY = GetFP_DeltaY_TDD();

/* ИП_ЛИТ */

   ЕСЛИ (НП_ТипИПН == ИПН_ИП2К) {
       ФП_ПотокОхлаждВоды_ИП2К_К1        = GetFP_StrCoolWater_IP2K_K1();
       ФП_ТемператураОхлНаВходе_ИП2К_К1  = GetFP_TempCoolWaterIn_IP2K_K1();
       ФП_ТемператураОхлНаВыходе_ИП2К_К1 = GetFP_TempCoolWaterOut_IP2K_K1();
       ФП_Rиз_ИП2К_К1 = GetFP_Risol_IP2K_K1();

       ФП_ТокМодуля0_ИП2К_К1  = GetFP_I_0_IP2K_K1(); /*добавлено*/
       ФП_ТокМодуля1_ИП2К_К1  = GetFP_I_1_IP2K_K1();
       ФП_ТокМодуля2_ИП2К_К1  = GetFP_I_2_IP2K_K1();
       ФП_ТокМодуля3_ИП2К_К1  = GetFP_I_3_IP2K_K1();
       ФП_ТокМодуля4_ИП2К_К1  = GetFP_I_4_IP2K_K1();
       ФП_ТокМодуля5_ИП2К_К1  = GetFP_I_5_IP2K_K1();

       ФП_ТемпМодуля0_ИП2К_К1 = GetFP_Temp0_IP2K_K1();
       ФП_ТемпМодуля1_ИП2К_К1 = GetFP_Temp1_IP2K_K1();
       ФП_ТемпМодуля2_ИП2К_К1 = GetFP_Temp2_IP2K_K1();
       ФП_ТемпМодуля3_ИП2К_К1 = GetFP_Temp3_IP2K_K1();
       ФП_ТемпМодуля4_ИП2К_К1 = GetFP_Temp4_IP2K_K1();
       ФП_ТемпМодуля5_ИП2К_К1 = GetFP_Temp5_IP2K_K1();

/*       ФП_СостояниеМодуля_ИП2К_К1 =  GetFP_Module_IP2K_K1();  /*добавлено*/
/*       ЕСЛИ (ФП_СостояниеМодуля_ИП2К_К1 & 1) /*  */
/*            Флаг_НаличияМодуля0_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля0_ИП2К_К1 = ВЫКЛ; 
/*       ЕСЛИ (ФП_СостояниеМодуля_ИП2К_К1 & 2) /*  */
/*            Флаг_НаличияМодуля1_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля1_ИП2К_К1 = ВЫКЛ; 
/*       ЕСЛИ ( ФП_СостояниеМодуля_ИП2К_К1 & 4) /*  */
/*            Флаг_НаличияМодуля2_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля2_ИП2К_К1 = ВЫКЛ; 
/*       ЕСЛИ ( ФП_СостояниеМодуля_ИП2К_К1 & 8) /*  */
/*            Флаг_НаличияМодуля3_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля3_ИП2К_К1 = ВЫКЛ; 
/*       ЕСЛИ ( ФП_СостояниеМодуля_ИП2К_К1 & 16) /*  */
/*            Флаг_НаличияМодуля4_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля4_ИП2К_К1 = ВЫКЛ; 
/*       ЕСЛИ ( ФП_СостояниеМодуля_ИП2К_К1 & 32) /*  */
/*            Флаг_НаличияМодуля5_ИП2К_К1 = ВКЛ; 
/*       ИНАЧЕ Флаг_НаличияМодуля5_ИП2К_К1 = ВЫКЛ; 
*/
       ФП_U380_ИП2К_К1 =  GetFP_U_380_IP2K_K1();
       ФП_Wипн_К1      =  GetFP_W_IP2K_K1();
       ФП_Iипн_К1      =  GetFP_I_IP2K_K1();
       ФП_Rипн_К1      =  GetFP_R_IP2K_K1()/1000.0;
       ФП_Uипн_К1      =  GetFP_U_IP2K_K1();
   }
   В СОСТ Начало;
 }
}

/*================================================*/
/*=         РЕГУЛЯТОР ТРАФИКА                    ==*/
/*=         ЕСЛИ КАНАЛЫ ЗАБИТЫ, ТО              ==*/
/*=         УВЕЛИЧИВАЕТСЯ ВРЕМЯ МЕЖДУ           ==*/
/*=         КОНТРОЛЕМ И ВЫДАЧЕЙ В ПИВ           ==*/
/*=         ФАКТИЧЕСКИХ ПАРАМЕТРОВ              ==*/
/*=         643.АЭ1610.10000  Д2.0              ==*/
/*================================================*/
ПРОЦ РЕГУЛЯТОР_ТРАФИКА{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;
 СОСТ Начало{
    ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА = GetOutMsgNumber_PIV()/5 + 1; /* чтобы в отмену не уходить */
    ЗАЦИКЛИТЬ;
 }
}

/* ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА ...
*/

/*================================================*/
/*=         ВЫКЛЮЧЕНИЕ БЛОКИРОВКИ ВК/НК         ==*/
/*=         ОПЕРАТОРОМ В РР НА 1 МИНУТУ         ==*/
/*=         643.АЭ1610.10000  Д2.0              ==*/
/*================================================*/
ПРОЦ ВЫК_БЛОКИРОВКУ_ВК_НК{
 ИЗ ПРОЦ Инициализация
                        У_РАЗБЛОКИРОВКА_ВК_НК;
 СОСТ Начало{
    СТОП ПРОЦ Блокировка_ВК_НК; /* добавить */
    У_РАЗБЛОКИРОВКА_ВК_НК = ВКЛ;
    ТАЙМАУТ ОДНА_МИНУТА В СЛЕДУЮЩЕЕ;
 }
 СОСТ ВключениеБлокировки{
    У_РАЗБЛОКИРОВКА_ВК_НК = ВЫКЛ;
    СТАРТ ПРОЦ Блокировка_ВК_НК; /* добавить */
    СТОП;
 }
}

/*================================================*/
/*=         ВКЛЮЧЕНИЕ ПИТАНИЯ 24/48В            ==*/
/*=         643.АЭ1610.10000  Д2.0              ==*/
/*================================================*/
ПРОЦ ВключениеПитания24_48В{
 ИЗ ПРОЦ Инициализация
                   К_ПРОГР_ВКЛ_24В_48В,
                   У_ВКЛ_24В,
                   У_ВКЛ_48В;

 СОСТ Начало{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВКЛ) {
         У_ВКЛ_24В = ВКЛ;
         В СОСТ ТаймАутНаВключение48В;
    } ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОператору{
     ЕСЛИ (SendMsgPIVCode(ОЖИДАНИЕ_ПРОГРАММНОГО_24_48В))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
 СОСТ ТаймаутМеждуСообщениями{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВКЛ) В СОСТ Начало;
     ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ Начало;
 }
 СОСТ ТаймАутНаВключение48В{
    ТАЙМАУТ ОДНА_СЕКУНДА В СЛЕДУЮЩЕЕ;
 }
 СОСТ Включение48В{
    У_ВКЛ_48В = ВКЛ;
    СТОП;
 }
}

/*================================================*/
/*=          КОНТРОЛЬ ПИТАНИЯ 24/48В            ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ КонтрольПитания24_48В{
 ИЗ ПРОЦ Инициализация
                   К_ПРОГР_ВКЛ_24В_48В;

 СОСТ Начало{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОператору{
    ЕСЛИ (SendMsgPIVCode(ОЖИДАНИЕ_ПРОГРАММНОГО_24_48В))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТаймаутМеждуСообщениями{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВКЛ) В СОСТ Начало;
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ Начало;
 }
}

/*================================================*/
/*=          ВЫКЛЮЧЕНИЕ ПИТАНИЯ 24/48В          ==*/
/*=          643.АЭ1610.10000 Д2.0              ==*/
/*================================================*/
ПРОЦ ВыключениеПитания24_48В{
 ИЗ ПРОЦ Инициализация
                   К_ПРОГР_ВКЛ_24В_48В,
                   У_ВКЛ_24В,
                   У_ВКЛ_48В;

 СОСТ Начало{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВКЛ) {
         У_ВКЛ_48В = ВЫКЛ;
         В СОСТ ТаймАутНаВыключение24В;
    } ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОператору{
     ЕСЛИ (SendMsgPIVCode(ОЖИДАНИЕ_ПРОГРАММНОГО_24_48В))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТаймаутМеждуСообщениями{
    ЕСЛИ (К_ПРОГР_ВКЛ_24В_48В == ВКЛ) В СОСТ Начало;
     ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ Начало;
 }
 СОСТ ТаймАутНаВыключение24В{
    ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ Выключение24В;
 }
 СОСТ Выключение24В{
    У_ВКЛ_24В = ВЫКЛ;
    СТОП;
 }

 /*===== НЕНОРМАЛЬНЫЕ СИТУАЦИИ === */
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*================================================*/
/*=  УСТАНОВКА СВЯЗИ С ПИВ ПО ВКЛЮЧЕНИЮ ПИТАНИЯ ==*/
/*=          643.АЭ1610.10000 Д2.39             ==*/
/*================================================*/
ПРОЦ УстановкаСвязиС_ПИВ_ПоВключениюПитания{
 СОСТ Начало{
    InitChannelStatus_PIV(); /* инициализация статуса, обнуление числа ошибок */
/*    SendMsgPIVCode(ЭТАП_КИП); */
    SendMsgPIVCode(ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймаутНаФиксациюОшибки{
    ТАЙМАУТ ТАЙМАУТ_НА_ДИАГНОСТИКУ_РАЗРЫВА_СВЯЗИ_С_ПИВ В СОСТ ПроверкаСвязи;
 }
 СОСТ ПроверкаСвязи{
    ЕСЛИ (GetChannelStatus_PIV() == ВКЛ) СТОП;  /* чтение статуса канала 0/1 */
    ИНАЧЕ В СОСТ Начало;
 }
}

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=         РЕЖИМ НАЧАЛЬНАЯ ИНИЦИАЛИЗАЦИЯ      =*/
/*=         643.АЭ1610.10000 Д2.2              =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*======= ДОКУМЕНТ  Д2 (Блок-схема логическая работы ЦУК) */
/*      Процесс НачальнаяИнициализация
 *
 *      Похож на РР, но не воспринимает команд смены режима
 *      и команд результатом которых может быть движение по координатам
*/
ПРОЦ РежимНачальнаяИнициализация{
ИЗ ПРОЦ Инициализация
                        ФлагПовторнойЗагрузки,
                        ТекущийРежим,
                        ТекущийЭтап,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        КодСобытия_от_ПИВ;       /* */

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_ИНИЦИАЛИЗАЦИИ;
/*    СТАРТ ПРОЦ ВКЛ_ВПО; */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ РЕЖИМ_КРП:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ КОНЕЦ_ИНИЦИАЛИЗАЦИИ:
           СЛУЧАЙ РЕЖИМ_РР:
                ФлагПовторнойЗагрузки = ВЫКЛ; /*добавлено*/
                СТАРТ ПРОЦ РежимРР;
/*                СТАРТ ПРОЦ КонтрольИзменения_L_КЗ_УР;         добавитьдобавлено */
/*                СТАРТ ПРОЦ КонтрольИзменения_Lмонокристалла;  добавитьдобавлено */
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РА:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ФОРСАЖ:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_КОНЕЦ_РАБОТЫ:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ РАЗГЕРМЕТИЗАЦИЯ_ВК:      /*добавить 06.08.02*/
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ВАКУУМИРОВАНИЕ_ВК:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ОСТАНОВ_ШЛЮЗОВАНИЯ:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ВКЛ_ВПО:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ВЫК_ВПО:
                В СОСТ ЗапрещеннаяКоманда;
                КОНЕЦ;
           СЛУЧАЙ ВЫК_БЛОКИРОВКУ_ВК_НК:
                СТАРТ ПРОЦ ВЫК_БЛОКИРОВКУ_ВК_НК;
                КОНЕЦ;
           СЛУЧАЙ ВКЛ_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС:
                Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС = 100; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
                КОНЕЦ;
           СЛУЧАЙ ВЫК_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС:
                Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС = 10; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
                КОНЕЦ;
           УМОЛЧАНИЕ:
             ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_СМЕНЫ_ЭТАПА_1) &&
                  (КодСобытия_от_ПИВ <= КОМАНДА_СМЕНЫ_ЭТАПА_N)) {
                     ТекущийЭтап = КодСобытия_от_ПИВ;
             } ИНАЧЕ
              ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_РР_1_ГВС) &&
                   (КодСобытия_от_ПИВ <= КОМАНДА_РР_N_ГВС)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ;
                     В СОСТ КонтрольВыполненияУК;
              } ИНАЧЕ
               ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                    (КодСобытия_от_ПИВ <= ИЗМН_ТК_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
                     В СОСТ КонтрольИзмененияТК;
               } ИНАЧЕ
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                         (КодСобытия_от_ПИВ <= ИЗМН_НП_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
                     В СОСТ КонтрольИзмененияНП;
                } ИНАЧЕ
                 ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                      (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
                     В СОСТ КонтрольИзмененияЗД;
                 } ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                       (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
                     В СОСТ КонтрольВыполненияКР;
                  } ИНАЧЕ
                   ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_КООРДИНАТЫ) &&
                        (КодСобытия_от_ПИВ <= КОМАНДА_N_КООРДИНАТЫ)) {
                        ЕСЛИ ( (КодСобытия_от_ПИВ ==  ЗАТ_КНП) || /* фильтр запрещенных команд */
                               (КодСобытия_от_ПИВ ==  ЗАТ_ДП)  ||
                               (КодСобытия_от_ПИВ ==  ЗАТ_КВП) ||
                               (КодСобытия_от_ПИВ ==  ТИГ_КНП) ||
                               (КодСобытия_от_ПИВ ==  ТИГ_ПВК) ||
                               (КодСобытия_от_ПИВ ==  ТИГ_КВП)) {
                             В СОСТ ЗапрещеннаяКоманда;
                        } ИНАЧЕ {
                             СТАРТ ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ;
                             В СОСТ КонтрольВыполненияКК;
                        }
                   } ИНАЧЕ
                    ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_ДАТЧИКИ) &&
                         (КодСобытия_от_ПИВ <= КОМАНДА_N_ДАТЧИКИ)) {
                          СТАРТ ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ;
                          В СОСТ КонтрольВыполненияКД;
                    } ИНАЧЕ
                     ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_СИСТЕМНАЯ) &&
                          (КодСобытия_от_ПИВ <= КОМАНДА_N_СИСТЕМНАЯ)) {
                          СТАРТ ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ;
                          В СОСТ КонтрольВыполненияСК;
                     } ИНАЧЕ
                      ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ГЛУБИНА_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ГЛУБИНА_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDepth (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ГЛУБИНА_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                      } ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ДИАМЕТР_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ДИАМЕТР_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDiameter (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ДИАМЕТР_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                       } ИНАЧЕ
                        ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigWeight (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                        } ИНАЧЕ В СОСТ НекорректноеСобытие;
                КОНЕЦ; /* конец для УМОЛЧАНИЯ */
      } /* конец разбора */
    } /* конец ЕСЛИ */
 }

 СОСТ КонтрольВыполненияУК{
    ЕСЛИ(ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ КонтрольИзмененияТК{
    ЕСЛИ(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияНП{
    ЕСЛИ(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияЗД{
    ЕСЛИ(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКР{
    ЕСЛИ(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКК{
    ЕСЛИ(ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКД{
     ЕСЛИ(ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ В СОСТ ПАССИВНОЕ)
       В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияСК{
    ЕСЛИ(ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ В СОСТ ПАССИВНОЕ)
    В СОСТ ЧтениеКольцевогоБуфера;
 }

/*====== НЕНОРМАЛЬНЫЕ СИТУАЦИИ =========*/
 СОСТ ЗапрещеннаяКоманда{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_ЗАПРЕЩЕННАЯ_КОМАНДА_РЕЖИМА_ИНИЦИАЛИЗАЦИИ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаИнициализацииГеометрииТигля{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_ИНИЦИАЛИЗАЦИИ_ГЕОМЕТРИИ_ТИГЛЯ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}/*============= Конец процесса РежимНачальнойИнициализации ==========*/


/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=         РЕЖИМ РАБОЧИЙ РУЧНОЙ               =*/
/*=         643.АЭ1610.10000 Д2.2              =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*======= ДОКУМЕНТ  Д2 (Блок-схема логическая работы ЦУК) */
/*      Процесс РучнойРежим.
 *      Отработка команд Оператора, поступающих через RS-232.
 *      При входе - все конкурирующие процессы остановлены, включены ВПО, ВПУ.
 *      Выполняет команды РР, поступающие от Оператора (через диспетчер),
 *      отслеживает ввод некорректных
 *      команд, по командам Оператора осуществляет
 *      ввод оператором новых параметров ТП, запуск процессов режима РР,
 *      ввод заданий в контуры регулирования.
 *      При возникновении режима "Отмена" запускает
 *      процесс Отмена.
*/
ПРОЦ РежимРР{
ИЗ ПРОЦ Инициализация
                        ТекущийРежим,
                        ТекущийЭтап,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        Флаг_КонецТП,
                        КодСобытия_от_ПИВ;       /* */

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_РР;
    СТАРТ ПРОЦ ВКЛ_ВПО;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ РЕЖИМ_КРП:
                СТАРТ ПРОЦ РежимКРП;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ОТЖИГ_ТУ:       /* добавлено */
                СТАРТ ПРОЦ РежимОТЖИГ; /*просто команда РР */
                ТекущийРежим = РЕЖИМ_ОТЖИГ_ТУ;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ДВК:       /* добавить */
                СТАРТ ПРОЦ РежимДВК; /*просто команда РР */
                ТекущийРежим = РЕЖИМ_ДВК;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ КОНЕЦ_ИНИЦИАЛИЗАЦИИ:
           СЛУЧАЙ РЕЖИМ_РР:
                ТекущийРежим = РЕЖИМ_РР;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РА:
                СТАРТ ПРОЦ ВЫК_ВПО;
                СТАРТ ПРОЦ РежимРА;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ФОРСАЖ:
                СТАРТ ПРОЦ РежимФОРСАЖ;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_КОНЕЦ_РАБОТЫ:
                СТАРТ ПРОЦ КонецРаботы;
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП:
                Флаг_КонецТП = ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП;
                В СОСТ АнализКонцаТП;
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ:
                Флаг_КонецТП = ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ;
                В СОСТ АнализКонцаТП;
                КОНЕЦ;
           СЛУЧАЙ ВКЛ_ВПО:
                СТАРТ ПРОЦ ВКЛ_ВПО;
                КОНЕЦ;
           СЛУЧАЙ ВЫК_ВПО:
                СТАРТ ПРОЦ ВЫК_ВПО;
                КОНЕЦ;
           СЛУЧАЙ ВЫК_БЛОКИРОВКУ_ВК_НК:
                СТАРТ ПРОЦ ВЫК_БЛОКИРОВКУ_ВК_НК;
                КОНЕЦ;
           СЛУЧАЙ ВКЛ_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС:
                Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС = 100; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
                КОНЕЦ;
           СЛУЧАЙ ВЫК_ОТЛАДОЧНЫЙ_РЕЖИМ_КОНТРОЛЯ_ГВС:
                Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС = 10; /* Время срабатывания э/м клапанов VЕ1-ВЕ11 */
                КОНЕЦ;
           УМОЛЧАНИЕ:
             ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_СМЕНЫ_ЭТАПА_1) &&
                  (КодСобытия_от_ПИВ <= КОМАНДА_СМЕНЫ_ЭТАПА_N)) {
                     ТекущийЭтап = КодСобытия_от_ПИВ;
             } ИНАЧЕ
              ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_РР_1_ГВС) &&
                   (КодСобытия_от_ПИВ <= КОМАНДА_РР_N_ГВС)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ;
                     В СОСТ КонтрольВыполненияУК;
              } ИНАЧЕ
               ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                    (КодСобытия_от_ПИВ <= ИЗМН_ТК_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
                     В СОСТ КонтрольИзмененияТК;
               } ИНАЧЕ
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                         (КодСобытия_от_ПИВ <= ИЗМН_НП_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
                     В СОСТ КонтрольИзмененияНП;
                } ИНАЧЕ
                 ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                      (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
                     В СОСТ КонтрольИзмененияЗД;
                 } ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                       (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
                     В СОСТ КонтрольВыполненияКР;
                  } ИНАЧЕ
                   ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_КООРДИНАТЫ) &&
                        (КодСобытия_от_ПИВ <= КОМАНДА_N_КООРДИНАТЫ)) {
                     СТАРТ ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ;
                     В СОСТ КонтрольВыполненияКК;
                   } ИНАЧЕ
                    ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_ДАТЧИКИ) &&
                         (КодСобытия_от_ПИВ <= КОМАНДА_N_ДАТЧИКИ)) {
                          СТАРТ ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ;
                          В СОСТ КонтрольВыполненияКД;
                    } ИНАЧЕ
                     ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_СИСТЕМНАЯ) &&
                          (КодСобытия_от_ПИВ <= КОМАНДА_N_СИСТЕМНАЯ)) {
                          СТАРТ ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ;
                          В СОСТ КонтрольВыполненияСК;
                     } ИНАЧЕ
                      ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ГЛУБИНА_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ГЛУБИНА_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDepth (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ГЛУБИНА_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                      } ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ДИАМЕТР_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ДИАМЕТР_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDiameter (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ДИАМЕТР_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                       } ИНАЧЕ
                        ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigWeight (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                        } ИНАЧЕ В СОСТ НекорректноеСобытие;
                КОНЕЦ; /* конец для УМОЛЧАНИЯ */
      } /* конец разбора */
    } /* конец ЕСЛИ */
 }

 СОСТ КонтрольВыполненияУК{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияТК{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияНП{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияЗД{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКР{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКК{
    ЕСЛИ(!(ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКД{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияСК{
    ЕСЛИ(!(ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
/* добавлено по просьбе Саши Курочкина, для того чтобы при переходе
оператора из ТП_РА в РР он мог фиксировать данные сообщения  */
 СОСТ АнализКонцаТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) В СОСТ ЧтениеКольцевогоБуфера;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) В СОСТ ЧтениеКольцевогоБуфера;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*====== НЕНОРМАЛЬНЫЕ СИТУАЦИИ =========*/
 СОСТ ОшибкаИнициализацииГеометрииТигля{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_ИНИЦИАЛИЗАЦИИ_ГЕОМЕТРИИ_ТИГЛЯ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     В СОСТ ЧтениеКольцевогоБуфера;
 }
}/*============= Конец процесса РР ========================*/


/*================================================*/
/*================================================*/
/*==                                            ==*/
/*==       РЕЖИМ РАБОЧИЙ-АВТОМАТИЧЕСКИЙ         ==*/
/*==       643.АЭ1610.10000 Д2.3                ==*/
/*==                                            ==*/
/*================================================*/
/*================================================*/

ПРОЦ РежимРА{
ИЗ ПРОЦ Инициализация   ТекущийЭтап,
                        ТекущийРежим,
                        КодСобытия_от_ПИВ,
                        Флаг_КонецТП;       /* */

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_РА;
    В СОСТ ЗапускТекЭтапаНаИсполнение;
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП:
                Флаг_КонецТП = ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП;
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ:
                Флаг_КонецТП = ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РА:
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РР:
                СТАРТ ПРОЦ Переход_вРР;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ ВКЛ_ВПО:
                СТАРТ ПРОЦ ВКЛ_ВПО;
                КОНЕЦ;
           СЛУЧАЙ ВЫК_ВПО:
                СТАРТ ПРОЦ ВЫК_ВПО;
                КОНЕЦ;
           СЛУЧАЙ ЗАПУСК_ЭТАПА_В_РЕЖИМЕ_РА:
                В СОСТ ЗапускТекЭтапаНаИсполнение;
                КОНЕЦ;
            УМОЛЧАНИЕ:
             ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_СМЕНЫ_ЭТАПА_1) &&
                  (КодСобытия_от_ПИВ <= КОМАНДА_СМЕНЫ_ЭТАПА_N)) {
                     ТекущийЭтап = КодСобытия_от_ПИВ;
             } ИНАЧЕ
              ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_РР_1_ГВС) &&
                   (КодСобытия_от_ПИВ <= КОМАНДА_РР_N_ГВС)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ;
                     В СОСТ КонтрольВыполненияУК;
              } ИНАЧЕ
               ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                    (КодСобытия_от_ПИВ <= ИЗМН_ТК_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
                     В СОСТ КонтрольИзмененияТК;
               } ИНАЧЕ
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                         (КодСобытия_от_ПИВ <= ИЗМН_НП_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
                     В СОСТ КонтрольИзмененияНП;
                } ИНАЧЕ
                 ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                      (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N)) {
                     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
                     В СОСТ КонтрольИзмененияЗД;
                 } ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                       (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ)) {
                     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
                     В СОСТ КонтрольВыполненияКР;
                  } ИНАЧЕ
                   ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_КООРДИНАТЫ) &&
                        (КодСобытия_от_ПИВ <= КОМАНДА_N_КООРДИНАТЫ)) {
                     СТАРТ ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ;
                     В СОСТ КонтрольВыполненияКК;
                   } ИНАЧЕ
                    ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_ДАТЧИКИ) &&
                         (КодСобытия_от_ПИВ <= КОМАНДА_N_ДАТЧИКИ)) {
                          СТАРТ ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ;
                          В СОСТ КонтрольВыполненияКД;
                    } ИНАЧЕ
                     ЕСЛИ ((КодСобытия_от_ПИВ >= КОМАНДА_1_СИСТЕМНАЯ) &&
                          (КодСобытия_от_ПИВ <= КОМАНДА_N_СИСТЕМНАЯ)) {
                          СТАРТ ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ;
                          В СОСТ КонтрольВыполненияСК;
                     } ИНАЧЕ
                      ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ГЛУБИНА_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ГЛУБИНА_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDepth (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ГЛУБИНА_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                      } ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ДИАМЕТР_ТИГЛЯ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ДИАМЕТР_ТИГЛЯ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigDiameter (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ДИАМЕТР_ТИГЛЯ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                       } ИНАЧЕ
                        ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ) &&
                           (КодСобытия_от_ПИВ < (ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ + ЧИСЛО_ТОЧЕК_ТИГЛЯ))) {
                              ЕСЛИ (!SetTigWeight (КодСобытия_от_ПИВ -
                                     ИЗМН_НП_ВЕС_РАСПЛАВА_В_ТИГЛЕ, GetFloatParamPIV()))
                                   В СОСТ ОшибкаИнициализацииГеометрииТигля;
                        } ИНАЧЕ В СОСТ НекорректноеСобытие;
                КОНЕЦ;
      } /* конец разбора */
    }
 }
 СОСТ ЗапускТекЭтапаНаИсполнение{
     ЕСЛИ (ПРОЦ ИсполнениеКомандыРА В СОСТ АКТИВНОЕ) В СОСТ ИдетИсполнениеРА;
     ИНАЧЕ {
          СТАРТ ПРОЦ ИсполнениеКомандыРА;
          В СОСТ ЧтениеКольцевогоБуфера;
     }
 }
 СОСТ КонтрольВыполненияУК{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияТК{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияНП{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольИзмененияЗД{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКР{
    ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКК{
    ЕСЛИ(!(ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияКД{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ КонтрольВыполненияСК{
    ЕСЛИ(!(ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ В СОСТ АКТИВНОЕ))
    В СОСТ ЧтениеКольцевогоБуфера;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ ИдетИсполнениеРА{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОМАНДА_ПРОИГНОРИРОВАНА__ИДЕТ_ИСПОЛНЕНИЕ_ЭТАПА_РА))
       В СОСТ ЧтениеКольцевогоБуфера;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаИнициализацииГеометрииТигля{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_ИНИЦИАЛИЗАЦИИ_ГЕОМЕТРИИ_ТИГЛЯ, КодСобытия_от_ПИВ))
       В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_РА, КодСобытия_от_ПИВ))
       В СОСТ ЧтениеКольцевогоБуфера;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     В СОСТ ЧтениеКольцевогоБуфера;
 }
}/*============= Конец процесса РА*/


/*================================================*/
/*==       ИСПОЛНЕНИЕ КОМАНД РА                 ==*/
/*==       643.АЭ1610.10000 Д2.3                ==*/
/*================================================*/
ПРОЦ ИсполнениеКомандыРА{
ИЗ ПРОЦ Инициализация
                      НП_РЕЖ_ИСПОЛН_РА,
                      ТекущийЭтап;

/* СОБЫТИЯ УПРАВЛЕНИЯ ПРОЦЕССАМИ */
 СОСТ Анализ{
    В СЛЕДУЮЩЕЕ;
    РАЗБОР (ТекущийЭтап) {
       СЛУЧАЙ ЭТАП_КИП:
          СТАРТ ПРОЦ РА_КонтрольИсходногоПоложения;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_КОНТРОЛЬНОЕ_ВАКУУМИРОВАНИЕ:
          СТАРТ ПРОЦ РА_КонтрольноеВакуумирование;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_КОНТРОЛЬ_НАТЕКАНИЯ:
          СТАРТ ПРОЦ РА_КонтрольНатекания;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_РАБОЧЕЕ_ВАКУУМИРОВАНИЕ:
          СТАРТ ПРОЦ РА_РабочееВакуумирование;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГОТ_К_ПЛАВЛ_ЗАГРУЗКИ:
          СТАРТ ПРОЦ РА_ПодготовкаПлавлениюЗагрузки;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЛАВЛ_ЗАГРУЗКИ:
          СТАРТ ПРОЦ РА_ТП_ПлавлениеЗагрузки;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГ_К_СТАБ_РАСПЛАВА:
          СТАРТ ПРОЦ РА_ПодготовкаСтабилизацииРасплава;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_РАСПЛАВА:
          СТАРТ ПРОЦ РА_СтабилизацияРасплава;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГ_ПРОГРЕВА_ЗАТРАВКИ:
          СТАРТ ПРОЦ РА_ПодготовкаПрогреваЗатравки;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПРОГРЕВ_ЗАТРАВКИ:
          СТАРТ ПРОЦ РА_ТП_ПрогревЗатравки;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
          СТАРТ ПРОЦ РА_Затравливание;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
          СТАРТ ПРОЦ РА_ТП_ВыращиваниеПереходаЗатравкаШейка;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
          СТАРТ ПРОЦ РА_ВыращиваниеШейки;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
          СТАРТ ПРОЦ РА_ТП_ВыращиваниеПереходаШейкаКонус;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
          СТАРТ ПРОЦ РА_ВыращиваниеКонуса;
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
          СТАРТ ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр;
          КОНЕЦ;
       СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
          СТАРТ ПРОЦ РА_СтабилизацияЦилиндра;
          КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
         СТАРТ ПРОЦ РА_ТП_ВыращиваниеЦилиндра;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
         СТАРТ ПРОЦ РА_ТП_ВыращиваниеПереходаЦилиндрОбратныйКонус;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
         СТАРТ ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ОТРЫВ_КРИСТАЛЛА:
         СТАРТ ПРОЦ РА_ОтрывКристалла;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ОХЛ_КРИСТАЛЛА:
         СТАРТ ПРОЦ РА_ТП_ОхлаждениеКристалла;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГОТОВКА_К_РАЗГРУЗКЕ_КРИСТАЛЛА:
         СТАРТ ПРОЦ РА_ПодготовкаРазгрузкеКристалла;
         КОНЕЦ;
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }
 СОСТ КонтрольИсполнения{
    РАЗБОР (ТекущийЭтап) {
       СЛУЧАЙ ЭТАП_КИП:
          ЕСЛИ (!(ПРОЦ РА_КонтрольИсходногоПоложения В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_КонтрольИсходногоПоложения В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_КОНТРОЛЬНОЕ_ВАКУУМИРОВАНИЕ:
          ЕСЛИ (!(ПРОЦ РА_КонтрольноеВакуумирование В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_КонтрольноеВакуумирование В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_КОНТРОЛЬ_НАТЕКАНИЯ:
          ЕСЛИ (!(ПРОЦ РА_КонтрольНатекания В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_КонтрольНатекания В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_РАБОЧЕЕ_ВАКУУМИРОВАНИЕ:
          ЕСЛИ (!(ПРОЦ РА_РабочееВакуумирование В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_РабочееВакуумирование В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГОТ_К_ПЛАВЛ_ЗАГРУЗКИ:
          ЕСЛИ (!(ПРОЦ РА_ПодготовкаПлавлениюЗагрузки В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ПодготовкаПлавлениюЗагрузки В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЛАВЛ_ЗАГРУЗКИ:
          ЕСЛИ (!(ПРОЦ РА_ТП_ПлавлениеЗагрузки В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ПлавлениеЗагрузки В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ТекущийЭтап++;		/* Зюбин 06.01.14 добавитьдобавлено */
                   СТАРТ ПРОЦ Переход_вРР;
                   СТОП;
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГ_К_СТАБ_РАСПЛАВА:
          ЕСЛИ (!(ПРОЦ РА_ПодготовкаСтабилизацииРасплава В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ПодготовкаСтабилизацииРасплава В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_РАСПЛАВА:
          ЕСЛИ (!(ПРОЦ РА_СтабилизацияРасплава В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_СтабилизацияРасплава В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГ_ПРОГРЕВА_ЗАТРАВКИ:
          ЕСЛИ (!(ПРОЦ РА_ПодготовкаПрогреваЗатравки В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ПодготовкаПрогреваЗатравки В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПРОГРЕВ_ЗАТРАВКИ:
          ЕСЛИ (!(ПРОЦ РА_ТП_ПрогревЗатравки В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ПрогревЗатравки В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
          ЕСЛИ (!(ПРОЦ РА_Затравливание В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_Затравливание В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеПереходаЗатравкаШейка В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеПереходаЗатравкаШейка В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
          ЕСЛИ (!(ПРОЦ РА_ВыращиваниеШейки В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ВыращиваниеШейки В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеПереходаШейкаКонус В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеПереходаШейкаКонус В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
          ЕСЛИ (!(ПРОЦ РА_ВыращиваниеКонуса В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ВыращиваниеКонуса В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
			 КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
          ЕСЛИ (!(ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
          КОНЕЦ;
       СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
          ЕСЛИ (!(ПРОЦ РА_СтабилизацияЦилиндра В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_СтабилизацияЦилиндра В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
          КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеЦилиндра В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеЦилиндра В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеПереходаЦилиндрОбратныйКонус В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеПереходаЦилиндрОбратныйКонус В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ОТРЫВ_КРИСТАЛЛА:
          ЕСЛИ (!(ПРОЦ РА_ОтрывКристалла В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ОтрывКристалла В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ОХЛ_КРИСТАЛЛА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ОхлаждениеКристалла В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ОхлаждениеКристалла В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПОДГОТОВКА_К_РАЗГРУЗКЕ_КРИСТАЛЛА:
          ЕСЛИ (!(ПРОЦ РА_ПодготовкаРазгрузкеКристалла В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ПодготовкаРазгрузкеКристалла В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   СТАРТ ПРОЦ Переход_вРР;
                   СТОП;
                }
          }
          КОНЕЦ;
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }

 СОСТ ОшибкаИсполненияЭтапа{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАФИКСИРОВАНА_ОШИБКА_РА)) {
       СТАРТ ПРОЦ Переход_вРР;
       СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_ЭТАПА_РА, ТекущийЭтап)) /* добавлено */
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }

}   /* конец ПРОЦ ИсполнениеКомандыРА   */

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=  РЕЖИМ КОМПЛЕКСНО-РЕГЛАМЕНТНЫХ ПРОВЕРОК    =*/
/*=    УСТАНОВКИ                               =*/
/*=           643.АЭ1610.10000 Д2.4            =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/
ПРОЦ РежимКРП{
 ИЗ ПРОЦ Инициализация
                                        
                        КодСобытия_от_ПИВ,
                        ТекущийРежим;
 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_КРП;
    СТАРТ ПРОЦ ВЫК_ВПО;
    СТАРТ ПРОЦ КРП;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РР:
                СТАРТ ПРОЦ Переход_вРР;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_КРП:
                КОНЕЦ;
            УМОЛЧАНИЕ:
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                     (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N))
                     В СОСТ ИзменениеЗД;
                ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                       (КодСобытия_от_ПИВ <= ИЗМН_ТК_N))
                       В СОСТ ИзменениеТК;
                  ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                                (КодСобытия_от_ПИВ <= ИЗМН_НП_N))
                            В СОСТ ИзменениеНП;
                       ИНАЧЕ
                         ЕСЛИ ((КодСобытия_от_ПИВ >=КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                              (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ))
                              В СОСТ ВыполнениеКомандыРегуляторов;
                         ИНАЧЕ
                              В СОСТ НекорректноеСобытие;
                КОНЕЦ;
      } /* конец разбора */
    }
 }

 СОСТ ИзменениеТК{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
     В СОСТ КонтрольИзмененияТК;
 }

 СОСТ КонтрольИзмененияТК{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ АКТИВНОЕ))
     В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ ИзменениеНП{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
     В СОСТ КонтрольИзмененияНП;
 }

 СОСТ КонтрольИзмененияНП{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ИзменениеЗД{
     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
       В СОСТ КонтрольИзмененияЗД;
 }

 СОСТ КонтрольИзмененияЗД{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ВыполнениеКомандыРегуляторов{
     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
       В СОСТ КонтрольВыполненияКР;
 }

 СОСТ КонтрольВыполненияКР{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_КРП, КодСобытия_от_ПИВ))
       В СОСТ ЧтениеКольцевогоБуфера;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ ЧтениеКольцевогоБуфера;
 }
} /*============= Конец процесса КРП*/


/*==============================================*/
/*=                                            =*/
/*=   КОМПЛЕКСНЫЕ-РЕГЛАМЕНТНЫЕ ПРОВЕРКИ        =*/
/*=   (СОБСТВЕННО ПРОВЕРКИ)                    =*/
/*=           643.АЭ1610.10000 Д2.4            =*/
/*=                                            =*/
/*==============================================*/
ПРОЦ КРП{
ИЗ ПРОЦ Инициализация
                        ЗД_Wипн_К1,
                        ЗД_Xт,
                        У_ТЕСТ_ДК,
                        НП_ТипИПН,
                        К_ДАТЧИКА_КАСАНИЯ,
                        ТекущийЭтап;


 ЦЕЛ ЛП_СообщениеК_ПИВ ЛОКАЛ;

 СОСТ КонтрольИсходногоПоложения{
    ТекущийЭтап = ЭТАП_КИП; /* добавлено */
    СТАРТ ПРОЦ РА_КонтрольИсходногоПоложения;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольСрабатывания{
    ЕСЛИ (ПРОЦ  РА_КонтрольИсходногоПоложения В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ  РА_КонтрольИсходногоПоложения В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПроверкаТехСредствВакуумирования{
    СТАРТ ПРОЦ ПроверкаТехСредствВакуумирования;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольТехСредствВакуумирования{
    ЕСЛИ (ПРОЦ ПроверкаТехСредствВакуумирования В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ПроверкаТехСредствВакуумирования В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольноеВакуумирование{
      ТекущийЭтап = ЭТАП_КОНТРОЛЬНОЕ_ВАКУУМИРОВАНИЕ; /* добавлено */
      СТАРТ ПРОЦ РА_КонтрольноеВакуумирование;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольКонтрольногоВакуумирования{
    ЕСЛИ (ПРОЦ РА_КонтрольноеВакуумирование В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ  РА_КонтрольноеВакуумирование В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ РА_КонтрольНатекания{
      ТекущийЭтап = ЭТАП_КОНТРОЛЬ_НАТЕКАНИЯ; /* добавлено */
      СТАРТ ПРОЦ РА_КонтрольНатекания;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольКонтроляНатекания{
    ЕСЛИ (ПРОЦ РА_КонтрольНатекания В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ РА_КонтрольНатекания В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              ТекущийЭтап = ЭТАП_КИП; /* добавлено */
              ЗД_Wипн_К1 = 100.0; /* 100 Вт */
              СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;   /* добавлено */
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольВключенияИП{
    ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПаузаДляКонтроляИП{
   ТАЙМАУТ ОДНА_МИНУТА {
        СТАРТ ПРОЦ ВЫК_ИПН;
        В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ КонтрольВыключенияИП{
    ЕСЛИ (ПРОЦ ВЫК_ИПН В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ВЫК_ИПН В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              СТАРТ ПРОЦ ЗАТ_ДП; /* добавлено */
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольДатчикаПривязки{
    ЕСЛИ (ПРОЦ ЗАТ_ДП В СОСТ ПАССИВНОЕ) { /* контроль ДП, ЗУ, ЗР */
         ЕСЛИ (ПРОЦ ЗАТ_ДП В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              У_ТЕСТ_ДК = ВКЛ;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ Пауза_для_ДК{
    ТАЙМАУТ ДВЕ_СЕКУНДЫ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТестДК{
    ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДК_В_НОРМЕ)) {
              У_ТЕСТ_ДК = ВЫКЛ;
              ЗД_Xт = 10.0;
              СТАРТ ПРОЦ ТИГ_УК;
              В СЛЕДУЮЩЕЕ;
         }
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОШИБКА_ДК)) {
              У_ТЕСТ_ДК = ВЫКЛ;  
              В СОСТ ОШИБКА_КРП;
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ ОШИБКА_КРП;
 }
 СОСТ КонтрольТИГ_УК_10{
    ЕСЛИ (ПРОЦ ТИГ_УК В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ТИГ_УК В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              ЗД_Xт = 11.0;
              СТАРТ ПРОЦ ТИГ_РК;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольТИГ_РК_11{
    ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              ЗД_Xт = 10.0;
              СТАРТ ПРОЦ ТИГ_РК;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольТИГ_РК_10{
    ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              СТАРТ ПРОЦ ТИГ_КНП;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольТИГ_КНП{
    ЕСЛИ (ПРОЦ ТИГ_КНП В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ТИГ_КНП В СОСТ ОШИБКА) В СОСТ ОШИБКА_КРП;
         ИНАЧЕ {
              СТАРТ ПРОЦ КонтрольИзмененияФП_Hур_дляТДД; /* посылаем кому можем */
	          СТАРТ ПРОЦ ПередачаНП_MAX_SIGNAL_VALUE_ДУ;
              СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзР;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }

 СОСТ КонтрольСтатусовКаналов{ /* контролируем отсутствие разрыва связи */
    ЕСЛИ (!GetChannelStatus_VPO()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ВПО;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_DU()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ДУ;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_TDD()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ТДД;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_DTN()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ДТН;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_DTR()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ДТР;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_ZU()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ЗУ;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_ZR()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ЗР;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_ZV()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ЗВ;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_TU()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ТУ;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_TR()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ТР;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ (!GetChannelStatus_TV()) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ТВ;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ЕСЛИ ((НП_ТипИПН==ИПН_ИП2К)&&(!GetChannelStatus_IP2K_K1())) {
          ЛП_СообщениеК_ПИВ = РАЗРЫВ_СВЯЗИ_С_ИП2К_К1;
          В СОСТ СообщениеОбОтсутствииУстройства;
    }
    ТАЙМАУТ ОДНА_МИНУТА {
          СТАРТ ПРОЦ Переход_вРР; 
          СТОП;     
    }
 }




/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ СообщениеОбОтсутствииУстройства{
    ЕСЛИ (SendMsgPIVCode(ЛП_СообщениеК_ПИВ)) В СЛЕДУЮЩЕЕ; /*добавлено */
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОШИБКА_КРП{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОШИБКА_КРП)) { /*добавлено */
        СТАРТ ПРОЦ Переход_вРР;
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ {
        СТАРТ ПРОЦ Переход_вРР;
        ОШИБКА;
    }
 }
}

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=   РЕЖИМ ОТЖИГА ТЕПЛОВОГО УЗЛА              =*/
/*=    УСТАНОВКИ                               =*/
/*=           643.АЭ1610.10000 Д2.32           =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/
ПРОЦ РежимОТЖИГ{
 ИЗ ПРОЦ Инициализация
                                      
                        КодСобытия_от_ПИВ,
                        ТекущийРежим;

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_ОТЖИГ_ТУ;
    СТАРТ ПРОЦ ВЫК_ВПО;
    СТАРТ ПРОЦ ОтжигТепловогоУзла;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РР:
                СТАРТ ПРОЦ Переход_вРР;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ОТЖИГ_ТУ:
                КОНЕЦ;
            УМОЛЧАНИЕ:
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                     (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N))
                     В СОСТ ИзменениеЗД;
                ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                       (КодСобытия_от_ПИВ <= ИЗМН_ТК_N))
                       В СОСТ ИзменениеТК;
                  ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                                (КодСобытия_от_ПИВ <= ИЗМН_НП_N))
                            В СОСТ ИзменениеНП;
                       ИНАЧЕ
                         ЕСЛИ ((КодСобытия_от_ПИВ >=КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                              (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ))
                              В СОСТ ВыполнениеКомандыРегуляторов;
                         ИНАЧЕ
                              В СОСТ НекорректноеСобытие;
                КОНЕЦ;
      } /* конец разбора */
    }
 }

 СОСТ ИзменениеТК{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
     В СОСТ КонтрольИзмененияТК;
 }

 СОСТ КонтрольИзмененияТК{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ АКТИВНОЕ))
     В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ ИзменениеНП{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
     В СОСТ КонтрольИзмененияНП;
 }

 СОСТ КонтрольИзмененияНП{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ИзменениеЗД{
     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
       В СОСТ КонтрольИзмененияЗД;
 }

 СОСТ КонтрольИзмененияЗД{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ВыполнениеКомандыРегуляторов{
     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
       В СОСТ КонтрольВыполненияКР;
 }

 СОСТ КонтрольВыполненияКР{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_ОТЖИГ_ТУ, КодСобытия_от_ПИВ))
       В СОСТ ЧтениеКольцевогоБуфера;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ ЧтениеКольцевогоБуфера;
 }
} /*============= Конец процесса ОТЖИГ_ТУ*/

/*=======================================================================*/
/*=           643.АЭ1610.10000 Д2.32                                    =*/
/*======== ОТЖИГ - команда режима РР   ==================================*/
/*======== отжиг теплового узла при вакуумировании: =====================*/
/*======== производится КИП, КонтрольноеВакуумирование, =================*/
/*======== КонтрольНатекания (допустимые значения натекания менее  ======*/
/*======== жесткие, чем при РА и КРП), РабочееВакуумирование (2 насоса) =*/
/*======== и собственно отжиг - доведение мощности нагревателя   ========*/
/*======== до заданного значения при контроле давления (Р не должно =====*/
/*======== превышать заданную величину), и выдержка максимальной ========*/
/*======== мощности в течение заданного времени отжига, затем охлаждение */
/*=======================================================================*/

ПРОЦ ОтжигТепловогоУзла{
ИЗ ПРОЦ Инициализация
  НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ, /* мм.рт.ст */
  НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                      , /* мм.рт.ст */
  НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                             , /* 100 Вт   */
  НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                             , /* дельта разогрева */
  НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                        , /* мм.рт.ст.*/
  НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                         , /* мм.рт.ст.*/
  НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                    , /* 100 КВт  */
  НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА                                ,
  НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                     ,
  НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                     ,
                        ТК_ГлубокийВакуум_Р2,
                        ЗД_Wт,
                        ЗД_Wз,
                        ФП_Pнк,
                        ЗД_Wипн_К1,
                        ТекущийЭтап;

 ПЛАВ ЛП_Копия_Р2 ЛОКАЛ;
 ПЛАВ ЛП_Pнк_1 ЛОКАЛ; /* давление предыдущего шага*/
 ПЛАВ ЛП_ДельтаPнк ЛОКАЛ; /* */


 СОСТ КонтрольИсходногоПоложения{
    ТекущийЭтап = ЭТАП_КИП; /* добавлено */
    СТАРТ ПРОЦ РА_КонтрольИсходногоПоложения;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПрохожденияКИП{
    ЕСЛИ (ПРОЦ  РА_КонтрольИсходногоПоложения В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ  РА_КонтрольИсходногоПоложения В СОСТ ОШИБКА) В СОСТ ОшибкаОтжига;
         ИНАЧЕ {
              ТекущийЭтап = ЭТАП_КОНТРОЛЬНОЕ_ВАКУУМИРОВАНИЕ; /* добавлено */
              СТАРТ ПРОЦ РА_КонтрольноеВакуумирование;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольОкончанияКонтрольногоВакуумирования{
    ЕСЛИ (ПРОЦ РА_КонтрольноеВакуумирование В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ  РА_КонтрольноеВакуумирование В СОСТ ОШИБКА) В СОСТ ОшибкаОтжига;
         ИНАЧЕ {
              ТекущийЭтап = ЭТАП_КОНТРОЛЬ_НАТЕКАНИЯ; /* добавлено */
              СТАРТ ПРОЦ РА_КонтрольНатекания;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольОкончанияКонтроляНатекания{
    ЕСЛИ (ПРОЦ РА_КонтрольНатекания В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ФП_Pнк > НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ)
                 В СОСТ СообщениеОНедопустимомДавлении;
         ИНАЧЕ {
              ТекущийЭтап = ЭТАП_РАБОЧЕЕ_ВАКУУМИРОВАНИЕ; /* добавлено */
                СТАРТ ПРОЦ ВКЛ_АВД1_НК;
                СТАРТ ПРОЦ ВКЛ_АВД2_НК;
                В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольСрабатыванияВключенияАВД1и2{
    ЕСЛИ ((ПРОЦ  ВКЛ_АВД1_НК В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ  ВКЛ_АВД2_НК В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ВКЛ_АВД1_НК В СОСТ ОШИБКА) ||
               (ПРОЦ  ВКЛ_АВД1_НК В СОСТ ОШИБКА)) В СОСТ ОшибкаОтжига;
         ИНАЧЕ {
              ЛП_Копия_Р2 = ТК_ГлубокийВакуум_Р2;
              ТК_ГлубокийВакуум_Р2 = НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ;
              СТАРТ ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольОтрабатыванияКРВ{
    ЕСЛИ (ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7 В СОСТ ПАССИВНОЕ) {
         ТК_ГлубокийВакуум_Р2 = ЛП_Копия_Р2;
         ЕСЛИ (ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7 В СОСТ ОШИБКА) {
              В СОСТ ОшибкаОтжига;
         } ИНАЧЕ {
              ТекущийЭтап = ЭТАП_ПОДГ_ПРОГРЕВА_ЗАТРАВКИ; /* добавить */
              СТАРТ ПРОЦ РА_ПодготовкаПрогреваЗатравки;
              СТАРТ ПРОЦ ТИГ_ПВК;  /* тигель в ПЗУР  */
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольЗавершенияПроцессов{
    ЕСЛИ ((ПРОЦ РА_ПодготовкаПрогреваЗатравки В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ТИГ_ПВК В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ ((ПРОЦ РА_ПодготовкаПрогреваЗатравки В СОСТ ОШИБКА)||
               (ПРОЦ ТИГ_ПВК В СОСТ ОШИБКА)) В СОСТ ОшибкаОтжига;
         ИНАЧЕ  В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВключениеВращенияТигля_Затравки{
    ТекущийЭтап = ЭТАП_ОТЖИГ_ТЕПЛОВОГО_УЗЛА; /* добавлено */
    ЗД_Wт = -2.0;
    ЗД_Wз =  2.0;
    СТАРТ ПРОЦ ЗАТ_ВР;
    СТАРТ ПРОЦ ТИГ_ВР;
    ЗД_Wипн_К1 = 100.0;
    СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияИПН{
    ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ОШИБКА) В СОСТ ОшибкаОтжига;
         ИНАЧЕ {
              ЛП_Pнк_1 = ФП_Pнк; /* инициализация регулятора */
              ЛП_ДельтаPнк = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ ПаузаРегулирования{
    ТАЙМАУТ НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА В СЛЕДУЮЩЕЕ;
 }
 СОСТ РегулированиеРпоW{
    ЛП_ДельтаPнк =  ФП_Pнк - ЛП_Pнк_1; /* расчет изменения */
    ЛП_Pнк_1 = ФП_Pнк;                 /* переприсваивание */

    ЕСЛИ((ФП_Pнк + ЛП_ДельтаPнк) > НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС) { /*расчет ЗД_Wипн */
         ЗД_Wипн_К1 -= НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА;
    } ИНАЧЕ {
         ЕСЛИ((ФП_Pнк + ЛП_ДельтаPнк) < НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН) 
              ЗД_Wипн_К1 += НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА;
    }

    ЕСЛИ(ЗД_Wипн_К1 < НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА) /* контроль максимума */
         В СОСТ ПаузаРегулирования;
    ИНАЧЕ 
         ЗД_Wипн_К1 = НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА; /* ограничение */

    ТАЙМАУТ НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА В СЛЕДУЮЩЕЕ; /* если отработали на Wмакс положенное */
 }
 СОСТ СбросМощностиИПН{
    ЗД_Wипн_К1 -= НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН; /* сброс */
    ЕСЛИ (ЗД_Wипн_К1 < НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН) {
        ЗД_Wипн_К1 = 0.0;
        СТАРТ ПРОЦ ВЫК_ИПН;
        В СОСТ КонтрольВыключенияИПН;
    } ИНАЧЕ  В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПаузаОхлаждения{
    ТАЙМАУТ НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН В СОСТ СбросМощностиИПН;
 }
 СОСТ КонтрольВыключенияИПН{
   ЕСЛИ (ПРОЦ ВЫК_ИПН В СОСТ ПАССИВНОЕ) {
         ЕСЛИ (ПРОЦ ВЫК_ИПН В СОСТ ОШИБКА) В СОСТ ОшибкаОтжига;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщениеОКонцеОтжига{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТЖИГ_КОНЕЦ_ОТЖИГА)) СТОП; 
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ СообщениеОНедопустимомДавлении{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТЖИГ_НЕГЕРМЕТИЧНОСТЬ_УСТАНОВКИ)) В СЛЕДУЮЩЕЕ; 
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОшибкаОтжига{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОШИБКА_ОТЖИГА)) { 
        СТАРТ ПРОЦ Переход_вРР;
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ {
        СТАРТ ПРОЦ Переход_вРР;
        ОШИБКА;
    }
 }
}

/*================================================*/
/*=      ПроверкаТехСредствВакуумирования       ==*/
/*=      643.АЭ1610.10000 Д2.4                  ==*/
/*================================================*/
ПРОЦ ПроверкаТехСредствВакуумирования{
 ИЗ ПРОЦ Инициализация  К_ОТКР_ЗАТВОР_В,
                        К_ЗАКР_ЗАТВОР_В;


 ЦЕЛ ЛП_ИндикаторОшибки ЛОКАЛ;

 СОСТ Начало{
     ЛП_ИндикаторОшибки = 0;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОткрVE5 {
   СТАРТ ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVE5 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVE5 {
   СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVE5 {
      ЕСЛИ (!(ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрVE6 {
   СТАРТ ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVE6 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVE6 {
   СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVE6 {
      ЕСЛИ (!(ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрБПК {                      /*добавлено */
   СТАРТ ПРОЦ ОТКР_БПК_VE7;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрБПК {
      ЕСЛИ ((ПРОЦ ОТКР_БПК_VE7 В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_БПК_VE7 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрБПК {
   СТАРТ ПРОЦ ЗАКР_БПК_VE7;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрБПК {
      ЕСЛИ ((ПРОЦ ЗАКР_БПК_VE7 В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_БПК_VE7 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }



 СОСТ ОткрVE8 {
   СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVE8 {
      ЕСЛИ (!(ПРОЦ ОТКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_ПРОДУВКА_VE8 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVE8 {
   СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVE8 {
      ЕСЛИ (!(ПРОЦ ЗАКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_ПРОДУВКА_VE8 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрVE9 {
   СТАРТ ПРОЦ ОТКР_НАДДУВ_ВК_VE9;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVE9 {
      ЕСЛИ (!(ПРОЦ ОТКР_НАДДУВ_ВК_VE9 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_НАДДУВ_ВК_VE9 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVE9 {
   СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVE9 {
      ЕСЛИ (!(ПРОЦ ЗАКР_НАДДУВ_ВК_VE9 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_НАДДУВ_ВК_VE9 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрVE12 {                       /*добавить 06.08.02*/
   СТАРТ ПРОЦ ОТКР_НАДДУВ_НК_VE12;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVE12 {
      ЕСЛИ (!(ПРОЦ ОТКР_НАДДУВ_НК_VE12 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_НАДДУВ_НК_VE12 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVE12 {
   СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVE12 {
      ЕСЛИ (!(ПРОЦ ЗАКР_НАДДУВ_НК_VE12 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_НАДДУВ_НК_VE12 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрVM14 {
   СТАРТ ПРОЦ ЗАКР_VM14;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗакрVM14 {
      ЕСЛИ (!(ПРОЦ ЗАКР_VM14 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_VM14 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрVM14 {
   СТАРТ ПРОЦ ОТКР_VM14;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОткрVM14 {
      ЕСЛИ (!(ПРОЦ ОТКР_VM14 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_VM14 В СОСТ ОШИБКА) ЛП_ИндикаторОшибки = 1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗакрытьЗатворВакуумный { /* по входу ЗВ открыт! конструктивно */
        ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
        ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаЗакрытияЗатвораВакуумного {
        ЕСЛИ ((!К_ОТКР_ЗАТВОР_В) && (К_ЗАКР_ЗАТВОР_В)) В СОСТ ОткрытьЗатворВакуумный;
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ УстановкаБитаОшибкиПоЗакрытию;
 }
 СОСТ УстановкаБитаОшибкиПоЗакрытию{
    ЛП_ИндикаторОшибки = 1;
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_ЗАТВОРА_ВАКУУМНОГО)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОткрытьЗатворВакуумный {
        ЕСЛИ ((К_ОТКР_ЗАТВОР_В) && (!К_ЗАКР_ЗАТВОР_В)) В СЛЕДУЮЩЕЕ;
        ИНАЧЕ
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
        ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаОткрытияЗатвораВакуумного {
        ЕСЛИ ((К_ОТКР_ЗАТВОР_В) && (!К_ЗАКР_ЗАТВОР_В)) В СОСТ АнализРаботыПроцесса;
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ УстановкаБитаОшибкиПоОткрытию;
 }
 СОСТ УстановкаБитаОшибкиПоОткрытию{
    ЛП_ИндикаторОшибки = 1;
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_ЗАТВОРА_ВАКУУМНОГО)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ АнализРаботыПроцесса {
        ЕСЛИ (ЛП_ИндикаторОшибки == 0) СТОП;
        ИНАЧЕ ОШИБКА;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}


/*================================================*/
/*================================================*/
/*==                                            ==*/
/*==       РЕЖИМ ДВК     добавить               ==*/
/*==       643.АЭ1610.10000 Д2.??               ==*/
/*==                                            ==*/
/*==  Для отработки команд при досрочном выращи-==*/
/*== вании обратного конуса.                    ==*/
/*==  По выходу запускает режим РР.             ==*/
/*==                                            ==*/
/*================================================*/
/*================================================*/
ПРОЦ РежимДВК{
 ИЗ ПРОЦ Инициализация
                                      
                        КодСобытия_от_ПИВ,
                        ТекущийЭтап,
                        ТекущийРежим,
			Флаг_КонецТП;

 СОСТ Начало{
    ЕСЛИ (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) {
       ТекущийРежим = РЕЖИМ_ДВК;
       СТАРТ ПРОЦ ВЫК_ВПО;
       СТОП ПРОЦ РЕГ_ДК;
       ТекущийЭтап = ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА;
       СТАРТ ПРОЦ ДВК_ВыращиваниеОбратногоКонуса;
       В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ В СОСТ НетУсловий; /* вставить 12.05.2006 */
 }
 СОСТ ЧтениеКольцевогоБуфера{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgPIV()) {
      КодСобытия_от_ПИВ = GetMsgPIVCode();
      РАЗБОР (КодСобытия_от_ПИВ) {
           СЛУЧАЙ ОТМЕНА_ОТМЕНЫ:
                СТАРТ ПРОЦ ОТМЕНА_ОТМЕНЫ;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_РР:
                СТАРТ ПРОЦ Переход_вРР;
                СТОП;
                КОНЕЦ;
           СЛУЧАЙ РЕЖИМ_ДВК:
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП: /*добавить 2006.07.20 */
                Флаг_КонецТП = ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП;
                КОНЕЦ;
           СЛУЧАЙ ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ:
                Флаг_КонецТП = ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ;
                КОНЕЦ;
            УМОЛЧАНИЕ:
                ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ЗД_1) &&
                     (КодСобытия_от_ПИВ <= ИЗМН_ЗД_N))
                     В СОСТ ИзменениеЗД;
                ИНАЧЕ
                  ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_ТК_1) &&
                       (КодСобытия_от_ПИВ <= ИЗМН_ТК_N))
                       В СОСТ ИзменениеТК;
                  ИНАЧЕ
                       ЕСЛИ ((КодСобытия_от_ПИВ >= ИЗМН_НП_1) &&
                                (КодСобытия_от_ПИВ <= ИЗМН_НП_N))
                            В СОСТ ИзменениеНП;
                       ИНАЧЕ
                         ЕСЛИ ((КодСобытия_от_ПИВ >=КОМАНДА_1_РЕГУЛЯТОРЫ) &&
                              (КодСобытия_от_ПИВ <= КОМАНДА_N_РЕГУЛЯТОРЫ))
                              В СОСТ ВыполнениеКомандыРегуляторов;
                         ИНАЧЕ
                              В СОСТ НекорректноеСобытие;
                КОНЕЦ;
      } /* конец разбора */
    }
 }

 СОСТ ИзменениеТК{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ;
     В СОСТ КонтрольИзмененияТК;
 }

 СОСТ КонтрольИзмененияТК{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ В СОСТ АКТИВНОЕ))
     В СОСТ ЧтениеКольцевогоБуфера;
 }
 СОСТ ИзменениеНП{
     СТАРТ ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ;
     В СОСТ КонтрольИзмененияНП;
 }

 СОСТ КонтрольИзмененияНП{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ИзменениеЗД{
     СТАРТ ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ;
       В СОСТ КонтрольИзмененияЗД;
 }

 СОСТ КонтрольИзмененияЗД{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 СОСТ ВыполнениеКомандыРегуляторов{
     СТАРТ ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ;
       В СОСТ КонтрольВыполненияКР;
 }

 СОСТ КонтрольВыполненияКР{
     ЕСЛИ(!(ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ В СОСТ АКТИВНОЕ))
       В СОСТ ЧтениеКольцевогоБуфера;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_ДВК, КодСобытия_от_ПИВ))
       В СОСТ ЧтениеКольцевогоБуфера;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ НетУсловий { /* ВСТАВИТЬ !!! 12.05.2006 */
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_ЭТАПА_ДВК, ТекущийЭтап)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ВыходИзРежима{
    СТАРТ ПРОЦ Переход_вРР;
    СТОП;
 }
} /*============= Конец процесса РежимДВК */

/*================================================*/
/*================================================*/
/*==                                            ==*/
/*==    Досрочное выращивание конуса в          ==*/
/*==      Режиме ДВК     добавить               ==*/
/*==       643.АЭ1610.10000 Д2.??               ==*/
/*==                                            ==*/
/*==  Используются стандартные процессы РА      ==*/
/*==                                            ==*/
/*==  По выходу запускает режим РР.             ==*/
/*==                                            ==*/
/*================================================*/
/*================================================*/
ПРОЦ ДВК_ВыращиваниеОбратногоКонуса{
ИЗ ПРОЦ Инициализация
                      НП_РЕЖ_ИСПОЛН_РА,
                      ТекущийЭтап;

/* СОБЫТИЯ УПРАВЛЕНИЯ ПРОЦЕССАМИ */
 СОСТ Анализ{
    В СЛЕДУЮЩЕЕ;
    РАЗБОР (ТекущийЭтап) {
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
         СТАРТ ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ОТРЫВ_КРИСТАЛЛА:
         СТАРТ ПРОЦ РА_ОтрывКристалла;
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ОХЛ_КРИСТАЛЛА:
         СТАРТ ПРОЦ РА_ТП_ОхлаждениеКристалла;
         КОНЕЦ;
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }
 СОСТ КонтрольИсполнения{
    РАЗБОР (ТекущийЭтап) {
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ОТРЫВ_КРИСТАЛЛА:
          ЕСЛИ (!(ПРОЦ РА_ОтрывКристалла В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ОтрывКристалла В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ЕСЛИ (НП_РЕЖ_ИСПОЛН_РА == НЕПРЕРЫВНО) {
                        ТекущийЭтап++;
                        В СОСТ Анализ;
                   } ИНАЧЕ {
                        СТАРТ ПРОЦ Переход_вРР;
                        СТОП;
                   }
                }
          }
         КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ОХЛ_КРИСТАЛЛА:
          ЕСЛИ (!(ПРОЦ РА_ТП_ОхлаждениеКристалла В СОСТ АКТИВНОЕ)) {
                ЕСЛИ (ПРОЦ РА_ТП_ОхлаждениеКристалла В СОСТ ОШИБКА)
                   В СОСТ ОшибкаИсполненияЭтапа;
                ИНАЧЕ {
                   ТекущийЭтап = ЭТАП_ПОДГ_К_СТАБ_РАСПЛАВА; /* МИН НЕТ: на перерасчет длин и масс не влияет */
                   СТАРТ ПРОЦ Переход_вРР;
                   СТОП;
                }
          }
         КОНЕЦ;
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }

 СОСТ ОшибкаИсполненияЭтапа{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАФИКСИРОВАНА_ОШИБКА_ДВК)) {
       СТАРТ ПРОЦ Переход_вРР;
       СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_ЭТАПА_ДВК, ТекущийЭтап))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}




/*================================================*/
/*================================================*/
/*==                                            ==*/
/*==       РЕЖИМ ФОРСАЖ                         ==*/
/*==       643.АЭ1610.10000 Д2.5                ==*/
/*==                                            ==*/
/*==  Для отработки команд низкоуровневой       ==*/
/*== отладки ЦУКМ. О состоянии ЦУКМ должен      ==*/
/*== позаботиться оператор. По командам опера-  ==*/
/*== тора режим изменяет состояние входов       ==*/
/*== модуля UNIO                                ==*/
/*==  По выходу запускает режим Инициализация.  ==*/
/*==                                            ==*/
/*================================================*/
/*================================================*/
ПРОЦ РежимФОРСАЖ{
ИЗ ПРОЦ Инициализация
                        ТекущийРежим        ,
                      КодСобытия_от_ПИВ     ,  /* */
                      У_ВКЛ_ПТД             ,  /* {FPGA3_U1_0[1]} */
                      У_ВЫК_ПТД             ,  /* {FPGA3_U1_0[1]} */
                      У_ВКЛ_РВ_ПТД          ,  /* {FPGA3_U1_0[1]} */
                      У_ВКЛ_АСС             ,  /* {FPGA3_U1_0[1]} */
                      У_VE12                ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N5                ,  /* {FPGA3_U1_0[1]} */
                      FPGA3_N6                ,  /* {FPGA3_U1_0[1]} */
                      FPGA3_N7                ,  /* {FPGA3_U1_0[1]} */
                      У_ЛАЗЕРА_ДП           ,  /* {FPGA3_U1_0[1]} */
                      FPGA3_N9                ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N10               ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N11               ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N12               ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N13               ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N14               ,  /* {FPGA3_U1_1[1]} */
                      FPGA3_N15               ,  /* {FPGA3_U1_1[1]} */

                      FPGA3_N16               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N17               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N18               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N19               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N20               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N21               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N22               ,  /* {FPGA3_U1_2[1]} */
                      FPGA3_N23               ,  /* {FPGA3_U1_2[1]} */

                      У_НВР2                ,  /* {FPGA4_U1_0[1]} */
                      У_НВР1                ,  /* {FPGA4_U1_0[1]} */
                      У_РАЗБЛОКИРОВКА_ВК_НК           ,  /* {FPGA4_U1_0[1]} */
                      У_ТЕСТ_ДК               ,  /* {FPGA4_U1_0[1]} */
                      У_ЗАКР_РРГ            ,  /* {FPGA4_U1_0[1]} */
                      У_ОТКР_РРГ            ,  /* {FPGA4_U1_0[1]} */
                      У_ВТ3             ,  /* {FPGA4_U1_0[1]} */
                      У_ВКЛ_48В             ,  /* {FPGA4_U1_0[1]} */
                      У_VE1                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE2                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE3                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE4                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE5                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE6                 ,  /* {FPGA4_U1_1[1]} */
                      У_VE7                 ,  /* {FPGA4_U1_1[1]} */

                      У_ВКЛ_24В              ,  /* {FPGA4_U1_1[1]}*/

                      У_ДВН2                ,  /* {FPGA4_U1_2[1]} */
                      У_ДВН1                ,  /* {FPGA4_U1_2[1]} */
                      У_VE10                ,  /* {FPGA4_U1_2[1]} */
                      У_VE11                ,  /* {FPGA4_U1_2[1]} */
                      У_ОТКР_VM14           ,  /* {FPGA4_U1_2[1]} */
                      У_ЗАКР_VM14           ,  /* {FPGA4_U1_2[1]} */
                      У_VE8                 ,  /* {FPGA4_U1_2[1]} */
                      У_VE9                 ;  /* {FPGA4_U1_2[1]} */

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_ФОРСАЖ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЧтениеИ_РазборКодаСобытияОтПИВ {
    /*  читаем код и параметр события из кольцевого буфера в структуру */
  ЕСЛИ (GetNextMsgPIV()) {
    КодСобытия_от_ПИВ = GetMsgPIVCode();

    РАЗБОР (КодСобытия_от_ПИВ) {
         СЛУЧАЙ РЕЖИМ_РР:
              СТАРТ ПРОЦ Инициализация;
              СТОП;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_ПТД_ON:
              У_ВКЛ_ПТД = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_ПТД_OFF:
              У_ВКЛ_ПТД = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВЫК_ПТД_ON:
              У_ВЫК_ПТД = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВЫК_ПТД_OFF:
              У_ВЫК_ПТД = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_РВ_ПТД_ON:
              У_ВКЛ_РВ_ПТД = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_РВ_ПТД_OFF:
              У_ВКЛ_РВ_ПТД = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_АСС_ON:
              У_ВКЛ_АСС = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_АСС_OFF:
              У_ВКЛ_АСС = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE12_ON:
              У_VE12 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE12_OFF:
              У_VE12 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N5_ON:
              FPGA3_N5 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N5_OFF:
              FPGA3_N5 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N6_ON:
              FPGA3_N6 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N6_OFF:
              FPGA3_N6 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N7_ON:
              FPGA3_N7 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N7_OFF:
              FPGA3_N7 = ВЫКЛ;
              КОНЕЦ;

         СЛУЧАЙ ФОРСАЖ_У_ЛАЗЕРА_ДП_ON:
              У_ЛАЗЕРА_ДП = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ЛАЗЕРА_ДП_OFF:
              У_ЛАЗЕРА_ДП = ВЫКЛ;
              КОНЕЦ;




         СЛУЧАЙ ФОРСАЖ_FPGA3_N9_ON:
              FPGA3_N9 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N9_OFF:
              FPGA3_N9 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N10_ON:
              FPGA3_N10 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N10_OFF:
              FPGA3_N10 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N11_ON:
              FPGA3_N11 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N11_OFF:
              FPGA3_N11 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N12_ON:
              FPGA3_N12 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N12_OFF:
              FPGA3_N12 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N13_ON:
              FPGA3_N13 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N13_OFF:
              FPGA3_N13 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N14_ON:
              FPGA3_N14 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N14_OFF:
              FPGA3_N14 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N15_ON:
              FPGA3_N15 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N15_OFF:
              FPGA3_N15 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N16_ON:
              FPGA3_N16 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N16_OFF:
              FPGA3_N16 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N17_ON:
              FPGA3_N17 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N17_OFF:
              FPGA3_N17 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N18_ON:
              FPGA3_N18 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N18_OFF:
              FPGA3_N18 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N19_ON:
              FPGA3_N19 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N19_OFF:
              FPGA3_N19 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N20_ON:
              FPGA3_N20 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N20_OFF:
              FPGA3_N20 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N21_ON:
              FPGA3_N21 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N21_OFF:
              FPGA3_N21 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N22_ON:
              FPGA3_N22 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N22_OFF:
              FPGA3_N22 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N23_ON:
              FPGA3_N23 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_FPGA3_N23_OFF:
              FPGA3_N23 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_НВР1_ON:
              У_НВР1 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_НВР1_OFF:
              У_НВР1 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_НВР2_ON:
              У_НВР2 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_НВР2_OFF:
              У_НВР2 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_РАЗБЛОКИРОВКА_ВК_НК_ON:
              У_РАЗБЛОКИРОВКА_ВК_НК = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_РАЗБЛОКИРОВКА_ВК_НК_OFF:
              У_РАЗБЛОКИРОВКА_ВК_НК = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ТЕСТ_ДК_ON:
              У_ТЕСТ_ДК = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ТЕСТ_ДК_OFF:
              У_ТЕСТ_ДК = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ЗАКР_РРГ_ON:
              У_ЗАКР_РРГ = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ЗАКР_РРГ_OFF:
              У_ЗАКР_РРГ = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ОТКР_РРГ_ON:
              У_ОТКР_РРГ = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ОТКР_РРГ_OFF:
              У_ОТКР_РРГ = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВТ3_ON:
              У_ВТ3 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВТ3_OFF:
              У_ВТ3 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_48В_ON:
              У_ВКЛ_48В = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_48В_OFF:
              У_ВКЛ_48В = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE1_ON:
              У_VE1 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE1_OFF:
              У_VE1 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE2_ON:
              У_VE2 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE2_OFF:
              У_VE2 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE3_ON:
              У_VE3 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE3_OFF:
              У_VE3 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE4_ON:
              У_VE4 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE4_OFF:
              У_VE4 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE5_ON:
              У_VE5 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE5_OFF:
              У_VE5 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE6_ON:
              У_VE6 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE6_OFF:
              У_VE6 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE7_ON:
              У_VE7 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE7_OFF:
              У_VE7 = ВЫКЛ;
              КОНЕЦ;

         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_24В_ON:
              У_ВКЛ_24В = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ВКЛ_24В_OFF:
              У_ВКЛ_24В = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ДВН1_ON:
              У_ДВН1 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ДВН1_OFF:
              У_ДВН1 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ДВН2_ON:
              У_ДВН2 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ДВН2_OFF:
              У_ДВН2 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE10_ON:
              У_VE10 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE10_OFF:
              У_VE10 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE11_ON:
              У_VE11 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE11_OFF:
              У_VE11 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ОТКР_VM14_ON:
              У_ОТКР_VM14 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ОТКР_VM14_OFF:
              У_ОТКР_VM14 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ЗАКР_VM14_ON:
              У_ЗАКР_VM14 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_ЗАКР_VM14_OFF:
              У_ЗАКР_VM14 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE8_ON:
              У_VE8 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE8_OFF:
              У_VE8 = ВЫКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE9_ON:
              У_VE9 = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ФОРСАЖ_У_VE9_OFF:
              У_VE9 = ВЫКЛ;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ НекорректноеСобытие;
              КОНЕЦ;
    } /* конец разбора */
  }
 }


 СОСТ НекорректноеСобытие{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ_РФ, КодСобытия_от_ПИВ))
       В СОСТ ЧтениеИ_РазборКодаСобытияОтПИВ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     СТОП;
 }
}/*==== Конец процесса РежимФОРСАЖ ======*/



/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=              РЕЖИМ ОТМЕНА                  =*/
/*=           643.АЭ1610.10000 Д2.6            =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/
/*    существует два варианта режима ОТМЕНА:
    1 - по кнопке, в этом случае запускается процесс выключения
        процессов конкурирующих с автоматическим перемещением тигля и затравки; ;
    2 - по команде оператора, в этом случае с помощью регуляторов производится
        необходимые перемещения */
/* Режим ОТМЕНА по инициативе оператора :
   1 - запуск процесса перемещения тигля В КНП
   2 - запуск процессов затравку в КВП,           */

ПРОЦ РежимОТМЕНА{
ИЗ ПРОЦ Инициализация
                         ТекущийРежим;
 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_ОТМЕНА;
    СТАРТ ПРОЦ ВЫК_РЕГ_УР;
    СТАРТ ПРОЦ ВЫК_ИПН;
    СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
    СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
    СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
    СТАРТ ПРОЦ Переход_вРР;
    ЕСЛИ ((ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) ||
          (ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ)) {
         СТАРТ ПРОЦ ВЫК_ИПН;
         СТАРТ ПРОЦ ТИГ_КНП;
    }
    СТОП;
 }
}
/*==============================================*/
/*=                                            =*/
/*=              ОТМЕНА ОТМЕНЫ                 =*/
/*=           643.АЭ1610.10000 Д2.6            =*/
/*=                                            =*/
/*==============================================*/
ПРОЦ ОТМЕНА_ОТМЕНЫ{
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНТРОЛЬ_ТАЙМАУТА_ОТМЕНЫ_СНЯТ)) {
         СТОП ПРОЦ ДоОтмены2мин;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*==============================================*/
/*=                                            =*/
/*=          ЗАДЕРЖКА РЕЖИМА ОТМЕНЫ            =*/
/*=           643.АЭ1610.10000 Д2.6            =*/
/*=                                            =*/
/*==============================================*/
ПРОЦ ДоОтмены2мин{
 ЦЕЛ  ЛП_СчетчикСекунд ДЛЯ ПРОЦ ОТСЧЕТ_ДВУХ_МИНУТ;

 СОСТ Начало {
    ЛП_СчетчикСекунд = ДВЕ_МИНУТЫ;
    СТАРТ ПРОЦ ОТСЧЕТ_ДВУХ_МИНУТ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ НачалоСчета{
    ЕСЛИ ((ПРОЦ РежимОТМЕНА В СОСТ АКТИВНОЕ) ||
          (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ)))  СТОП;
    ИНАЧЕ {
         ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ДО_ОТМЕНЫ_СЕКУНД, ЛП_СчетчикСекунд))
              В СОСТ Пауза_Секунда;
         ЕСЛИ (!(ПРОЦ ОТСЧЕТ_ДВУХ_МИНУТ В СОСТ АКТИВНОЕ)) В СОСТ ЗапускОтмена;
    }
 }
 СОСТ СчетСекунд {
    ЕСЛИ (!(ПРОЦ ОТСЧЕТ_ДВУХ_МИНУТ В СОСТ АКТИВНОЕ)) В СОСТ ЗапускОтмена;
    ИНАЧЕ {
         SendMsgLongParamPIV(ПК_ПИВ_ДО_ОТМЕНЫ_ОСТАЛОСЬ_СЕКУНД,
                           ЛП_СчетчикСекунд);
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ Пауза_Секунда{
    ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ СчетСекунд;
 }
 СОСТ ЗапускОтмена{
    ЕСЛИ (!ПРОЦ РежимОТМЕНА В СОСТ АКТИВНОЕ) СТАРТ ПРОЦ РежимОТМЕНА;
    СТОП;
 }
}

/*==============================================*/
/*=                                            =*/
/*=          ОТСЧЕТ ДВУХ МИНУТ                 =*/
/*=           643.АЭ1610.10000 Д2.6            =*/
/*=                                            =*/
/*==============================================*/
ПРОЦ ОТСЧЕТ_ДВУХ_МИНУТ{
ИЗ ПРОЦ ДоОтмены2мин ЛП_СчетчикСекунд;
 СОСТ Начало {
    ЛП_СчетчикСекунд--;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Конец;
 }
 СОСТ Конец{
    СТОП;
 }
}

/*==============================================*/
/*=                                            =*/
/*=              ОТМЕНА_ПО_КНОПКЕ              =*/
/*=           643.АЭ1610.10000 Д2.6            =*/
/*=                                            =*/
/*==============================================*/
ПРОЦ КонтрольОтменыПоКнопке{
ИЗ ПРОЦ Инициализация           К_ОТМЕНА;

 СОСТ Начало{
    ЕСЛИ (К_ОТМЕНА) В СЛЕДУЮЩЕЕ;
 }

 СОСТ ЗапускОтмены{
    ЕСЛИ (!(ПРОЦ РежимОТМЕНА В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ РежимОТМЕНА;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НАЖАТА_КНОПКА_ОТМЕНА)) {
          В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольОтпуканияКнопки;
 }
 СОСТ КонтрольОтпуканияКнопки{
    ЕСЛИ (!К_ОТМЕНА) В СОСТ Начало;
 }
}

/*================================================*/
/*=          ПЕРЕХОД В РЕЖИМ РР                 ==*/
/*=           643.АЭ1610.10000 Д2               ==*/
/*================================================*/
/*  Переход в РР                                  */
/* выключает требуемые процессы и переходит в РР  */
ПРОЦ Переход_вРР{
ИЗ ПРОЦ Инициализация ТекущийЭтап;
ИЗ ПРОЦ Инициализация ЗД_База_РЕГ_РОСТА, 
        ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее;
СОСТ ПроверкаОкончанияПроцессовИОстанов{
    ЗД_База_РЕГ_РОСТА = 0.0;                 /* Зюбин добавитьдобавлено 23.12.2005 */
    ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее = 0.0;
         /* ОСТАНОВ ТРЕБУЕМЫХ (макропроцессы режима РА)*/
    ОШИБКА ПРОЦ ИсполнениеКомандыРА;
    ОШИБКА ПРОЦ РА_КонтрольИсходногоПоложения;
    ОШИБКА ПРОЦ РА_КонтрольноеВакуумирование;
    ОШИБКА ПРОЦ РА_КонтрольНатекания;
    ОШИБКА ПРОЦ РА_РабочееВакуумирование;
    ОШИБКА ПРОЦ РА_ПодготовкаПлавлениюЗагрузки;
    ОШИБКА ПРОЦ РА_ТП_ПлавлениеЗагрузки;
    ОШИБКА ПРОЦ КонтрольПоявленияРасплава;
    ОШИБКА ПРОЦ РА_ПодготовкаСтабилизацииРасплава;
    ОШИБКА ПРОЦ РА_СтабилизацияРасплава;
    ОШИБКА ПРОЦ КонтрольСтабилизацииРасплава; /* добавитьдобавлено */
    ОШИБКА ПРОЦ КонтрольРасплавления; /* добавить */
    ОШИБКА ПРОЦ РА_ПодготовкаПрогреваЗатравки;
    ОШИБКА ПРОЦ РА_ТП_ПрогревЗатравки;
    ОШИБКА ПРОЦ РА_Затравливание;
    ОШИБКА ПРОЦ КонтрольДендритов;
    ОШИБКА ПРОЦ РА_ТП_ВыращиваниеПереходаЗатравкаШейка;
    ОШИБКА ПРОЦ РА_ВыращиваниеШейки;
    ОШИБКА ПРОЦ УпреждениеОтрываШейки;
    ОШИБКА ПРОЦ ПредупреждениеОмаломDкр;
    ОШИБКА ПРОЦ ПрограммныйСбросТемпературы; /* - Зюбин*/
	ОШИБКА ПРОЦ РА_ТП_ВыращиваниеПереходаШейкаКонус;
    ОШИБКА ПРОЦ РА_ВыращиваниеКонуса;
    ОШИБКА ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр;
    ОШИБКА ПРОЦ РА_СтабилизацияЦилиндра;
    ОШИБКА ПРОЦ КонтрольОкончанияЦилиндра;
    ОШИБКА ПРОЦ РА_ТП_ВыращиваниеЦилиндра;
    ОШИБКА ПРОЦ РА_ТП_ВыращиваниеПереходаЦилиндрОбратныйКонус;
    ОШИБКА ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса;
    ОШИБКА ПРОЦ ЗАТ_РС_ОК;
    ОШИБКА ПРОЦ РА_ОтрывКристалла;
    ОШИБКА ПРОЦ ВР_ТИГ_ОТРЫВ_КРИСТАЛЛА;
    ОШИБКА ПРОЦ КонтрольОтрыва_ОтрывКристалла;
    ОШИБКА ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА;
    ОШИБКА ПРОЦ РА_ТП_ОхлаждениеКристалла;
    ОШИБКА ПРОЦ РА_ПодготовкаРазгрузкеКристалла;

   /* останов "режимных процессов" */
     ОШИБКА ПРОЦ РежимРА;
     ОШИБКА ПРОЦ РежимКРП;
     ОШИБКА ПРОЦ КРП;
     ОШИБКА ПРОЦ РежимОТЖИГ; /*добавлено */
     ОШИБКА ПРОЦ ОтжигТепловогоУзла; /*добавлено*/
     ОШИБКА ПРОЦ РежимДВК;                      /*добавить*/
     ОШИБКА ПРОЦ ДВК_ВыращиваниеОбратногоКонуса; /*добавить*/

         /* ОСТАНОВ ВСПОМОГАТЕЛЬНЫХ ПРОЦЕССОВ добавитьдобавлено - Зюбин*/
     ОШИБКА ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Шейка;
     ОШИБКА ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Цилиндр;

     СТАРТ ПРОЦ ВКЛ_ВПО;
     СТАРТ ПРОЦ РежимРР;


        /*=========== останов процессов  РА режима =======*/
        /* ОШИБКА ПРОЦ ИсполнениеКомандыРА; */

     ЕСЛИ (ТекущийЭтап >= ЭТАП_ОТЖИГ_ТЕПЛОВОГО_УЗЛА)
          ТекущийЭтап = ЭТАП_ОТЖИГ_ТЕПЛОВОГО_УЗЛА; /* добавлено */

     В СОСТ ПроверкаКонцаРОст;
 }

 СОСТ ПроверкаКонцаРОст{
      СТОП;
 }
}

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*=                 КОНЕЦ РАБОТЫ               =*/
/*=            643.АЭ1610.10000 Д2.7           =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/
ПРОЦ КонецРаботы{
 ИЗ ПРОЦ Инициализация ТекущийРежим;

 СОСТ Начало{
    ТекущийРежим = РЕЖИМ_КОНЕЦ_РАБОТЫ;
    СТАРТ ПРОЦ ВЫК_ИПН;
    СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
    СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
    СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
    СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
/*  СТАРТ ПРОЦ ЗАТ_КВП;
    СТАРТ ПРОЦ ТИГ_КНП;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ВПО;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ДУ;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ТДД;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ДТН;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ДТР;
    СТАРТ ПРОЦ КОНЕЦ_РАБОТЫ_ИП;
*/
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаПриходаВИсходное{
    ЕСЛИ (
          !(ПРОЦ ВЫК_ИПН     В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВЫК_ЗАТ_ВР  В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВЫК_ТИГ_ВР  В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВЫК_ТИГЕЛЬ   В СОСТ АКТИВНОЕ)
          ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Выключение24_48В{
/* !!!!!!!!
    СТАРТ ПРОЦ ВыключениеПитания24_48В;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеВыключения{
    ЕСЛИ (ПРОЦ ВыключениеПитания24_48В В СОСТ СТОП) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеПИВ{

 !!!!!!!! */


     ЕСЛИ (SendMsgPIVCode(КОНЕЦ_РАБОТЫ_Д2))
       В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Конец;
 }
 СОСТ ТаймаутДляНадежностиДоставкиСообщенияВПИВ{
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Конец;
 }
 СОСТ Конец{
    Shutdown();
    СТОП;
 }
} /*============= Конец процесса КонецРаботы ========*/

/*===================================================*/
/*==                                               ==*/
/*==  ПРОЦЕСС ИЗМЕНЕНИЯ ТЕХНОЛОГИЧЕСКИХ КОНСТАНТ   ==*/
/*==                                               ==*/
/*==  643.АЭ1610.10000  Д2                         ==*/
/*===================================================*/
ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ{
ИЗ ПРОЦ Инициализация ТК_МначальнойЗагрузки,

                      ТК_ГлубокийВакуум_Р2,
/* Контрольное    */  ТК_TоткачкиДопустимое_Т2доP2,
/* вакуумирование */  ТК_ВремяОткачкиПослеОсушки_Т5,
                      ТК_ВремяОткачкиДопустимое_Т7,
                      ТК_ЧислоЦикловОсушки_Nц,
                      ТК_ВремяПродувки_Т3,
                      ТК_ТоткачкиАргона_Т4,

                      ТК_ПределДопРнкПослеКонтроляНатек_Р3,

/* Контроль      */   ТК_Тотгазовки_КонтрНат,
/* натекания     */   ТК_ПериодКонтроля_КонтрНат,
                      ТК_ДопустимоеНатекание_КнтрНат,

/* Подготовка к  */   ТК_Qгаза_ПодгСтабРаспл,
/* стаб.расплава */   ТК_Pнк_ПодгСтабРаспл  ,
                      ТК_Hур_ПодгСтабРаспл,



                      ТК_ЗД_Qгаза_ППЗ,
                      ТК_ЗД_Pнк_ППЗ,
                      ТК_ЗД_Wипн_К1_ППЗ,
                      ТК_ЗД_Wипн_К2_ППЗ,
                      ТК_ЗД_Тр_ППЗ,
                      ТК_ЗД_Vроста_ППЗ,
                      ТК_ЗД_Hур_ППЗ,
                      ТК_ЗД_Dкр_ППЗ,
                      ТК_ЗД_VзР_ППЗ,
                      ТК_ЗД_VзУ_ППЗ,
                      ТК_ЗД_Xз_ППЗ,
                      ТК_ЗД_Wз_ППЗ,
                      ТК_ЗД_Wз_УГОЛ_ППЗ,
                      ТК_ЗД_VтР_ППЗ,
                      ТК_ЗД_VтУ_ППЗ,
                      ТК_ЗД_Xт_ППЗ,
                      ТК_ЗД_Wт_ППЗ,
                      ТК_ЗД_Wт_УГОЛ_ППЗ,

                      ТК_Режим_СтабРаспл,
/* Стабилизация  */   ТК_Время_СтабРаспл,
                      ТК_Wт_ПодгСтабРаспл,
/*   расплава    */   ТК_Wипн_К1_ПодгСтабРаспл,
                      ТК_Тр_СтабРаспл,
                      ТК_ТнОж_СтабРасп,
                      ТК_ВремяОсред_Тн_СтабРаспл,

/* Перемещ.зат.в */   ТК_РасстояниеДоРасплава_Lпп,
/* положение прг */   ТК_VзДвижения_кРасплаву_Vпп,

                      ТК_Wз_Затравл,
                      ТК_Vз_Погружения_Затравл,
                      ТК_Wт_Затравл,
                      ТК_Dмин_Затравл,
                      ТК_Dмакс_Затравл,
                      ТК_ТcлепогоПлавления_Затравл,
/*  Затравление  */   ТК_ТожиданияДиаметра_Затравл,
                      ТК_Hур_Затравл,
                      ТК_Тн_Затравл,
                      ТК_Pнк_Затравл,
                      ТК_Qгаза_Затравл,
                      ТК_Hпогр_Затравл,
                      ТК_VзВытягивания_Затравл,
                      ТК_ДиаметрДендрита,

                      ТК_Ки_Dкр_Шейка,
                      ТК_Кд_Dкр_Шейка,
                      ТК_Кп_Dкр_Шейка,
                      ТК_Кз_Dкр_Шейка,
                      ТК_Пауза_Dкр_Шейка,
                      ТК_VслепогоВыращивания_Шейка,
                      ТК_ПоправкаТн_Шейка,
                      ТК_ТcлепогоВыращивания_Шейка,
/* Выращивание   */   ТК_DкрОжидаемый_Шейка,
/*    шейки      */   ТК_Попр_кТн_поDкро_Шейка,
                      ТК_ЗД_Dкр_Шейка,
                      ТК_Ки_Vроста_Шейка,
                      ТК_Кд_Vроста_Шейка,
                      ТК_Кп_Vроста_Шейка,
                      ТК_Кз_Vроста_Шейка,
                      ТК_Пауза_Vроста_Шейка,
                      ТК_ЗД_Vроста_Шейка,
                      ТК_Dкр_НачалаСчетаДлины_Шейка,
                      ТК_DкрОтбраковки_Шейка,
                      ТК_ДлинаХорошейЧасти_Шейка,
 		      ТК_VпониженияТемпературы_Шейка,

                      ТК_БезопасныйDкр_Шейка,
/* Упреждение от-*/   ТК_VзБезопасноеСреднее,
/* рыва шейки    */   ТК_VзБезопасное_Шейка,
                      ТК_ТбезопаснойСкорости_Шейка,
                      ТК_ТстабилизацииDкр_Шейка,
                      ТК_ВерхнийПорогПодрезкиDкр_Шейка,

                      ТК_ПоправкаТн_Конус,
                      ТК_Vз_Конус,
/* Выращивание   */   ТК_DконусаКонечный_Конус,
/*   конуса      */   ТК_К1_Конуса,
                      ТК_К2_Конуса,

                      ТК_Ки_Dкр_СтабЦил,
                      ТК_Кп_Dкр_СтабЦил,
/* Переход конус-*/   ТК_Кд_Dкр_СтабЦил,
/*   цилиндр     */   ТК_Кз_Dкр_СтабЦил,
                      ТК_Пауза_Dкр_СтабЦил,
                      ТК_ВремяПереходаКонусЦилиндр,

                      ТК_DкрЦилиндра_КонЦил,
                      ТК_К1_КонЦил,                    
                      ТК_К2_КонЦил,                    
                      ТК_VразращиванияГр_КонЦил,       


/* Стабилизация  */   ТК_ПоправкаТн_СтабЦил,
/*   цилиндра    */   ТК_VзСтабНачальная_СтабЦил,
                      ТК_ВремяСтабЦил,

                      ТК_Ки_Dкр_Цилиндр,
                      ТК_Кп_Dкр_Цилиндр,
                      ТК_Кд_Dкр_Цилиндр,
                      ТК_Кз_Dкр_Цилиндр,
                      ТК_Пауза_Dкр_Цилиндр,

                      ТК_Кп_Vроста_Цилиндр   ,
                      ТК_Ки_Vроста_Цилиндр   ,
                      ТК_Кд_Vроста_Цилиндр   ,
                      ТК_Кз_Vроста_Цилиндр   ,
                      ТК_Пауза_Vроста_Цилиндр,

		      ТК_ВерхнийПорогПодрезкиDкр_Цилиндр,
		      ТК_VзБезопасное_Цилиндр,
                      ТК_РЕЗЕРВ_1,
                      ТК_РЕЗЕРВ_2,
                      ТК_РЕЗЕРВ_3,
                      ТК_РЕЗЕРВ_4,
                      ТК_РЕЗЕРВ_5,


/* Контроль окон-*/   ТК_ПороговаяLкр_Цилиндр,
/* чания цилиндра*/   ТК_Загрузки,
                      ТК_ПороговаяМрасплава_Цилиндр,

                      ТК_Нормирование_Времени,
                      ТК_ВремяИзменения_V_Диаметра,
                      ТК_КоррекцииСкорости,
                      ТК_АварийнаяСкоростьПодрезки,
                      ТК_СлабаяПодрезка,
                      ТК_СильнаяПодрезка,
                      ТК_ДлинаПереходаЦилиндрКонус,
                      ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА,
                      ТК_УскорениеПриОтрывеКристалла,
                      ТК_VзПослеОтрываКристалла,


                      КодСобытия_к_ПИВ,
                      КодСобытия_от_ПИВ;         /*  */
/*изменение ТК газовакуумной системы  */


 СОСТ Анализ{
    РАЗБОР (КодСобытия_от_ПИВ) {
       СЛУЧАЙ ИЗМН_ТК_МначальнойЗагрузки:
          ТК_МначальнойЗагрузки = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_МначальнойЗагрузки;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ГлубокийВакуум_Р2:
          ТК_ГлубокийВакуум_Р2 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ГлубокийВакуум_Р2;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_TоткачкиДопустимое_Т2доP2:
          ТК_TоткачкиДопустимое_Т2доP2 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_TоткачкиДопустимое_Т2доP2;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяОткачкиПослеОсушки_Т5:
          ТК_ВремяОткачкиПослеОсушки_Т5 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяОткачкиПослеОсушки_Т5;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяОткачкиДопустимое_Т7:
          ТК_ВремяОткачкиДопустимое_Т7 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяОткачкиДопустимое_Т7;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ЧислоЦикловОсушки_Nц:
          ТК_ЧислоЦикловОсушки_Nц = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЧислоЦикловОсушки_Nц;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяПродувки_Т3:
          ТК_ВремяПродувки_Т3 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяПродувки_Т3;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТоткачкиАргона_Т4:
          ТК_ТоткачкиАргона_Т4  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТоткачкиАргона_Т4;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ПределДопРнкПослеКонтроляНатек_Р3:
          ТК_ПределДопРнкПослеКонтроляНатек_Р3  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПределДопРнкПослеКонтроляНатек_Р3;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Контроль натекания  */
       СЛУЧАЙ ИЗМН_ТК_Тотгазовки_КонтрНат:
          ТК_Тотгазовки_КонтрНат  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Тотгазовки_КонтрНат;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ПериодКонтроля_КонтрНат:
          ТК_ПериодКонтроля_КонтрНат  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПериодКонтроля_КонтрНат;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ДопустимоеНатекание_КнтрНат:
          ТК_ДопустимоеНатекание_КнтрНат  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ДопустимоеНатекание_КнтрНат;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Подготовка к плавлению загрузки  */

       СЛУЧАЙ ИЗМН_ТК_ЗД_Qгаза_ППЗ:                   /* ------ */
          ТК_ЗД_Qгаза_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Qгаза_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Pнк_ППЗ:
          ТК_ЗД_Pнк_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Pнк_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wипн_К1_ППЗ:
          ТК_ЗД_Wипн_К1_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wипн_К1_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wипн_К2_ППЗ:
          ТК_ЗД_Wипн_К2_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wипн_К2_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Тр_ППЗ:
          ТК_ЗД_Тр_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Тр_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Vроста_ППЗ:
          ТК_ЗД_Vроста_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Vроста_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Hур_ППЗ:
          ТК_ЗД_Hур_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Hур_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Dкр_ППЗ:
          ТК_ЗД_Dкр_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Dкр_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_VзР_ППЗ:
          ТК_ЗД_VзР_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_VзР_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_VзУ_ППЗ:
          ТК_ЗД_VзУ_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_VзУ_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Xз_ППЗ:
          ТК_ЗД_Xз_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Xз_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wз_ППЗ:
          ТК_ЗД_Wз_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wз_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wз_УГОЛ_ППЗ:
          ТК_ЗД_Wз_УГОЛ_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wз_УГОЛ_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_VтР_ППЗ:
          ТК_ЗД_VтР_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_VтР_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_VтУ_ППЗ:
          ТК_ЗД_VтУ_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_VтУ_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Xт_ППЗ:
          ТК_ЗД_Xт_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Xт_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wт_ППЗ:
          ТК_ЗД_Wт_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wт_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ЗД_Wт_УГОЛ_ППЗ:                     /*------*/
          ТК_ЗД_Wт_УГОЛ_ППЗ  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Wт_УГОЛ_ППЗ;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;


/*изменение ТК проц Подготовка к стабилизации расплава  */

       СЛУЧАЙ ИЗМН_ТК_Qгаза_ПодгСтабРаспл:
          ТК_Qгаза_ПодгСтабРаспл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Qгаза_ПодгСтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Pнк_ПодгСтабРаспл:
          ТК_Pнк_ПодгСтабРаспл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Pнк_ПодгСтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Hур_ПодгСтабРаспл:
          ТК_Hур_ПодгСтабРаспл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Hур_ПодгСтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;



/*изменение ТК проц Стабилизацзация расплава  */
       СЛУЧАЙ ИЗМН_ТК_Режим_СтабРаспл:
          ТК_Режим_СтабРаспл = (ЦЕЛ)GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Режим_СтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Время_СтабРаспл:
          ТК_Время_СтабРаспл  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Время_СтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Wт_ПодгСтабРаспл:
          ТК_Wт_ПодгСтабРаспл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Wт_ПодгСтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Wипн_К1_ПодгСтабРаспл:
          ТК_Wипн_К1_ПодгСтабРаспл  = GetFloatParamPIV()*1000.0;
          КодСобытия_к_ПИВ = ИЗМН_ТК_Wипн_К1_ПодгСтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Тр_СтабРаспл:
          ТК_Тр_СтабРаспл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Тр_СтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТнОж_СтабРасп:
          ТК_ТнОж_СтабРасп  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТнОж_СтабРасп;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяОсред_Тн_СтабРаспл:
          ТК_ВремяОсред_Тн_СтабРаспл  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяОсред_Тн_СтабРаспл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Перемещение затравки в положение прогрева */
       СЛУЧАЙ ИЗМН_ТК_РасстояниеДоРасплава_Lпп:
          ТК_РасстояниеДоРасплава_Lпп  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РасстояниеДоРасплава_Lпп;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзДвижения_кРасплаву_Vпп:
          ТК_VзДвижения_кРасплаву_Vпп  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзДвижения_кРасплаву_Vпп;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Затравление */
       СЛУЧАЙ ИЗМН_ТК_Wз_Затравл:
          ТК_Wз_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Wз_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Vз_Погружения_Затравл:
          ТК_Vз_Погружения_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Vз_Погружения_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Wт_Затравл:
          ТК_Wт_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Wт_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Dмин_Затравл:
          ТК_Dмин_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Dмин_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Dмакс_Затравл:
          ТК_Dмакс_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Dмакс_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ТcлепогоПлавления_Затравл:
          ТК_ТcлепогоПлавления_Затравл  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТcлепогоПлавления_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТожиданияДиаметра_Затравл:
          ТК_ТожиданияДиаметра_Затравл  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТожиданияДиаметра_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Hур_Затравл:
          ТК_Hур_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Hур_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Тн_Затравл:
          ТК_Тн_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Тн_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Pнк_Затравл:
          ТК_Pнк_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Pнк_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Qгаза_Затравл:
          ТК_Qгаза_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Qгаза_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Hпогр_Затравл:
          ТК_Hпогр_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Hпогр_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзВытягивания_Затравл:
          ТК_VзВытягивания_Затравл  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзВытягивания_Затравл;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ДиаметрДендрита:
          ТК_ДиаметрДендрита  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ДиаметрДендрита;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Выращивание шейки */
       СЛУЧАЙ ИЗМН_ТК_Ки_Dкр_Шейка:
          ТК_Ки_Dкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Ки_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кд_Dкр_Шейка:
          ТК_Кд_Dкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кд_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кп_Dкр_Шейка:
          ТК_Кп_Dкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кп_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кз_Dкр_Шейка:
          ТК_Кз_Dкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кз_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Пауза_Dкр_Шейка:
          ТК_Пауза_Dкр_Шейка  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Пауза_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VслепогоВыращивания_Шейка:
          ТК_VслепогоВыращивания_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VслепогоВыращивания_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ПоправкаТн_Шейка:
          ТК_ПоправкаТн_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПоправкаТн_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТcлепогоВыращивания_Шейка:
          ТК_ТcлепогоВыращивания_Шейка  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТcлепогоВыращивания_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_DкрОжидаемый_Шейка:
          ТК_DкрОжидаемый_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_DкрОжидаемый_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Попр_кТн_поDкро_Шейка:
          ТК_Попр_кТн_поDкро_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Попр_кТн_поDкро_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ЗД_Dкр_Шейка:
          ТК_ЗД_Dкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Dкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Ки_Vроста_Шейка:
          ТК_Ки_Vроста_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Ки_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кд_Vроста_Шейка:
          ТК_Кд_Vроста_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кд_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кп_Vроста_Шейка:
          ТК_Кп_Vроста_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кп_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кз_Vроста_Шейка:
          ТК_Кз_Vроста_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кз_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Пауза_Vроста_Шейка:
          ТК_Пауза_Vроста_Шейка  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Пауза_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ЗД_Vроста_Шейка:
          ТК_ЗД_Vроста_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ЗД_Vроста_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Dкр_НачалаСчетаДлины_Шейка:
          ТК_Dкр_НачалаСчетаДлины_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Dкр_НачалаСчетаДлины_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_DкрОтбраковки_Шейка:
          ТК_DкрОтбраковки_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_DкрОтбраковки_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ДлинаХорошейЧасти_Шейка:
          ТК_ДлинаХорошейЧасти_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ДлинаХорошейЧасти_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_VпониженияТемпературы_Шейка:
          ТК_VпониженияТемпературы_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VпониженияТемпературы_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

/*изменение ТК проц Упреждение отрыва шейки */
       СЛУЧАЙ ИЗМН_ТК_БезопасныйDкр_Шейка:
          ТК_БезопасныйDкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_БезопасныйDкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзБезопасноеСреднее:
          ТК_VзБезопасноеСреднее  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзБезопасноеСреднее;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзБезопасное_Шейка:
          ТК_VзБезопасное_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзБезопасное_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТбезопаснойСкорости_Шейка:
          ТК_ТбезопаснойСкорости_Шейка  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТбезопаснойСкорости_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ТстабилизацииDкр_Шейка:
          ТК_ТстабилизацииDкр_Шейка  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ТстабилизацииDкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Шейка:
          ТК_ВерхнийПорогПодрезкиDкр_Шейка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Шейка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

/*изменение ТК проц Выращивание конуса */
       СЛУЧАЙ ИЗМН_ТК_ПоправкаТн_Конус:
          ТК_ПоправкаТн_Конус  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПоправкаТн_Конус;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Vз_Конус:
          ТК_Vз_Конус  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Vз_Конус;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_DконусаКонечный_Конус:
          ТК_DконусаКонечный_Конус  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_DконусаКонечный_Конус;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_К1_Конуса:
          ТК_К1_Конуса  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_К1_Конуса;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_К2_Конуса:
          ТК_К2_Конуса  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_К2_Конуса;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Переход конус цилиндр */
       СЛУЧАЙ ИЗМН_ТК_Ки_Dкр_СтабЦил:
          ТК_Ки_Dкр_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Ки_Dкр_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кп_Dкр_СтабЦил:
          ТК_Кп_Dкр_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кп_Dкр_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кд_Dкр_СтабЦил:
          ТК_Кд_Dкр_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кд_Dкр_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кз_Dкр_СтабЦил:
          ТК_Кз_Dкр_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кз_Dкр_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Пауза_Dкр_СтабЦил:
          ТК_Пауза_Dкр_СтабЦил  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Пауза_Dкр_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяПереходаКонусЦилиндр:
          ТК_ВремяПереходаКонусЦилиндр  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяПереходаКонусЦилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_DкрЦилиндра_КонЦил:
          ТК_DкрЦилиндра_КонЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_DкрЦилиндра_КонЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_К1_КонЦил:
          ТК_К1_КонЦил = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_К1_КонЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_К2_КонЦил:
          ТК_К2_КонЦил = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_К2_КонЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VразращиванияГр_КонЦил:
          ТК_VразращиванияГр_КонЦил = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VразращиванияГр_КонЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

/*изменение ТК проц Стабилизация цилиндра */
       СЛУЧАЙ ИЗМН_ТК_ПоправкаТн_СтабЦил:
          ТК_ПоправкаТн_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПоправкаТн_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзСтабНачальная_СтабЦил:
          ТК_VзСтабНачальная_СтабЦил  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзСтабНачальная_СтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяСтабЦил:
          ТК_ВремяСтабЦил  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяСтабЦил;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Ки_Dкр_Цилиндр:
          ТК_Ки_Dкр_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Ки_Dкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кп_Dкр_Цилиндр:
          ТК_Кп_Dкр_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кп_Dкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кд_Dкр_Цилиндр:
          ТК_Кд_Dкр_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кд_Dкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Кз_Dкр_Цилиндр:
          ТК_Кз_Dкр_Цилиндр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кз_Dкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Пауза_Dкр_Цилиндр:
          ТК_Пауза_Dкр_Цилиндр  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Пауза_Dкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_Кп_Vроста_Цилиндр: 
          ТК_Кп_Vроста_Цилиндр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кп_Vроста_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Ки_Vроста_Цилиндр:
          ТК_Ки_Vроста_Цилиндр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Ки_Vроста_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кд_Vроста_Цилиндр:
          ТК_Кд_Vроста_Цилиндр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кд_Vроста_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Кз_Vроста_Цилиндр:
          ТК_Кз_Vроста_Цилиндр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Кз_Vроста_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Пауза_Vроста_Цилиндр:
          ТК_Пауза_Vроста_Цилиндр  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Пауза_Vроста_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Цилиндр:
          ТК_ВерхнийПорогПодрезкиDкр_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВерхнийПорогПодрезкиDкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзБезопасное_Цилиндр:
          ТК_VзБезопасное_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзБезопасное_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_РЕЗЕРВ_1:
          ТК_РЕЗЕРВ_1  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РЕЗЕРВ_1;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_РЕЗЕРВ_2:
          ТК_РЕЗЕРВ_2  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РЕЗЕРВ_2;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_РЕЗЕРВ_3:
          ТК_РЕЗЕРВ_3  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РЕЗЕРВ_3;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_РЕЗЕРВ_4:
          ТК_РЕЗЕРВ_4  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РЕЗЕРВ_4;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_РЕЗЕРВ_5:
          ТК_РЕЗЕРВ_5  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_РЕЗЕРВ_5;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

/*изменение ТК проц Контроль окончания цилиндра */
       СЛУЧАЙ ИЗМН_ТК_ПороговаяLкр_Цилиндр:
          ТК_ПороговаяLкр_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПороговаяLкр_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_Загрузки:
          ТК_Загрузки  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Загрузки;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ПороговаяМрасплава_Цилиндр:
          ТК_ПороговаяМрасплава_Цилиндр  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ПороговаяМрасплава_Цилиндр;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц ЗАТ_РС_ОК */
       СЛУЧАЙ ИЗМН_ТК_Нормирование_Времени:
          ТК_Нормирование_Времени  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_Нормирование_Времени;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ВремяИзменения_V_Диаметра:
          ТК_ВремяИзменения_V_Диаметра  = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ВремяИзменения_V_Диаметра;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_КоррекцииСкорости:
          ТК_КоррекцииСкорости  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_КоррекцииСкорости;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_АварийнаяСкоростьПодрезки:
          ТК_АварийнаяСкоростьПодрезки  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_АварийнаяСкоростьПодрезки;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_СлабаяПодрезка:
          ТК_СлабаяПодрезка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_СлабаяПодрезка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_СильнаяПодрезка:
          ТК_СильнаяПодрезка  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_СильнаяПодрезка;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_ДлинаПереходаЦилиндрКонус:
          ТК_ДлинаПереходаЦилиндрКонус  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ДлинаПереходаЦилиндрКонус;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
/*изменение ТК проц Отрыв кристалла */
       СЛУЧАЙ ИЗМН_ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА:
          ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_УскорениеПриОтрывеКристалла:
          ТК_УскорениеПриОтрывеКристалла  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_УскорениеПриОтрывеКристалла;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТК_VзПослеОтрываКристалла:
          ТК_VзПослеОтрываКристалла = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ТК_VзПослеОтрываКристалла;
          В СОСТ ПодтверждениеИзмененияТК;
          КОНЕЦ;

/*-----------------------*/
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }

 СОСТ ПодтверждениеИзмененияТК{
 	 ЕСЛИ (SendMsgLongParamPIV(КодСобытия_к_ПИВ, GetLongParamPIV())) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаКомандИзмененияТК_от_ПИВ    */

/*===================================================*/
/*==                                               ==*/
/*==  ПРОЦЕСС ИЗМЕНЕНИЯ НАСТРОЕЧНЫХ ПАРАМЕТРОВ     ==*/
/*==                                               ==*/
/*==  643.АЭ1610.10000  Д2                         ==*/
/*===================================================*/
ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ{
ИЗ ПРОЦ Инициализация
                НП_ФлагРасчетаHур_поДУ,
                НП_ФлагРасчетаHур_поДВ,
                НП_ФлагРасчетаDкр_поТДД,
                НП_ФлагРасчетаDкр_поДВ,
                НП_Тизмерения_Dкр_ДВ,
                НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1,
                НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                НП_Lз_ОТ_КВП_ДО_КНП,
                НП_Кдв,
                НП_Мзатравкодержателя,
                ОП_Мзатравки,
                НП_Мтроса,

                ОП_Lсумм_Цилиндров,    
                ОП_Тсумм_Цилиндров,
                ОП_Мсумм_Цилиндров,    

                НП_МаксимальнаяVзР,
                НП_Lз_ОТ_КВП_ДО_ДП_Lппз,
                НП_Lт_ОТ_КНП_ДО_КВП,
                НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,
                НП_ОбъемВакПолости_V,
                      НП_ДавлениеВключенияДВН_P1,
                      НП_КонтрольноеВремяДостиженияP1_Т1,
                      НП_Pатмосф,
                НП_ВремяПереходногоПроцессаQгаза,
                НП_ПогрешностьQгаза,
                НП_Pпор,
                НП_КОЭФ_НА_ОТКР,
                НП_КОЭФ_НА_ЗАКР,
                НП_ВремяПереходногоПроцессаPнк,
                ОП_ПогрешностьPнк,
/* ИП_ЛИТ */
                НП_ТокЗащитыМодуля_ИП2К_К1,
                НП_СкоростьИзменения_W_ИП2К_К1,
                НП_МинимальноеКоличествоМодулей_ИП2К_К1,
                НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                НП_УставкаПотокаОхлЖидкости_ИП2К_К1,
                НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1,
                НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1,
                НП_НижняяГраницаRиз_ИП2К_К1,
                НП_НижняяГраницаRн_ИП2К_К1,
                НП_ВерхняяГраницаRн_ИП2К_К1,

                Флаг_НаличияМодуля0_ИП2К_К1,
                Флаг_НаличияМодуля1_ИП2К_К1,
                Флаг_НаличияМодуля2_ИП2К_К1,
                Флаг_НаличияМодуля3_ИП2К_К1,
                Флаг_НаличияМодуля4_ИП2К_К1,
                Флаг_НаличияМодуля5_ИП2К_К1,
 
                НП_ВремяПереходногоПроцессаWптд,
                НП_Кп_Wптд,
                НП_ТипИПН,
                НП_Пауза_Wптд,
                НП_ПогрешностьWипн_К1,
                НП_Iптд_МАХ,
                НП_Wипн_К1_МАХ,
                НП_ДелтаW_Разогрева,
                НП_ДелтаВремениРазогрева,
                НП_Тн_MAX,
                НП_Кп_Тн,
                НП_Кд_Тн,
                НП_Ки_Тн,
                НП_Кз_Тн,
                НП_ВремяПереходногоПроцессаТн,
                НП_ПогрешностьТн,
                НП_Пауза_Тн,
                НП_Кп_Тр,
                НП_Кд_Тр,
                НП_Ки_Тр,
                НП_Кз_Тр,
                НП_Пауза_Тр,
                НП_Тр_MAX,
                НП_ВремяПереходногоПроцессаТр,
                НП_ПогрешностьТр,
                НП_ДелтаТр_MAX,
                НП_ПоправкаVтР_Нур,

                НП_THRESH_ДУ,
                 НП_DRELQ_ДУ,

                 НП_THRESH_GIST_ДУ,
                 НП_MAX_SIGNAL_VALUE_ДУ,
                 НП_T_MAX_ДУ,
                 НП_H_MAX_ДУ,
                 НП_H_MIN_ДУ,
                 НП_WIDTH_PEAK_MAX_ДУ,
                 НП_ADAPT_LENGTH_ДУ,
                 НП_KOL_KALIBR_ДУ,
                 НП_NLINE1_ДУ,
                 НП_NLINE2_ДУ,
                НП_AH_ДУ,
                НП_BH_ДУ,
                НП_CH_ДУ,
                НП_RELATIV_QUALITY_ДУ,
                НП_MIN_SIGN_RANGE_ДУ,
                НП_MIDDLE_ДУ,
                НП_MIDDLE_SIGN_ДУ,
                НП_BAD_NUMB_ДУ,
                НП_CORRECT_LEVEL_LASER_1_ДУ,
                НП_EXPOSURE_TIME0_ДУ,
                НП_EXPOSURE_TIME1_ДУ,

                НП_XTOLER,
                НП_YTOLER,
                НП_YDOWNTOLER,
                НП_NUMOFSTR,
                НП_THRRELIAB,
                НП_THRDERIV,
                НП_THRDERIVCLB,
                НП_BIGZERO_LVL,
                НП_BIGPLUS_LVL,
                НП_SMALLZERO_LVL,
                НП_SMALLPLUS_LVL,

                НП_MINAVERTIME,

                НП_BIGZERO_CTG,  /* при изменении от пива ТДД */
                НП_BIGZERO_KY,
                НП_BIGZERO_X,
                НП_BIGZERO_TG,
                НП_BIGPLUS_CTG,
                НП_BIGPLUS_KY,
                НП_BIGPLUS_X,
                НП_BIGPLUS_TG,
                НП_SMALLZERO_CTG,  /* при изменении от пива ТДД */
                НП_SMALLZERO_KY,
                НП_SMALLZERO_X,
                НП_SMALLZERO_TG,
                НП_SMALLPLUS_CTG,
                НП_SMALLPLUS_KY,
                НП_SMALLPLUS_X,
                НП_SMALLPLUS_TG,
	        НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР,
  	        НП_ПОПРАВКА_К_ТДД_ШЕЙКА,
                ФП_Dкр_ТДД,

                НП_Тсм_ДТН,
                НП_Тсм_ДТР,
                НП_ВремяОсреднения_ДТН,
                НП_ВремяОсреднения_ДТР,

                НП_Номинальный_Коэф_V_ЗР,
                НП_Номинальный_Коэф_X_ЗР,
                НП_Номинальный_Коэф_V_ЗУ,
                НП_Номинальный_Коэф_X_ЗУ,
                НП_Коэф_V_ЗР,
                НП_Коэф_X_ЗР,
                НП_Коэф_V_ЗУ,
                НП_Коэф_X_ЗУ,
                НП_Коэф_V_ЗВ,
                НП_Коэф_X_ЗВ,

                НП_Коэф_V_ТР,
                НП_Коэф_X_ТР,
                НП_Коэф_V_ТУ,
                НП_Коэф_X_ТУ,
                НП_Коэф_V_ТВ,
                НП_Коэф_X_ТВ,

                НП_РАБ_УСК_ЗР,
                НП_КОЭФ_А_ЗР,
                НП_АВР_ТОР_ЗР,
                НП_РАБ_УСК_ЗУ,
                НП_КОЭФ_А_ЗУ,
                НП_АВР_ТОР_ЗУ,
                НП_РАБ_УСК_ЗВ,
                НП_КОЭФ_А_ЗВ,
                НП_АВР_ТОР_ЗВ,
                НП_РАБ_УСК_ТР,
                НП_КОЭФ_А_ТР,
                НП_АВР_ТОР_ТР,
                НП_РАБ_УСК_ТУ,
                НП_КОЭФ_А_ТУ,
                НП_АВР_ТОР_ТУ,
                НП_РАБ_УСК_ТВ,
                НП_КОЭФ_А_ТВ,
                НП_АВР_ТОР_ТВ,

                НП_MIN_ДУ_Hур,
                НП_MAX_ДУ_Hур,
                НП_MIN_ДУДД_Hур,
                НП_MAX_ДУДД_Hур,
                НП_Кп_ДУ_Hур,
                НП_Кп_ДУДД_Hур,
                НП_ПредупредительныйHур,
                НП_АварийнаяОшибкаHур,
                НП_Кп_Dкр,
                НП_Кд_Dкр,
                НП_Ки_Dкр,
                НП_Кз_Dкр,
                НП_Dкр_MAX,
                НП_ДелтаVзРС_МАХ,
                НП_ВремяПереходногоПроцессаDкр,
                НП_ПогрешностьDкр,
                НП_Пауза_Dкр,
                НП_Кп_Vроста,
                НП_Кд_Vроста,
                НП_Ки_Vроста,
                НП_Кз_Vроста,
                НП_Пауза_Vроста,
                НП_ВремяОсредненияVзVроста,
                НП_VзР_MAX,
                НП_ДелтаТн_MAX,
                НП_Пауза_РЕГ_РОСТА,
                НП_ВремяПереходногоПроцессаVроста,
                НП_ПогрешностьVроста,
                НП_КоэфА_Pнк,
                НП_КоэфВ_Pнк,
                НП_РЕЖ_ИСПОЛН_РА,
                НП_РАДИУС_СТЕНКИ_ТИГЛЯ                  ,
                НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ,
                НП_РАДИУС_ДНА_ТИГЛЯ                     ,
                НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ, /* мм.рт.ст */
                НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ                      , /* мм.рт.ст */
                НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА                             , /* 100 Вт   */
                НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА                             , /* дельта разогрева */
                НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС                        , /* мм.рт.ст.*/
                НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН                         , /* мм.рт.ст.*/
                НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА                    , /* 100 КВт  */
                НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА                                ,
                НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН                     ,
                НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН                     ,
                ЗД_Pнк,
                КодСобытия_к_ПИВ,
                КодСобытия_от_ПИВ;         /*  */


ПЛАВ ЛП_Параметр_к_ПИВ ЛОКАЛ;

/*изменение НП   */
 СОСТ Анализ{
    РАЗБОР (КодСобытия_от_ПИВ) {
/*----------------------------------*/
       СЛУЧАЙ ИЗМН_НП_ФлагРасчетаHур_поДУ:
          НП_ФлагРасчетаHур_поДУ = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ФлагРасчетаHур_поДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ФлагРасчетаHур_поДВ:
          НП_ФлагРасчетаHур_поДВ = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ФлагРасчетаHур_поДВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ФлагРасчетаDкр_поТДД:
          НП_ФлагРасчетаDкр_поТДД = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ФлагРасчетаDкр_поТДД;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ФлагРасчетаDкр_поДВ:
          НП_ФлагРасчетаDкр_поДВ = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ФлагРасчетаDкр_поДВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_Тизмерения_Dкр_ДВ:
          НП_Тизмерения_Dкр_ДВ = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Тизмерения_Dкр_ДВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
/*----------------------------------*/
       СЛУЧАЙ ИЗМН_НП_Lз_ОТ_КВП_ДО_ДП_Lппз:
          НП_Lз_ОТ_КВП_ДО_ДП_Lппз = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Lз_ОТ_КВП_ДО_ДП_Lппз;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
  /* ИЗМН_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2, ????*/
/*       СЛУЧАЙ ИЗМН_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2:
          НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_L_ОТ_ДП_ДО_СТЫКА_НК_L2;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
*/
       СЛУЧАЙ ИЗМН_НП_Lз_ОТ_КВП_ДО_СТЫКА_НК:
          НП_Lз_ОТ_КВП_ДО_СТЫКА_НК = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Lз_ОТ_КВП_ДО_СТЫКА_НК;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1:
          НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Lз_ОТ_КВП_ДО_КНП:
          ЕСЛИ (GetFloatParamPIV() > 1000.0) {
	      НП_Lз_ОТ_КВП_ДО_КНП = GetFloatParamPIV();
	      КодСобытия_к_ПИВ = ИЗМН_НП_Lз_ОТ_КВП_ДО_КНП;
              В СОСТ ПодтверждениеИзмененияНП;
          } ИНАЧЕ {
              КодСобытия_к_ПИВ = ПК_ПИВ_НП_Lз_ОТ_КВП_ДО_КНП_ВНЕ_ДИАПАЗОНА;
              В СОСТ НП_ВнеДиапазона;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кдв:               /*добавить*/
          НП_Кдв = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кдв;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Мзатравкодержателя:
          НП_Мзатравкодержателя = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Мзатравкодержателя;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМЕРИТЬ_НП_Мзатравкодержателя:
          НП_Мзатравкодержателя = GetADC(НОМЕР_КАНАЛА_АЦП_ПоказанияДатчикаВеса);
          КодСобытия_к_ПИВ = ИЗМН_НП_Мзатравкодержателя;
          ЛП_Параметр_к_ПИВ = НП_Мзатравкодержателя;
          В СОСТ ПодтверждениеИзмеренияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ОП_Мзатравки:
          ОП_Мзатравки = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ОП_Мзатравки;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМЕРИТЬ_ОП_Мзатравки:
          ОП_Мзатравки = GetADC(НОМЕР_КАНАЛА_АЦП_ПоказанияДатчикаВеса) - НП_Мзатравкодержателя;
          КодСобытия_к_ПИВ = ИЗМН_ОП_Мзатравки;
          ЛП_Параметр_к_ПИВ = ОП_Мзатравки;
          В СОСТ ПодтверждениеИзмеренияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Мтроса:
          НП_Мтроса = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Мтроса;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМЕРИТЬ_НП_Мтроса:
          НП_Мтроса = GetADC(НОМЕР_КАНАЛА_АЦП_ПоказанияДатчикаВеса) - НП_Мзатравкодержателя;
          КодСобытия_к_ПИВ = ИЗМН_НП_Мтроса;
          ЛП_Параметр_к_ПИВ = НП_Мтроса;
          В СОСТ ПодтверждениеИзмеренияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ОП_Lсумм_Цилиндров:
          ОП_Lсумм_Цилиндров = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ОП_Lсумм_Цилиндров;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ОП_Тсумм_Цилиндров:
          ОП_Тсумм_Цилиндров = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ОП_Тсумм_Цилиндров;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ОП_Мсумм_Цилиндров:
          ОП_Мсумм_Цилиндров = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_ОП_Мсумм_Цилиндров;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_МаксимальнаяVзР:
          НП_МаксимальнаяVзР = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_МаксимальнаяVзР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Lт_ОТ_КНП_ДО_КВП:
          НП_Lт_ОТ_КНП_ДО_КВП = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Lт_ОТ_КНП_ДО_КВП;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР:
          НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОбъемВакПолости_V:
          НП_ОбъемВакПолости_V = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ОбъемВакПолости_V;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДавлениеВключенияДВН_P1:
          НП_ДавлениеВключенияДВН_P1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДавлениеВключенияДВН_P1;
               В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КонтрольноеВремяДостиженияP1_Т1:
          НП_КонтрольноеВремяДостиженияP1_Т1 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_КонтрольноеВремяДостиженияP1_Т1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_Pатмосф:
          НП_Pатмосф  = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Pатмосф;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаQгаза:
          НП_ВремяПереходногоПроцессаQгаза = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаQгаза;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьQгаза:
          НП_ПогрешностьQгаза = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьQгаза;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Pпор:
          НП_Pпор = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Pпор;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_НА_ОТКР:
          НП_КОЭФ_НА_ОТКР = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_НА_ОТКР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_НА_ЗАКР:
          НП_КОЭФ_НА_ЗАКР = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_НА_ЗАКР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаPнк:
          НП_ВремяПереходногоПроцессаPнк = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаPнк;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
/* ИП_ЛИТ */
       СЛУЧАЙ ИЗМН_НП_ТокЗащитыМодуля_ИП2К_К1:
          НП_ТокЗащитыМодуля_ИП2К_К1 = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_ТокЗащитыМодуля_ИП2К_К1;
          КодСобытия_к_ПИВ = ИЗМН_НП_ТокЗащитыМодуля_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_СкоростьИзменения_W_ИП2К_К1:
          НП_СкоростьИзменения_W_ИП2К_К1 = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_СкоростьИзменения_W_ИП2К_К1;
          КодСобытия_к_ПИВ = ИЗМН_НП_СкоростьИзменения_W_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_МинимальноеКоличествоМодулей_ИП2К_К1:   
          НП_МинимальноеКоличествоМодулей_ИП2К_К1 = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_МинимальноеКоличествоМодулей_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ:
          НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ:
          НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ = GetFloatParamPIV();
/*          СТАРТ ПРОЦ ПередачаНП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ;  добавлено */
          КодСобытия_к_ПИВ = ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_УставкаПотокаОхлЖидкости_ИП2К_К1:
          НП_УставкаПотокаОхлЖидкости_ИП2К_К1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_УставкаПотокаОхлЖидкости_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1:
          НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1:
          НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НижняяГраницаRиз_ИП2К_К1:
          НП_НижняяГраницаRиз_ИП2К_К1 = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_НижняяГраницаRиз_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НижняяГраницаRн_ИП2К_К1:
          НП_НижняяГраницаRн_ИП2К_К1 = GetFloatParamPIV()/1000.0;  /* добавлено */
/*          СТАРТ ПРОЦ ПередачаНП_НижняяГраницаRн_ИП2К_К1; добавлено */
          КодСобытия_к_ПИВ = ИЗМН_НП_НижняяГраницаRн_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВерхняяГраницаRн_ИП2К_К1:
          НП_ВерхняяГраницаRн_ИП2К_К1 = GetFloatParamPIV()/1000.0;  /* добавлено */
/*          СТАРТ ПРОЦ ПередачаНП_ВерхняяГраницаRн_ИП2К_К1; добавлено */
          КодСобытия_к_ПИВ = ИЗМН_НП_ВерхняяГраницаRн_ИП2К_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаWптд:
          НП_ВремяПереходногоПроцессаWптд = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаWптд;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_Wптд:
          НП_Кп_Wптд = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Wптд;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ТипИПН:
          НП_ТипИПН = GetLongParamPIV();
          ЕСЛИ (НП_ТипИПН == ИПН_ПТД) { /* отключить процессы для ИП2К*/
               СТОП ПРОЦ ВосстановлениеСвязиС_ИП2К_К1;
               DisableChannel_IP2K_K1();  /* добавлено*/
               СТОП ПРОЦ ОбработкаКомандОтИП2К_К1;  /* ИП_ЛИТ*/
               СТОП ПРОЦ КонтрольИзменения_ФП_ПотокОхлаждВоды_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВходе_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВыходе_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_Rиз_ИП2К_К1;

               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля0_ИП2К_К1; /*добавлено*/
               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля1_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля2_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля3_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля4_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТокМодуля5_ИП2К_К1;

               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля0_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля1_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля2_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля3_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля4_ИП2К_К1;
               СТОП ПРОЦ КонтрольИзменения_ФП_ТемпМодуля5_ИП2К_К1;
/*               СТОП ПРОЦ КонтрольИзменения_ФП_СостояниеМодуля_ИП2К_К1;/* /*добавлено*/
               СТОП ПРОЦ КонтрольИзменения_ФП_U380_ИП2К_К1;
               СТОП ПРОЦ КонтрольКоличестваМодулей_ИП2К_К1; /*  */
               Флаг_НаличияМодуля0_ИП2К_К1 = ВЫКЛ; /* добавлено */
               Флаг_НаличияМодуля1_ИП2К_К1 = ВЫКЛ; /*  */
               Флаг_НаличияМодуля2_ИП2К_К1 = ВЫКЛ; /*  */
               Флаг_НаличияМодуля3_ИП2К_К1 = ВЫКЛ; /*  */
               Флаг_НаличияМодуля4_ИП2К_К1 = ВЫКЛ; /*  */
               Флаг_НаличияМодуля5_ИП2К_К1 = ВЫКЛ; /*  */

          } ИНАЧЕ { /*  включить процессы для ИП2К */
               СТАРТ ПРОЦ ВосстановлениеСвязиС_ИП2К_К1;      /* добавлено*/
               СТАРТ ПРОЦ ОбработкаКомандОтИП2К_К1;  /* ИП_ЛИТ*/
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ПотокОхлаждВоды_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВходе_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВыходе_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_Rиз_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля0_ИП2К_К1; /*добавлено*/
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля1_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля2_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля3_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля4_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТокМодуля5_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля0_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля1_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля2_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля3_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля4_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольИзменения_ФП_ТемпМодуля5_ИП2К_К1;
/*               СТАРТ ПРОЦ КонтрольИзменения_ФП_СостояниеМодуля_ИП2К_К1;*/ /*добавлено*/
               СТАРТ ПРОЦ КонтрольИзменения_ФП_U380_ИП2К_К1;
               СТАРТ ПРОЦ КонтрольКоличестваМодулей_ИП2К_К1;
               Флаг_НаличияМодуля0_ИП2К_К1 = ВКЛ; /* добавлено */
               Флаг_НаличияМодуля1_ИП2К_К1 = ВКЛ; /*  */
               Флаг_НаличияМодуля2_ИП2К_К1 = ВКЛ; /*  */
               Флаг_НаличияМодуля3_ИП2К_К1 = ВКЛ; /*  */
               Флаг_НаличияМодуля4_ИП2К_К1 = ВКЛ; /*  */
               Флаг_НаличияМодуля5_ИП2К_К1 = ВКЛ; /*  */
          }
          КодСобытия_к_ПИВ = ИЗМН_НП_ТипИПН;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_Wптд:
          НП_Пауза_Wптд = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Wптд;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьWипн_К1:
          НП_ПогрешностьWипн_К1 = GetFloatParamPIV()*1000.0;
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьWипн_К1;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Iптд_МАХ:
          НП_Iптд_МАХ = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Iптд_МАХ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Wипн_К1_МАХ:
          НП_Wипн_К1_МАХ = GetFloatParamPIV()*1000.0;
          КодСобытия_к_ПИВ = ИЗМН_НП_Wипн_К1_МАХ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДелтаW_Разогрева:
          НП_ДелтаW_Разогрева = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаW_Разогрева;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДелтаВремениРазогрева:
          НП_ДелтаВремениРазогрева = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаВремениРазогрева;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Тн_MAX:
          НП_Тн_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Тн_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_Тн:
          НП_Кп_Тн = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Тн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кд_Тн:
          НП_Кд_Тн = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Тн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Ки_Тн:
          НП_Ки_Тн = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Тн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кз_Тн:
          НП_Кз_Тн = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Тн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаТн:
          НП_ВремяПереходногоПроцессаТн = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаТн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьТн:
          НП_ПогрешностьТн = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьТн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_Тн:
          НП_Пауза_Тн = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Тн;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_Тр:
          НП_Кп_Тр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Тр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кд_Тр:
          НП_Кд_Тр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Тр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Ки_Тр:
          НП_Ки_Тр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Тр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кз_Тр:
          НП_Кз_Тр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Тр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_Тр:
          НП_Пауза_Тр = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Тр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Тр_MAX:
          НП_Тр_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Тр_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаТр:
          НП_ВремяПереходногоПроцессаТр = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаТр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьТр:
          НП_ПогрешностьТр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьТр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДелтаТр_MAX:
          НП_ДелтаТр_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаТр_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПоправкаVтР_Нур:
          НП_ПоправкаVтР_Нур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПоправкаVтР_Нур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
 /*+++++++++++++++++*/
       СЛУЧАЙ ИЗМН_НП_AH_ДУ:
          НП_AH_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_AH_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_AH_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BH_ДУ:
          НП_BH_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BH_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_BH_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_CH_ДУ:
          НП_CH_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_CH_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_CH_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_THRESH_ДУ:
          НП_THRESH_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_THRESH_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_THRESH_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_DRELQ_ДУ:
          НП_DRELQ_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_DRELQ_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_DRELQ_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_THRESH_GIST_ДУ:
          НП_THRESH_GIST_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_THRESH_GIST_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_THRESH_GIST_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MAX_SIGNAL_VALUE_ДУ:
          НП_MAX_SIGNAL_VALUE_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_MAX_SIGNAL_VALUE_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_MAX_SIGNAL_VALUE_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_T_MAX_ДУ:
          НП_T_MAX_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_T_MAX_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_T_MAX_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_H_MAX_ДУ:
          НП_H_MAX_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_H_MAX_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_H_MAX_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_H_MIN_ДУ:
          НП_H_MIN_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_H_MIN_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_H_MIN_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_WIDTH_PEAK_MAX_ДУ:
          НП_WIDTH_PEAK_MAX_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_WIDTH_PEAK_MAX_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_WIDTH_PEAK_MAX_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ADAPT_LENGTH_ДУ:
          НП_ADAPT_LENGTH_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_ADAPT_LENGTH_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_ADAPT_LENGTH_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_KOL_KALIBR_ДУ:
          НП_KOL_KALIBR_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_KOL_KALIBR_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_KOL_KALIBR_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_NLINE1_ДУ:
          НП_NLINE1_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_NLINE1_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_NLINE1_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_NLINE2_ДУ:
          НП_NLINE2_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_NLINE2_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_NLINE2_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_RELATIV_QUALITY_ДУ:
          НП_RELATIV_QUALITY_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_RELATIV_QUALITY_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_RELATIV_QUALITY_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MIN_SIGN_RANGE_ДУ:
          НП_MIN_SIGN_RANGE_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_MIN_SIGN_RANGE_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_MIN_SIGN_RANGE_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MIDDLE_ДУ:
          НП_MIDDLE_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_MIDDLE_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_MIDDLE_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MIDDLE_SIGN_ДУ:
          НП_MIDDLE_SIGN_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_MIDDLE_SIGN_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_MIDDLE_SIGN_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BAD_NUMB_ДУ:
          НП_BAD_NUMB_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BAD_NUMB_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_BAD_NUMB_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_CORRECT_LEVEL_LASER_1_ДУ:
          НП_CORRECT_LEVEL_LASER_1_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_CORRECT_LEVEL_LASER_1_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_CORRECT_LEVEL_LASER_1_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_EXPOSURE_TIME0_ДУ:
          НП_EXPOSURE_TIME0_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_EXPOSURE_TIME0_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_EXPOSURE_TIME0_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_EXPOSURE_TIME1_ДУ:
          НП_EXPOSURE_TIME1_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_EXPOSURE_TIME1_ДУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_EXPOSURE_TIME1_ДУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;


       СЛУЧАЙ ИЗМН_НП_XTOLER:
          НП_XTOLER = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_XTOLER;
          КодСобытия_к_ПИВ = ИЗМН_НП_XTOLER;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_YTOLER:
          НП_YTOLER = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_YTOLER;
          КодСобытия_к_ПИВ = ИЗМН_НП_YTOLER;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_YDOWNTOLER:
          НП_YDOWNTOLER = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_YDOWNTOLER;
          КодСобытия_к_ПИВ = ИЗМН_НП_YDOWNTOLER;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_NUMOFSTR:
          НП_NUMOFSTR = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_NUMOFSTR;
          КодСобытия_к_ПИВ = ИЗМН_НП_NUMOFSTR;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_THRRELIAB:
          НП_THRRELIAB = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_THRRELIAB;
          КодСобытия_к_ПИВ = ИЗМН_НП_THRRELIAB;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_THRDERIV:
          НП_THRDERIV = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_THRDERIV;
          КодСобытия_к_ПИВ = ИЗМН_НП_THRDERIV;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_THRDERIVCLB:
          НП_THRDERIVCLB = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_THRDERIVCLB;
          КодСобытия_к_ПИВ = ИЗМН_НП_THRDERIVCLB;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGZERO_LVL:
          НП_BIGZERO_LVL = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGZERO_LVL;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGZERO_LVL;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGPLUS_LVL:
          НП_BIGPLUS_LVL = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGPLUS_LVL;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGPLUS_LVL;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLZERO_LVL:
          НП_SMALLZERO_LVL = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLZERO_LVL;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLZERO_LVL;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLPLUS_LVL:
          НП_SMALLPLUS_LVL = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLPLUS_LVL;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLPLUS_LVL;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MINAVERTIME:
          НП_MINAVERTIME = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_MINAVERTIME;
          КодСобытия_к_ПИВ = ИЗМН_НП_MINAVERTIME;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
    
       СЛУЧАЙ ИЗМН_НП_BIGZERO_CTG:
          НП_BIGZERO_CTG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGZERO_CTG;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGZERO_CTG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGZERO_KY:
          НП_BIGZERO_KY = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGZERO_KY;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGZERO_KY;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGZERO_X:
          НП_BIGZERO_X = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGZERO_X;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGZERO_X;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGZERO_TG:
          НП_BIGZERO_TG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGZERO_TG;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGZERO_TG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_BIGPLUS_CTG:
          НП_BIGPLUS_CTG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGPLUS_CTG;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGPLUS_CTG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGPLUS_KY:
          НП_BIGPLUS_KY = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGPLUS_KY;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGPLUS_KY;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGPLUS_X:
          НП_BIGPLUS_X = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGPLUS_X;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGPLUS_X;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_BIGPLUS_TG:
          НП_BIGPLUS_TG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_BIGPLUS_TG;
          КодСобытия_к_ПИВ = ИЗМН_НП_BIGPLUS_TG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_SMALLZERO_CTG:
          НП_SMALLZERO_CTG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLZERO_CTG;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLZERO_CTG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLZERO_KY:
          НП_SMALLZERO_KY = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLZERO_KY;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLZERO_KY;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLZERO_X:
          НП_SMALLZERO_X = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLZERO_X;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLZERO_X;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLZERO_TG:
          НП_SMALLZERO_TG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLZERO_TG;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLZERO_TG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_SMALLPLUS_CTG:
          НП_SMALLPLUS_CTG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLPLUS_CTG;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLPLUS_CTG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLPLUS_KY:
          НП_SMALLPLUS_KY = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLPLUS_KY;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLPLUS_KY;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLPLUS_X:
          НП_SMALLPLUS_X = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLPLUS_X;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLPLUS_X;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_SMALLPLUS_TG:
          НП_SMALLPLUS_TG = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_SMALLPLUS_TG;
          КодСобытия_к_ПИВ = ИЗМН_НП_SMALLPLUS_TG;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР: /*добавлено*/
          НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПОПРАВКА_К_ТДД_ШЕЙКА:
          НП_ПОПРАВКА_К_ТДД_ШЕЙКА = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПОПРАВКА_К_ТДД_ШЕЙКА;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ТАРИРОВКА_ПОПРАВКИ_К_ТДД_ЦИЛИНДР:
          НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР = GetFloatParamPIV() - ФП_Dкр_ТДД;
          КодСобытия_к_ПИВ = ИЗМН_НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР;
          ЛП_Параметр_к_ПИВ = НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР;
          В СОСТ ПодтверждениеИзмеренияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ТАРИРОВКА_ПОПРАВКИ_К_ТДД_ШЕЙКА:
          НП_ПОПРАВКА_К_ТДД_ШЕЙКА = GetFloatParamPIV() - ФП_Dкр_ТДД;
          КодСобытия_к_ПИВ = ИЗМН_НП_ПОПРАВКА_К_ТДД_ШЕЙКА;
          ЛП_Параметр_к_ПИВ = НП_ПОПРАВКА_К_ТДД_ШЕЙКА;
          В СОСТ ПодтверждениеИзмеренияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_ВремяОсреднения_ДТН:
          НП_ВремяОсреднения_ДТН = (ДЦЕЛ)GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяОсреднения_ДТН;
/*          СТАРТ ПРОЦ ПередачаНП_ВремяОсреднения_ДТН; добавлено ЗЮБИН  */
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Тсм_ДТН:
          НП_Тсм_ДТН = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Тсм_ДТН;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ РАССЧИТАТЬ_НП_Тсм_ДТН:
          СТАРТ ПРОЦ РассчитатьТсм_ДТН;
          СТОП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Тсм_ДТР:
          НП_Тсм_ДТР = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Тсм_ДТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяОсреднения_ДТР:
          НП_ВремяОсреднения_ДТР = (ДЦЕЛ)GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяОсреднения_ДТР;
/*          СТАРТ ПРОЦ ПередачаНП_ВремяОсреднения_ДТР;  добавлено ЗЮБИН */
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ РАССЧИТАТЬ_НП_Тсм_ДТР:
          СТАРТ ПРОЦ РассчитатьТсм_ДТР;
          СТОП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗР:
          НП_Номинальный_Коэф_V_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Номинальный_Коэф_V_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗР:
          НП_Номинальный_Коэф_X_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Номинальный_Коэф_X_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗУ:
          НП_Номинальный_Коэф_V_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Номинальный_Коэф_V_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_НОМИНАЛ_КОЭФ_V_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗУ:
          НП_Номинальный_Коэф_X_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Номинальный_Коэф_X_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_НОМИНАЛ_КОЭФ_X_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ЗР:
          НП_Коэф_V_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ЗР:
          НП_Коэф_X_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ЗУ:
          НП_Коэф_V_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ЗУ:
          НП_Коэф_X_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ЗВ:
          НП_Коэф_V_ЗВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ЗВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ЗВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ЗВ:
          НП_Коэф_X_ЗВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ЗВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ЗВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ТР:
          НП_Коэф_V_ТР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ТР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ТР:
          НП_Коэф_X_ТР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ТР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ТУ:
          НП_Коэф_V_ТУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ТУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ТУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ТУ:
          НП_Коэф_X_ТУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ТУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ТУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_V_ТВ:
          НП_Коэф_V_ТВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_V_ТВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_V_ТВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_X_ТВ:
          НП_Коэф_X_ТВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_Коэф_X_ТВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_X_ТВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ЗР:
          НП_РАБ_УСК_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ЗР:
          НП_КОЭФ_А_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ЗР:
          НП_АВР_ТОР_ЗР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ЗР;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ЗР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ЗУ:
          НП_РАБ_УСК_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ЗУ:
          НП_КОЭФ_А_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ЗУ:
          НП_АВР_ТОР_ЗУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ЗУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ЗУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ЗВ:
          НП_РАБ_УСК_ЗВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ЗВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ЗВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ЗВ:
          НП_КОЭФ_А_ЗВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ЗВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ЗВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ЗВ:
          НП_АВР_ТОР_ЗВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ЗВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ЗВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ТР:
          НП_РАБ_УСК_ТР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ТР;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ТР:
          НП_КОЭФ_А_ТР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ТР;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ТР:
          НП_АВР_ТОР_ТР = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ТР;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ТР;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ТУ:
          НП_РАБ_УСК_ТУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ТУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ТУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ТУ:
          НП_КОЭФ_А_ТУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ТУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ТУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ТУ:
          НП_АВР_ТОР_ТУ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ТУ;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ТУ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_РАБ_УСК_ТВ:
          НП_РАБ_УСК_ТВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_РАБ_УСК_ТВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_РАБ_УСК_ТВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КОЭФ_А_ТВ:
          НП_КОЭФ_А_ТВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_КОЭФ_А_ТВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_КОЭФ_А_ТВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АВР_ТОР_ТВ:
          НП_АВР_ТОР_ТВ = GetFloatParamPIV();
          СТАРТ ПРОЦ ПередачаНП_АВР_ТОР_ТВ;
          КодСобытия_к_ПИВ = ИЗМН_НП_АВР_ТОР_ТВ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_НП_MIN_ДУ_Hур:
          НП_MIN_ДУ_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_MIN_ДУ_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MAX_ДУ_Hур:
          НП_MAX_ДУ_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_MAX_ДУ_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MIN_ДУДД_Hур:
          НП_MIN_ДУДД_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_MIN_ДУДД_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_MAX_ДУДД_Hур:
          НП_MAX_ДУДД_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_MAX_ДУДД_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_ДУ_Hур:
          НП_Кп_ДУ_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_ДУ_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_ДУДД_Hур:
          НП_Кп_ДУДД_Hур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_ДУДД_Hур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПредупредительныйHур:
          НП_ПредупредительныйHур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПредупредительныйHур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_АварийнаяОшибкаHур:
          НП_АварийнаяОшибкаHур = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_АварийнаяОшибкаHур;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_Dкр:
          НП_Кп_Dкр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Dкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кд_Dкр:
          НП_Кд_Dкр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Dкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Ки_Dкр:
          НП_Ки_Dкр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Dкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кз_Dкр:
          НП_Кз_Dкр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Dкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Dкр_MAX:
          НП_Dкр_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Dкр_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДелтаVзРС_МАХ:
          НП_ДелтаVзРС_МАХ = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаVзРС_МАХ;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаDкр:
          НП_ВремяПереходногоПроцессаDкр = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаDкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьDкр:
          НП_ПогрешностьDкр = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьDкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_Dкр:
          НП_Пауза_Dкр = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Dкр;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кп_Vроста:
          НП_Кп_Vроста = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Vроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кд_Vроста:
          НП_Кд_Vроста = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Vроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Ки_Vроста:
          НП_Ки_Vроста = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Vроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Кз_Vроста:
          НП_Кз_Vроста = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Vроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_Vроста:
          НП_Пауза_Vроста = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Vроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяОсредненияVзVроста:
          НП_ВремяОсредненияVзVроста = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяОсредненияVзVроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_VзР_MAX:
          НП_VзР_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_VзР_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ДелтаТн_MAX:
          НП_ДелтаТн_MAX = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаТн_MAX;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_Пауза_РЕГ_РОСТА:
          НП_Пауза_РЕГ_РОСТА = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_РЕГ_РОСТА;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ВремяПереходногоПроцессаVроста:
          НП_ВремяПереходногоПроцессаVроста = GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаVроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ПогрешностьVроста:
          НП_ПогрешностьVроста = GetFloatParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьVроста;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КоэфА_Pнк:
          НП_КоэфА_Pнк = GetFloatParamPIV();
          ОП_ПогрешностьPнк = НП_КоэфА_Pнк + НП_КоэфВ_Pнк * ЗД_Pнк;
          КодСобытия_к_ПИВ = ИЗМН_НП_КоэфА_Pнк;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_КоэфВ_Pнк:
          НП_КоэфВ_Pнк = GetFloatParamPIV();
          ОП_ПогрешностьPнк = НП_КоэфА_Pнк + НП_КоэфВ_Pнк * ЗД_Pнк;
          КодСобытия_к_ПИВ = ИЗМН_НП_КоэфВ_Pнк;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_РЕЖ_ИСПОЛН_РА:
          НП_РЕЖ_ИСПОЛН_РА = (ЦЕЛ)GetLongParamPIV();
          КодСобытия_к_ПИВ = ИЗМН_НП_РЕЖ_ИСПОЛН_РА;
          В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_РАДИУС_СТЕНКИ_ТИГЛЯ:
              НП_РАДИУС_СТЕНКИ_ТИГЛЯ = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_РАДИУС_СТЕНКИ_ТИГЛЯ;
              СТАРТ ПРОЦ ПЕРЕРАСЧЕТ_ФОРМЫ_ТИГЛЯ;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_РАДИУС_ДНА_ТИГЛЯ:
              НП_РАДИУС_ДНА_ТИГЛЯ = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_РАДИУС_ДНА_ТИГЛЯ;
              СТАРТ ПРОЦ ПЕРЕРАСЧЕТ_ФОРМЫ_ТИГЛЯ;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ:
              НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ;
              СТАРТ ПРОЦ ПЕРЕРАСЧЕТ_ФОРМЫ_ТИГЛЯ;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;




       
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ:
              НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДОПУСТИМОЕ_ДАВЛЕНИЕ_ПОСЛЕ_КОНТРОЛЯ_НАТЕКАНИЯ;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ:
              НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ПЕРЕД_ОТЖИГОМ;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА:
              НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОТЖИГА;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА:
              НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА = GetLongParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОТЖИГА;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС:
              НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МАКС;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН:
              НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДАВЛЕНИЕ_ОТЖИГА_МИН;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА:
              НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_КОНЕЧНАЯ_МОЩНОСТЬ_ОТЖИГА;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА:
              НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА = GetLongParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ВРЕМЯ_ОТЖИГА;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН:
              НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН = GetFloatParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_W_ОХЛАЖДЕНИЯ_ИПН;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН:
              НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН = GetLongParamPIV();
              КодСобытия_к_ПИВ = ИЗМН_НП_ОТЖИГ_ДЕЛЬТА_Т_ОХЛАЖДЕНИЯ_ИПН;
              В СОСТ ПодтверждениеИзмененияНП;
          КОНЕЦ;



/*-----------------------*/
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
 }

 СОСТ НП_ВнеДиапазона{
    ЕСЛИ (SendMsgPIVCode(КодСобытия_к_ПИВ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 СОСТ ПодтверждениеИзмененияНП{
    ЕСЛИ (SendMsgLongParamPIV(КодСобытия_к_ПИВ, GetLongParamPIV())) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПодтверждениеИзмеренияНП{
    ЕСЛИ (SendMsgFloatParamPIV(КодСобытия_к_ПИВ, ЛП_Параметр_к_ПИВ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаКомандИзмененияНП_от_ПИВ    */





/*===================================================*/
/*==                                               ==*/
/*==      ПРОЦЕСС ПЕРЕРАСЧЕТА ФОРМЫ ТИГЛЯ          ==*/
/*==                                               ==*/
/*==      643.АЭ1610.10000 Д2                      ==*/
/*===================================================*/
ПРОЦ ПЕРЕРАСЧЕТ_ФОРМЫ_ТИГЛЯ {
ИЗ ПРОЦ Инициализация
                       НП_РАДИУС_СТЕНКИ_ТИГЛЯ                  ,
                       НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ,
                       НП_РАДИУС_ДНА_ТИГЛЯ                     ;

 СОСТ Начало {
    ЕСЛИ (!InitTigGeometry(НП_РАДИУС_СТЕНКИ_ТИГЛЯ,
                        НП_РАДИУС_ДНА_ТИГЛЯ,
                        НП_РАДИУС_ПЕРЕХОДА_ОТ_ДНА_ТИГЛЯ_К_СТЕНКЕ,
                        (ПЛАВ)КОЭФ_ПЛОТНОСТИ_ЖД_SI))
         В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ ПередачаОшибки;
 }
 СОСТ ПередачаСообщенияОперерасчете{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ГЕОМЕТРИЯ_ТИГЛЯ_РАССЧИТАНА_УСПЕШНО)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ ПередачаОшибки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВВЕДЕННЫЕ_РАДИУСЫ_НЕ_ПОЗВОЛЯЮТ_РАССЧИТАТЬ_ГЕОМЕТРИЮ_ТИГЛЯ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }

}


/*===================================================*/
/*==                                               ==*/
/*==      ПРОЦЕСС ИЗМЕНЕНИЯ ЗАДАНИЙ ОТ ПИВ         ==*/
/*==                                               ==*/
/*==      643.АЭ1610.10000 Д2                     ==*/
/*===================================================*/
ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ{
ИЗ ПРОЦ Инициализация ЗД_Qгаза,
                      ЗД_Pнк,
                      ЗД_Wипн_К1,
                      ЗД_Wипн_К2,
                      ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/, /* 23.12.2005 - База для Рег_РОСТА Зюбин добавитьдобавлено */
                      ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее,
                      ЗД_Тн,
                      ЗД_Тр,
                      ЗД_Hур,
                      ЗД_Dкр,
                      ЗД_Vроста,
                      ЗД_VзР,
                      ЗД_VзУ,
                      ЗД_Xз,
                      ЗД_Wз,
                      ЗД_Wз_УГОЛ,
                      ЗД_VтР,
                      ЗД_VтУ,
                      ЗД_Xт,
                      ЗД_Wт,
                      ЗД_Wт_УГОЛ,
                      НП_КоэфА_Pнк,
                      НП_КоэфВ_Pнк,
                      ОП_ПогрешностьPнк,
                      КодСобытия_к_ПИВ,
                      КодСобытия_от_ПИВ;         /*  */




ПЛАВ ЛП_ЗД ЛОКАЛ;
ЦЕЛ ЛП_КодСообщения ЛОКАЛ;

/* ИЗ ПРОЦ Инициализация                 /* убрать - добавитьдобавлено - Зюбин (для рег-роста)*/
/*			ТекущийРежим,
/*			ТекущийЭтап;
*/

/*изменение ЗД   */
 СОСТ Анализ{
    РАЗБОР (КодСобытия_от_ПИВ) {
       СЛУЧАЙ ИЗМН_ЗД_Qгаза:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РГ)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РГ)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_РГ_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Qгаза = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Pнк:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Д_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Pнк = ЛП_ЗД;
               ОП_ПогрешностьPнк = НП_КоэфА_Pнк + НП_КоэфВ_Pнк * ЗД_Pнк;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Wипн_К1:
          ЛП_ЗД = GetFloatParamPIV()*1000.0;
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_W_ИПН_К1_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Wипн_К1 = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Wипн_К2:
          ЛП_ЗД = GetFloatParamPIV()*1000.0;
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К2)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_W_ИПН_К2_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Wипн_К2 = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_База_РЕГ_РОСТА:  /*добавить _Wипн_К2*//* 23.12.2005 - База для Рег_РОСТА Зюбин */
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_БАЗА_РЕГ_РОСТА)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_БАЗА_РЕГ_РОСТА)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_БАЗА_РЕГ_РОСТА_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {  /*добавить ЗЮБИН 22.12.2005 - отработка РЕГ_РОСТА*/
               ЗД_База_РЕГ_РОСТА = ЛП_ЗД; /*_Wипн_К2*/ 
               ЗД_Тн += (ЛП_ЗД - ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее);
               ЗД_База_Тн_для_РЕГ_РОСТА_Предыдущее = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Тн:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ТН_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
/*		ЕСЛИ ((ТекущийРежим == РЕЖИМ_РА) && /* добавитьдобавлено (восстановить 22.12.2005) - Зюбин */
/*		      (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) &&
/*		      (ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ)) {
/*			ЗД_Тн += (ЛП_ЗД - ЗД_Тн_Предыдущее);
/*		} ИНАЧЕ ЗД_Тн = ЛП_ЗД;
/*		ЗД_Тн_Предыдущее = ЛП_ЗД;
*/
               ЗД_Тн = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Тр:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТР)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТР)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ТР_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Тр = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Hур:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_УР_hзад)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_УР_hзад)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_УР_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Hур = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ЗД_Dкр:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ДК)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ДК)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_ДК_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Dкр = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Vроста:

          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РОСТА)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_РОСТА)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_РОСТА_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Vроста = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_VтР:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VтР_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_VтР = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_VтУ:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VтУ_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_VтУ = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_VзР:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VзР_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
             ЗД_VзР = ЛП_ЗД;
             СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_VзУ:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_VзУ_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
             ЗД_VзУ = ЛП_ЗД;
             СТОП;
          }
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ЗД_Xз:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xз)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xз)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Xз_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
             ЗД_Xз = ЛП_ЗД;
             СТОП;
          }
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ЗД_Wз:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Wз_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
             ЗД_Wз = ЛП_ЗД;
             СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Wз_УГОЛ:
               ЗД_Wз_УГОЛ = GetFloatParamPIV();
               СТОП;
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Wт:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Wт_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Wт = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;
       СЛУЧАЙ ИЗМН_ЗД_Wт_УГОЛ:
               ЗД_Wт_УГОЛ = GetFloatParamPIV();
               СТОП;
          КОНЕЦ;

       СЛУЧАЙ ИЗМН_ЗД_Xт:
          ЛП_ЗД = GetFloatParamPIV();
          ЕСЛИ ((ЛП_ЗД < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xт)
                  || (ЛП_ЗД > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Xт)) {
               ЛП_КодСообщения = ПК_ПИВ_ЗД_ДЛЯ_РЕГ_Xт_ВНЕ_ДИАПАЗОНА;
               В СОСТ ЗД_ВнеДиапазона;
          } ИНАЧЕ {
               ЗД_Xт = ЛП_ЗД;
               СТОП;
          }
          КОНЕЦ;


/*-----------------------*/
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */

 }

 СОСТ ЗД_ВнеДиапазона{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщения)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 СОСТ ПодтверждениеИзмененияЗД{
 	 ЕСЛИ (SendMsgLongParamPIV(КодСобытия_к_ПИВ, GetLongParamPIV())) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаКомандИзменениеЗадания_от_ПИВ   */


/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*= ПРОЦЕССЫ ПЕРЕДАЧИ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   =*/
/*=       ПРИ ПЕРЕСЧЕТЕ ИХ В Д2                =*/
/*=        643.АЭ1610.10000 Д2                =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*= ПРОЦЕССЫ ПЕРЕДАЧИ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   =*/
/*=                В ПРИВОД                    =*/
/*=        643.АЭ1610.10000 Д2.0               =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*= Передача НП_Номинальный_Коэф_V_ЗР в ПРИВОД =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Номинальный_Коэф_V_ЗР{
 ИЗ ПРОЦ Инициализация  НП_Номинальный_Коэф_V_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_НОМИНАЛ_КОЭФ_V, НП_Номинальный_Коэф_V_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*= Передача НП_Номинальный_Коэф_X_ЗР в ПРИВОД =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Номинальный_Коэф_X_ЗР{
 ИЗ ПРОЦ Инициализация  НП_Номинальный_Коэф_X_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_НОМИНАЛ_КОЭФ_X, НП_Номинальный_Коэф_X_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*= Передача НП_Номинальный_Коэф_V_ЗУ в ПРИВОД =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Номинальный_Коэф_V_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_Номинальный_Коэф_V_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_НОМИНАЛ_КОЭФ_V, НП_Номинальный_Коэф_V_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*= Передача НП_Номинальный_Коэф_X_ЗУ в ПРИВОД =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Номинальный_Коэф_X_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_Номинальный_Коэф_X_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_НОМИНАЛ_КОЭФ_X, НП_Номинальный_Коэф_X_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=     Передача НП_Коэф_V_ЗР в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ЗР{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ЗР в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ЗР{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_V_ЗУ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ЗУ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_V_ЗВ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ЗВ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ЗВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ЗВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ЗВ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ЗВ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ЗВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ЗВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_V_ТР в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ТР{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ТР в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ТР{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_V_ТУ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ТУ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ТУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ТУ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                 =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ТУ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ТУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_V_ТВ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_V_ТВ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ТВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_НП_КОЭФ_V, НП_Коэф_V_ТВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_Коэф_X_ТВ в ПРИВОД         =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_Коэф_X_ТВ{
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ТВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_НП_КОЭФ_X, НП_Коэф_X_ТВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_РАБ_УСК_ЗР в ПРИВОД        =*/
/*=            (УСКОРЕНИЕ ЗР)                  =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ЗР{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_КОЭФ_А_ЗР в ПРИВОД         =*/
/*=     (Коэффициент А УСКОРЕНИЯ ЗР)           =*/
/*=     643.АЭ1610.10000 Д2.0                 =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ЗР{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_АВР_ТОР_ЗР в ПРИВОД        =*/
/*=        (Аварийное торможение ЗР)           =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ЗР{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ЗР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ЗР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_РАБ_УСК_ЗУ в ПРИВОД        =*/
/*=              (УСКОРЕНИЕ ЗУ)                =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_КОЭФ_А_ЗУ в ПРИВОД         =*/
/*=      (Коэффициент А УСКОРЕНИЯ ЗУ)          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_АВР_ТОР_ЗУ в ПРИВОД        =*/
/*=        (Аварийное торможение ЗУ)           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ЗУ{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_РАБ_УСК_ЗВ в ПРИВОД        =*/
/*=             (УСКОРЕНИЕ ЗВ)                 =*/
/*=           643.АЭ1610.10000 Д2.0           =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ЗВ{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ЗВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ЗВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_КОЭФ_А_ЗВ в ПРИВОД         =*/
/*=      (Коэффициент А УСКОРЕНИЯ ЗВ)          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ЗВ{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ЗВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ЗВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_АВР_ТОР_ЗВ в ПРИВОД        =*/
/*=         (Аварийное торможение ЗВ)          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ЗВ{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ЗВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ЗВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=     Передача НП_РАБ_УСК_ТР в ПРИВОД        =*/
/*=              (УСКОРЕНИЕ ТР)                =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ТР{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_КОЭФ_А_ТР в ПРИВОД        =*/
/*=       (Коэффициент А УСКОРЕНИЯ ТР)         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ТР{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_АВР_ТОР_ТР в ПРИВОД       =*/
/*=          (Аварийное торможение ТР)         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ТР{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_РАБ_УСК_ТУ в ПРИВОД       =*/
/*=               (УСКОРЕНИЕ ТУ)               =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ТУ{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ТУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_КОЭФ_А_ТУ в ПРИВОД        =*/
/*=       (Коэффициент А УСКОРЕНИЯ ТУ)         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ТУ{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ТУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_АВР_ТОР_ТУ в ПРИВОД       =*/
/*=          (Аварийное торможение ТУ)         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ТУ{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ТУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_РАБ_УСК_ТВ в ПРИВОД       =*/
/*=              (УСКОРЕНИЕ ТВ)                =*/
/*=           643.АЭ1610.10000 Д2.0           =*/
/*==============================================*/
ПРОЦ ПередачаНП_РАБ_УСК_ТВ{
 ИЗ ПРОЦ Инициализация  НП_РАБ_УСК_ТВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_НП_РАБ_УСК, НП_РАБ_УСК_ТВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_КОЭФ_А_ТВ в ПРИВОД        =*/
/*=       (Коэффициент А УСКОРЕНИЯ ТВ)         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_КОЭФ_А_ТВ{
 ИЗ ПРОЦ Инициализация  НП_КОЭФ_А_ТВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_НП_КОЭФ_А, НП_КОЭФ_А_ТВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=      Передача НП_АВР_ТОР_ТВ в ПРИВОД       =*/
/*=         (Аварийное торможение ТВ)          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_АВР_ТОР_ТВ{
 ИЗ ПРОЦ Инициализация  НП_АВР_ТОР_ТВ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_НП_АВР_ТОР, НП_АВР_ТОР_ТВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*= ПРОЦЕССЫ ПЕРЕДАЧИ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   =*/
/*=      ДАТЧИКУ УРОВНЯ                        =*/
/*=        643.АЭ1610.10000 Д2.0               =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*=    Передача НП_AH_ДУ в ДУ                  =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_AH_ДУ{
 ИЗ ПРОЦ Инициализация  НП_AH_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_AH_НАЧАЛО_ПЕРЕДАЧИ, НП_AH_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BH_ДУ в ДУ                  =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_BH_ДУ{
 ИЗ ПРОЦ Инициализация  НП_BH_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_BH, НП_BH_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_CH_ДУ в ДУ                  =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_CH_ДУ{
 ИЗ ПРОЦ Инициализация  НП_CH_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_CH_ПОСЛЕДНИЙ_ПАРАМЕТР, НП_CH_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_THRESH_ДУ в ДУ              =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_THRESH_ДУ{
 ИЗ ПРОЦ Инициализация  НП_THRESH_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_THRESH, НП_THRESH_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_DRELQ_ДУ в ДУ               =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_DRELQ_ДУ{
 ИЗ ПРОЦ Инициализация  НП_DRELQ_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_DRELQ, НП_DRELQ_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_THRESH_GIST_ДУ в ДУ         =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_THRESH_GIST_ДУ{
 ИЗ ПРОЦ Инициализация  НП_THRESH_GIST_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_THRETH_GIST, НП_THRESH_GIST_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_MAX_SIGNAL_VALUE_ДУ в ДУ    =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_MAX_SIGNAL_VALUE_ДУ{
 ИЗ ПРОЦ Инициализация  НП_MAX_SIGNAL_VALUE_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_MAX_SIGNAL_VALUE, НП_MAX_SIGNAL_VALUE_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_T_MAX_ДУ в ДУ               =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_T_MAX_ДУ{
 ИЗ ПРОЦ Инициализация  НП_T_MAX_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_T_MAX, НП_T_MAX_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_H_MAX_ДУ в ДУ               =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_H_MAX_ДУ{
 ИЗ ПРОЦ Инициализация  НП_H_MAX_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_H_MAX, НП_H_MAX_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_H_MIN_ДУ в ДУ               =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_H_MIN_ДУ{
 ИЗ ПРОЦ Инициализация  НП_H_MIN_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_H_MIN, НП_H_MIN_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_WIDTH_PEAK_MAX_ДУ в ДУ      =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_WIDTH_PEAK_MAX_ДУ{
 ИЗ ПРОЦ Инициализация  НП_WIDTH_PEAK_MAX_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_WIDTH_PEAK_MAX, НП_WIDTH_PEAK_MAX_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_ADAPT_LENGTH_ДУ в ДУ        =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_ADAPT_LENGTH_ДУ{
 ИЗ ПРОЦ Инициализация  НП_ADAPT_LENGTH_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_ADAPT_LENGTH, НП_ADAPT_LENGTH_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_KOL_KALIBR_ДУ в ДУ          =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_KOL_KALIBR_ДУ{
 ИЗ ПРОЦ Инициализация  НП_KOL_KALIBR_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_KOL_KALIBR, НП_KOL_KALIBR_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_NLINE1_ДУ в ДУ              =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_NLINE1_ДУ{
 ИЗ ПРОЦ Инициализация  НП_NLINE1_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_NLINE1, НП_NLINE1_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_NLINE2_ДУ в ДУ              =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_NLINE2_ДУ{
 ИЗ ПРОЦ Инициализация  НП_NLINE2_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_NLINE2, НП_NLINE2_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_RELATIV_QUALITY_ДУ в ДУ     =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_RELATIV_QUALITY_ДУ{
 ИЗ ПРОЦ Инициализация  НП_RELATIV_QUALITY_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_RELATIV_QUALITY, НП_RELATIV_QUALITY_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_MIN_SIGN_RANGE_ДУ в ДУ      =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_MIN_SIGN_RANGE_ДУ{
 ИЗ ПРОЦ Инициализация  НП_MIN_SIGN_RANGE_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_MIN_SIGN_RANGE, НП_MIN_SIGN_RANGE_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_MIDDLE_ДУ в ДУ              =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_MIDDLE_ДУ{
 ИЗ ПРОЦ Инициализация  НП_MIDDLE_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_MIDDLE, НП_MIDDLE_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_MIDDLE_SIGN_ДУ в ДУ         =*/
/*=    643.АЭ1610.10000 Д2.0                   =*/
/*==============================================*/
ПРОЦ ПередачаНП_MIDDLE_SIGN_ДУ{
 ИЗ ПРОЦ Инициализация  НП_MIDDLE_SIGN_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_MIDDLE_SIGN, НП_MIDDLE_SIGN_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BAD_NUMB_ДУ в ДУ            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BAD_NUMB_ДУ{
 ИЗ ПРОЦ Инициализация  НП_BAD_NUMB_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_BAD_NUMB, НП_BAD_NUMB_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=  Передача НП_CORRECT_LEVEL_LASER_1_ДУ в ДУ =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_CORRECT_LEVEL_LASER_1_ДУ{
 ИЗ ПРОЦ Инициализация  НП_CORRECT_LEVEL_LASER_1_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_CORRECT_LEVEL_LASER_1, НП_CORRECT_LEVEL_LASER_1_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_EXPOSURE_TIME0_ДУ в ДУ      =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_EXPOSURE_TIME0_ДУ{
 ИЗ ПРОЦ Инициализация  НП_EXPOSURE_TIME0_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME0, НП_EXPOSURE_TIME0_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_EXPOSURE_TIME1_ДУ в ДУ      =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_EXPOSURE_TIME1_ДУ{
 ИЗ ПРОЦ Инициализация  НП_EXPOSURE_TIME1_ДУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME1, НП_EXPOSURE_TIME1_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=                                            =*/
/*= ПРОЦЕССЫ ПЕРЕДАЧИ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   =*/
/*=     ТЕЛЕВИЗИОННОМУ ДАТЧИКУ ДИАМЕТРА        =*/
/*=        643.АЭ1610.10000 Д2.0               =*/
/*=                                            =*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*=    Передача НП_XTOLER в ТДД                =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_XTOLER{
 ИЗ ПРОЦ Инициализация  НП_XTOLER;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_XTOLER, НП_XTOLER)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_YTOLER в ТДД                =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_YTOLER{
 ИЗ ПРОЦ Инициализация  НП_YTOLER;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_YTOLER, НП_YTOLER)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_YDOWNTOLER в ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_YDOWNTOLER{
 ИЗ ПРОЦ Инициализация  НП_YDOWNTOLER;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_YDOWNTOLER, НП_YDOWNTOLER)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_NUMOFSTR в ТДД              =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_NUMOFSTR{
 ИЗ ПРОЦ Инициализация  НП_NUMOFSTR;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_NUMOFSTR, НП_NUMOFSTR)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_THRRELIAB в ТДД             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_THRRELIAB{
 ИЗ ПРОЦ Инициализация  НП_THRRELIAB;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_THRRELIAB, НП_THRRELIAB)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_THRDERIV в ТДД              =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_THRDERIV{
 ИЗ ПРОЦ Инициализация  НП_THRDERIV;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_THRDERIV, НП_THRDERIV)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_THRDERIVCLB в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_THRDERIVCLB{
 ИЗ ПРОЦ Инициализация  НП_THRDERIVCLB;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_THRDERIVCLB, НП_THRDERIVCLB)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGZERO_LVL в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGZERO_LVL{
 ИЗ ПРОЦ Инициализация  НП_BIGZERO_LVL;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGZERO_LVL, НП_BIGZERO_LVL)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGPLUS_LVL в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGPLUS_LVL{
 ИЗ ПРОЦ Инициализация  НП_BIGPLUS_LVL;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGPLUS_LVL, НП_BIGPLUS_LVL)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLZERO_LVL в ТДД         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLZERO_LVL{
 ИЗ ПРОЦ Инициализация  НП_SMALLZERO_LVL;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLZERO_LVL, НП_SMALLZERO_LVL)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLPLUS_LVL в ТДД         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLPLUS_LVL{
 ИЗ ПРОЦ Инициализация  НП_SMALLPLUS_LVL;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLPLUS_LVL, НП_SMALLPLUS_LVL)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_MINAVERTIME в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_MINAVERTIME{
 ИЗ ПРОЦ Инициализация  НП_MINAVERTIME;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_MINAVERTIME, НП_MINAVERTIME)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_BIGZERO_CTG в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGZERO_CTG{
 ИЗ ПРОЦ Инициализация  НП_BIGZERO_CTG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGZERO_CTG_НАЧАЛО_ПЕРЕДАЧИ, НП_BIGZERO_CTG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGZERO_KY в ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_BIGZERO_KY{
 ИЗ ПРОЦ Инициализация  НП_BIGZERO_KY;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGZERO_KY, НП_BIGZERO_KY)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGZERO_X в ТДД             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGZERO_X{
 ИЗ ПРОЦ Инициализация  НП_BIGZERO_X;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGZERO_X, НП_BIGZERO_X)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGZERO_TG в ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGZERO_TG{
 ИЗ ПРОЦ Инициализация  НП_BIGZERO_TG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGZERO_TG, НП_BIGZERO_TG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_BIGPLUS_CTG в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGPLUS_CTG{
 ИЗ ПРОЦ Инициализация  НП_BIGPLUS_CTG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGPLUS_CTG, НП_BIGPLUS_CTG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGPLUS_KY в ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGPLUS_KY{
 ИЗ ПРОЦ Инициализация  НП_BIGPLUS_KY;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGPLUS_KY, НП_BIGPLUS_KY)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGPLUS_X в ТДД             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGPLUS_X{
 ИЗ ПРОЦ Инициализация  НП_BIGPLUS_X;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGPLUS_X, НП_BIGPLUS_X)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_BIGPLUS_TG в ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_BIGPLUS_TG{
 ИЗ ПРОЦ Инициализация  НП_BIGPLUS_TG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_BIGPLUS_TG, НП_BIGPLUS_TG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLZERO_CTG в ТДД         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLZERO_CTG{
 ИЗ ПРОЦ Инициализация  НП_SMALLZERO_CTG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLZERO_CTG, НП_SMALLZERO_CTG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLZERO_KY в ТДД          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLZERO_KY{
 ИЗ ПРОЦ Инициализация  НП_SMALLZERO_KY;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLZERO_KY, НП_SMALLZERO_KY)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLZERO_X в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLZERO_X{
 ИЗ ПРОЦ Инициализация  НП_SMALLZERO_X;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLZERO_X, НП_SMALLZERO_X)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLZERO_TG в ТДД          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ ПередачаНП_SMALLZERO_TG{
 ИЗ ПРОЦ Инициализация  НП_SMALLZERO_TG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLZERO_TG, НП_SMALLZERO_TG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_SMALLPLUS_CTG в ТДД         =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_SMALLPLUS_CTG{
 ИЗ ПРОЦ Инициализация  НП_SMALLPLUS_CTG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLPLUS_CTG, НП_SMALLPLUS_CTG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLPLUS_KY в ТДД          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_SMALLPLUS_KY{
 ИЗ ПРОЦ Инициализация  НП_SMALLPLUS_KY;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLPLUS_KY, НП_SMALLPLUS_KY)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLPLUS_X в ТДД           =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_SMALLPLUS_X{
 ИЗ ПРОЦ Инициализация  НП_SMALLPLUS_X;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLPLUS_X, НП_SMALLPLUS_X)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    Передача НП_SMALLPLUS_TG в ТДД          =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_SMALLPLUS_TG{
 ИЗ ПРОЦ Инициализация  НП_SMALLPLUS_TG;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ИЗМН_НП_SMALLPLUS_TG_ПОСЛЕДНИЙ_ПАРАМЕТР, НП_SMALLPLUS_TG)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_ВремяОсреднения_ДТН в ДТН   =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_ВремяОсреднения_ДТН{
 ИЗ ПРОЦ Инициализация  НП_ВремяОсреднения_ДТН;

 СОСТ Начало{
     ЕСЛИ (SendMsgLongParamDTN(ПК_ДТН_ИЗМН_НП_ВремяОсреднения_ДТН, НП_ВремяОсреднения_ДТН)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиСДатчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСДатчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН)) {
         DisableChannel_DTN();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*=    Передача НП_ВремяОсреднения_ДТР в ДТР   =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/

ПРОЦ ПередачаНП_ВремяОсреднения_ДТР{
 ИЗ ПРОЦ Инициализация  НП_ВремяОсреднения_ДТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgLongParamDTR(ПК_ДТР_ИЗМН_НП_ВремяОсреднения_ДТР, НП_ВремяОсреднения_ДТР)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР В СОСТ НарушениеСвязиСДатчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиСДатчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР)) {
         DisableChannel_DTR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}



/*==============================================================*/
/*=    ПередачаНП_НижняяГраницаRн_ИП2К_К1 в ИП                  =*/
/*=           643.АЭ1610.10000 Д2.0           !!!НЕ ИСПОЛЬЗУЕТСЯ                 =*/
/*==============================================================*/
/* ИП_ЛИТ */
ПРОЦ ПередачаНП_НижняяГраницаRн_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_НижняяГраницаRн_ИП2К_К1;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_НП_НижняяГраницаRн_ИП2К_К1,
                                    НП_НижняяГраницаRн_ИП2К_К1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================================*/
/*=    ПередачаНП_ВерхняяГраницаRн_ИП2К_К1 в ИП    =*/
/*=           643.АЭ1610.10000 Д2.0       !!!НЕ ИСПОЛЬЗУЕТСЯ                     =*/
/*==============================================================*/
/* ИП_ЛИТ */
ПРОЦ ПередачаНП_ВерхняяГраницаRн_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ВерхняяГраницаRн_ИП2К_К1;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_НП_ВерхняяГраницаRн_ИП2К_К1,
                        НП_ВерхняяГраницаRн_ИП2К_К1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*=    ПередачаНП_ТокЗащитыМодуля_ИП2К_К1 в ИП            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
/* ИП_ЛИТ */
ПРОЦ ПередачаНП_ТокЗащитыМодуля_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ТокЗащитыМодуля_ИП2К_К1;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_НП_ТокЗащитыМодуля_ИП2К_К1, НП_ТокЗащитыМодуля_ИП2К_К1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*= ПередачаНП_СкоростьИзменения_W_ИП2К_К1 в ИП   =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
/* ИП_ЛИТ */
ПРОЦ ПередачаНП_СкоростьИзменения_W_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_СкоростьИзменения_W_ИП2К_К1;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_НП_СкоростьИзменения_W_ИП2К_К1,
            НП_СкоростьИзменения_W_ИП2К_К1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*===============================================*/
/*= ПередачаНП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ в ИП =*/
/*=           643.АЭ1610.10000 Д2.0    !!!НЕ ИСПОЛЬЗУЕТСЯ         =*/
/*===============================================*/
/* ИП_ЛИТ */
ПРОЦ ПередачаНП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ{
 ИЗ ПРОЦ Инициализация НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ, НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*==============================================*/
/*=                                            =*/
/*= ПРОЦЕССЫ ПЕРЕДАЧИ НАСТРОЕЧНЫХ ПАРАМЕТРОВ   =*/
/*=             ДАТЧИКУ УРОВНЯ                 =*/
/*=        643.АЭ1610.10000 Д2.?               =*/
/*=                                            =*/
/*=   МОЖЕТ И ДЛЯ ДРУГИХ ЗДЕСЬ ПОМЕСТИТЬ?      =*/
/*=   а у нас есть: ПИВ,ВПО, ДТН, ТДД, ДУ,     =*/
/*=   ИП1К....                                 =*/
/*==============================================*/
/*==============================================*/


/*================================================*/
/*================================================*/
/*==   Запуск индивидуальных процессов          ==*/
/*==   обработки команд по устройствам          ==*/
/*==          643.АЭ1610.10000 Д2               ==*/
/*================================================*/
/*================================================*/
ПРОЦ ЗапускОбработкиКомандОтУстройств{
 СОСТ Начало{
    СТАРТ ПРОЦ ОбработкаКомандОтВПО;
    СТАРТ ПРОЦ ОбработкаКомандОтЗР;
    СТАРТ ПРОЦ ОбработкаКомандОтЗУ;
    СТАРТ ПРОЦ ОбработкаКомандОтЗВ;
    СТАРТ ПРОЦ ОбработкаКомандОтТР;
    СТАРТ ПРОЦ ОбработкаКомандОтТУ;
    СТАРТ ПРОЦ ОбработкаКомандОтТВ;
    СТАРТ ПРОЦ ОбработкаКомандОтДУ;
    СТАРТ ПРОЦ ОбработкаКомандОтТДД;
    СТАРТ ПРОЦ ОбработкаКомандОтДТН;
    СТАРТ ПРОЦ ОбработкаКомандОтДТР;
    СТАРТ ПРОЦ ОбработкаКомандОтИП2К_К1;  /* ИП_ЛИТ*/
/*    СТАРТ ПРОЦ ОбработкаКомандОтИП2К_К2; ДОБАВИТЬдобавлено */
    СТОП;
 }
}

/*================================================*/
/*=          Обработка команд от ВПО            ==*/
/*=           643.АЭ1610.10000 Д2.38            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтВПО{
ИЗ ПРОЦ Инициализация ФлагВПО,
                      ЗД_VзР,
                      ЗД_VзУ,
                      ЗД_VтР,
                      ЗД_VтУ,
                      ЗД_Wз,
                      ЗД_Wт,
                      ЗД_Тн;       /* */

ЦЕЛ ЛП_КодСообщенияДляПИВОтВПО ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды          ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgVPO()) {
          ЛП_КодКоманды = GetMsgVPOCode();
          ЕСЛИ (ФлагВПО) В СОСТ РазборКодаКомандыОтВПО;
          ИНАЧЕ {
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ВПО_ИНИЦИАЛИЗАЦИЯ:
                   СЛУЧАЙ ПК_ВПО_ВКЛ_ВПО:
                   СЛУЧАЙ ПК_ВПО_ВЫК_ВПО:
                        В СОСТ РазборКодаКомандыОтВПО;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        КОНЕЦ;
              } /* конец разбора */
          }
    }
 }

 СОСТ РазборКодаКомандыОтВПО{
    В СОСТ Начало;
    РАЗБОР (ЛП_КодКоманды) {
         СЛУЧАЙ ПК_ВПО_ИНИЦИАЛИЗАЦИЯ:
              СТАРТ ПРОЦ КонтрольСостоянияРегуляторов;
              СТАРТ ПРОЦ ЗапускПроцессовКонтроляИзмененияЗаданий;   /* рестарт */
              ЛП_КодСообщенияДляПИВОтВПО = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ВПО;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ВКЛ_ВПО:
              ЛП_КодСообщенияДляПИВОтВПО = ВКЛ_ВПО;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ВЫК_ВПО:
              ЛП_КодСообщенияДляПИВОтВПО = ВЫК_ВПО;
              В СОСТ Передача_ВКЛ_ВПО;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_VзР:
              ЗД_VзР = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_VзУ:
              ЗД_VзУ = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_VтР:
              ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ)
                  В СОСТ ПередачаПИВСообщенияОбИгнорированииЗД_VзР;
              ИНАЧЕ  ЗД_VтР = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_VтУ:
              ЗД_VтУ = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_Wз:
              ЗД_Wз = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_Wт:
              ЗД_Wт = GetFloatParamVPO();
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ИЗМН_ЗД_Тн:
              ЗД_Тн = GetFloatParamVPO();
              КОНЕЦ;
          /* Управление регуляторами  */


         СЛУЧАЙ ПК_ВПО_ЗАТ_РС:    /* регулятор VзРабочаяСкорость  */
              СТАРТ ПРОЦ ЗАТ_РС;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ЗАТ_УС:    /* регулятор VзУкореннаяСкорость */
              СТАРТ ПРОЦ ЗАТ_УС;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ВЫК_РЕГ_Vз:      /* выключение регулятора Vз */
              СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ТИГ_РС:    /* регулятор VтРабочаяСкорость  */
              СТАРТ ПРОЦ ТИГ_РС;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ТИГ_УС:    /* регулятор VтУскореннаяСкорость */
              СТАРТ ПРОЦ ТИГ_УС;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ВЫК_РЕГ_Vт:      /* выключение регулятора Vт */
              СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ЗАТ_ВР:      /* вращение затравки */
              СТАРТ ПРОЦ ЗАТ_ВР;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ВЫК_ЗАТ_ВР:      /* вращение затравки */
              СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
              КОНЕЦ;

         СЛУЧАЙ ПК_ВПО_ТИГ_ВР:      /* вращение тигля */
              СТАРТ ПРОЦ ТИГ_ВР;
              КОНЕЦ;
         СЛУЧАЙ ПК_ВПО_ВЫК_ТИГ_ВР:  /* вращение тигля */
              СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
              КОНЕЦ;

         УМОЛЧАНИЕ:
              В СОСТ НекорректноеСобытие;
              КОНЕЦ;
     } /* конец разбора */
 }
 СОСТ ПередачаПИВСообщенияОбИгнорированииЗД_VзР {
    ЕСЛИ (SendMsgPIVCode(РЕГ_УР_АКТИВЕН__КОМ_ВПО_ИЗМН_ЗД_VзР_ИГНОР))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтВПО))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ Передача_ВКЛ_ВПО{
   ЕСЛИ (ФлагВПО) {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВКЛ_ВПО)) В СОСТ ПередачаСообщенияПИВоВКЛ_ВПО;
   }
   ИНАЧЕ В СОСТ ПередачаСообщенияПИВоВКЛ_ВПО;

   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ НарушениеСвязиСВПО{
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаСообщенияПИВоВКЛ_ВПО{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтВПО))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;


 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ВПО, ЛП_КодКоманды))
        В СОСТ  Начало;
 }
 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

} /*============= Конец процесса ОбработкаКомандОтВПО*/


/*================================================*/
/*=          Обработка команд от ЗР             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтЗР{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ЗР,
                      ФлагРегулятора_X_ЗР,
                      К_КВП_З,
                      К_КНП_З;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды        ЛОКАЛ;
 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgZR()) {
          ЛП_КодКоманды = GetMsgZRCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ЗР_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ЗР = ВЫКЛ;
                        ФлагРегулятора_X_ЗР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗР;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ЗР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ЗР = ВЫКЛ;
                        ФлагРегулятора_X_ЗР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ЗР = ВЫКЛ;
                        ФлагРегулятора_X_ЗР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_НАЕЗД_НА_КВП:
                        СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; /*добавитьдобавлено*/
                        К_КВП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_НАЕЗД_НА_КНП:
                        СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; /*добавитьдобавлено*/
                        К_КНП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_СЪЕЗД_С_ДКП:
                        К_КНП_З = ВЫКЛ;
                        К_КВП_З = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ЗР = ВКЛ;
                        ФлагРегулятора_X_ЗР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ЗР = ВЫКЛ;
                        ФлагРегулятора_X_ЗР = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗР_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ЗР = ВЫКЛ;
                        ФлагРегулятора_X_ЗР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗР;
			               ЛП_КодПараметраДляПИВ = GetFloatParamZR();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗР;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтЗР   */


/*================================================*/
/*=          Обработка команд от ЗУ             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтЗУ{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ЗУ,
                      ФлагРегулятора_X_ЗУ,
                      К_КВП_З,
                      К_КНП_З;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды        ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgZU()) {
          ЛП_КодКоманды = GetMsgZUCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ЗУ_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ЗУ = ВЫКЛ;
                        ФлагРегулятора_X_ЗУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗУ;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ЗУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ЗУ = ВЫКЛ;
                        ФлагРегулятора_X_ЗУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ЗУ = ВЫКЛ;
                        ФлагРегулятора_X_ЗУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_НАЕЗД_НА_КВП:
                        СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; /*добавитьдобавлено*/
                        К_КВП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_НАЕЗД_НА_КНП:
                        СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; /*добавитьдобавлено*/
                        К_КНП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_СЪЕЗД_С_ДКП:
                        К_КНП_З = ВЫКЛ;
                        К_КВП_З = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ЗУ = ВКЛ;
                        ФлагРегулятора_X_ЗУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ЗУ = ВЫКЛ;
                        ФлагРегулятора_X_ЗУ = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗУ_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ЗУ = ВЫКЛ;
                        ФлагРегулятора_X_ЗУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗУ;
                        ЛП_КодПараметраДляПИВ = GetFloatParamZU();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗУ;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтЗУ   */


/*================================================*/
/*=          Обработка команд от ЗВ             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтЗВ{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ЗВ,
                      ФлагРегулятора_X_ЗВ,
                      К_КВП_З,
                      К_КНП_З;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgZV()) {
          ЛП_КодКоманды = GetMsgZVCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ЗВ_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ЗВ;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ЗВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ЗВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ЗВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
/*                   СЛУЧАЙ ПК_ЗВ_НАЕЗД_НА_КВП:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        К_КВП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_НАЕЗД_НА_КНП:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        К_КНП_З = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_СЪЕЗД_С_ДКП:
                        К_КНП_З = ВЫКЛ;
                        К_КВП_З = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_З;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
*/ /*добавлено*/
                   СЛУЧАЙ ПК_ЗВ_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ЗВ = ВКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ЗВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ЗВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ЗВ_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ЗВ = ВЫКЛ;
                        ФлагРегулятора_X_ЗВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗВ;
			ЛП_КодПараметраДляПИВ = GetFloatParamZV();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ЗВ;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтЗВ   */

/*================================================*/
/*=          Обработка команд от ТР             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтТР{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ТР,
                      ФлагРегулятора_X_ТР,
                      К_КВП_Т,
                      К_КНП_Т;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgTR()) {
          ЛП_КодКоманды = GetMsgTRCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ТР_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ТР = ВЫКЛ;
                        ФлагРегулятора_X_ТР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТР;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ТР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ТР = ВЫКЛ;
                        ФлагРегулятора_X_ТР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ТР = ВЫКЛ;
                        ФлагРегулятора_X_ТР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_НАЕЗД_НА_КВП:
                        СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ; /*добавитьдобавлено*/
                        К_КВП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_НАЕЗД_НА_КНП:
                        СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ; /*добавитьдобавлено*/
                        К_КНП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_СЪЕЗД_С_ДКП:
                        К_КНП_Т = ВЫКЛ;
                        К_КВП_Т = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ТР = ВКЛ;
                        ФлагРегулятора_X_ТР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ТР = ВЫКЛ;
                        ФлагРегулятора_X_ТР = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТР;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТР_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ТР = ВЫКЛ;
                        ФлагРегулятора_X_ТР = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТР;
			ЛП_КодПараметраДляПИВ = GetFloatParamTR();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТР;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтТР   */


/*================================================*/
/*=          Обработка команд от ТУ             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтТУ{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ТУ,
                      ФлагРегулятора_X_ТУ,
                      К_КВП_Т,
                      К_КНП_Т;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgTU()) {
          ЛП_КодКоманды = GetMsgTUCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ТУ_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ТУ = ВЫКЛ;
                        ФлагРегулятора_X_ТУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТУ;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ТУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ТУ = ВЫКЛ;
                        ФлагРегулятора_X_ТУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ТУ = ВЫКЛ;
                        ФлагРегулятора_X_ТУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_НАЕЗД_НА_КВП:
                        СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ; /*добавитьдобавлено*/
                        К_КВП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_НАЕЗД_НА_КНП:
                        СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ; /*добавитьдобавлено*/
                        К_КНП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_СЪЕЗД_С_ДКП:
                        К_КНП_Т = ВЫКЛ;
                        К_КВП_Т = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ТУ = ВКЛ;
                        ФлагРегулятора_X_ТУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ТУ = ВЫКЛ;
                        ФлагРегулятора_X_ТУ = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТУ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТУ_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ТУ = ВЫКЛ;
                        ФлагРегулятора_X_ТУ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТУ;
			ЛП_КодПараметраДляПИВ = GetFloatParamTU();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТУ;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтТУ   */

/*================================================*/
/*=          Обработка команд от ТВ             ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтТВ{
ИЗ ПРОЦ Инициализация
                      ФлагРегулятора_V_ТВ,
                      ФлагРегулятора_X_ТВ,
                      К_КВП_Т,
                      К_КНП_Т;

ЦЕЛ ЛП_КодСообщенияДляПИВ ЛОКАЛ;
ПЛАВ ЛП_КодПараметраДляПИВ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgTV()) {
          ЛП_КодКоманды = GetMsgTVCode();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ТВ_ИНИЦИАЛИЗАЦИЯ:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТВ;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ТВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_ГОТОВ_К_РАБОТЕ:
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_ОТКАЗ_ДВИГАТЕЛЯ:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДВИГАТЕЛЯ_ТВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_ОТКАЗ_ДАТЧИКА:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОТКАЗ_ДАТЧИКА_ТВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
/*                   СЛУЧАЙ ПК_ТВ_НАЕЗД_НА_КВП:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        К_КВП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КВП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_НАЕЗД_НА_КНП:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        К_КНП_Т = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЕЗД_НА_КНП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_СЪЕЗД_С_ДКП:
                        К_КНП_Т = ВЫКЛ;
                        К_КВП_Т = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_СЪЕЗД_С_ДКП_Т;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
*/ /*добавлено*/
                   СЛУЧАЙ ПК_ТВ_НАЧАЛО_ДВИЖЕНИЯ_V:
                        ФлагРегулятора_V_ТВ = ВКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_V_ТВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_НАЧАЛО_ДВИЖЕНИЯ_X:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НАЧАЛО_ДВИЖЕНИЯ_X_ТВ;
                        В СОСТ ПередачаСообщенияПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ТВ_ОСТАНОВ_ДВИЖЕНИЯ:
                        ФлагРегулятора_V_ТВ = ВЫКЛ;
                        ФлагРегулятора_X_ТВ = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ТВ;
                        ЛП_КодПараметраДляПИВ = GetFloatParamTV();
                        В СОСТ ПередачаСообщенияСКодомОшибкиПИВ;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_V_ТВ;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }

 СОСТ ПередачаСообщенияПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияСКодомОшибкиПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВ, ЛП_КодПараметраДляПИВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
        В СОСТ  Начало;
 }

}  /* конец ПРОЦ ОбработкаКомандОтТВ   */


/*==============================================*/
/*==   Передача сообщения в ЗР для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ЗР{
 СОСТ Начало{
    ЕСЛИ (SendMsgZRCode(ПК_ЗР_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ЗУ для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ЗУ{
 СОСТ Начало{
    ЕСЛИ (SendMsgZUCode(ПК_ЗУ_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗУ)) {
         DisableChannel_ZU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ЗВ для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ЗВ{
 СОСТ Начало{
    ЕСЛИ (SendMsgZVCode(ПК_ЗВ_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ЗВ)) {
         DisableChannel_ZV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ТР для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ТР{
 СОСТ Начало{
    ЕСЛИ (SendMsgTRCode(ПК_ТР_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ТУ для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ТУ{
 СОСТ Начало{
    ЕСЛИ (SendMsgTUCode(ПК_ТУ_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТУ)) {
         DisableChannel_TU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ТВ для сброса     ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.31          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ТВ{
 СОСТ Начало{
    ЕСЛИ (SendMsgTVCode(ПК_ТВ_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиС_Приводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Приводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТВ)) {
         DisableChannel_TV();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*================================================*/
/*=          Обработка команд от ДУ             ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтДУ{
ИЗ ПРОЦ Инициализация
                      ФП_ТочкиДля_ДУ,
                      ФлагHур_ДУ;

ЦЕЛ СчетчикРестартовДУ ДЛЯ ПРОЦ КонтрольРестартовДУ;
ЦЕЛ ЛП_КодСообщенияДляПИВОтДУ ЛОКАЛ;
ПЛАВ ЛП_ПараметрДляПИВОтДУ ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgDU()) {
          ЛП_КодКоманды = GetMsgDUCode();
          В СОСТ РазборКодаКомандыОтДУ;
    }
 }
 СОСТ РазборКодаКомандыОтДУ {
    РАЗБОР (ЛП_КодКоманды) {
         СЛУЧАЙ ПК_ДУ_ИНИЦИАЛИЗАЦИЯ:
              ЕСЛИ (ПРОЦ КонтрольРестартовДУ В СОСТ ПАССИВНОЕ) { /* добавлено*/
                  СчетчикРестартовДУ = 0;
                  СТАРТ ПРОЦ КонтрольРестартовДУ; 
              } ИНАЧЕ { 
                  СчетчикРестартовДУ++;
              }
              ЛП_КодСообщенияДляПИВОтДУ = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДУ;
              СТАРТ ПРОЦ СбросБитаИнициализацииВ_ДУ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
/*ДУ*/ СЛУЧАЙ ПК_ДУ_ГОТОВ_К_РАБОТЕ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_ГОТОВ_К_РАБОТЕ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ДУ_УРОВЕНЬ_ДОСТОВЕРЕН:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_УРОВЕНЬ_ДОСТОВЕРЕН;
              ФлагHур_ДУ = ВКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_УРОВЕНЬ_НЕ_ДОСТОВЕРЕН:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_УРОВЕНЬ_НЕ_ДОСТОВЕРЕН;
              ФлагHур_ДУ = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_УСПЕШНА:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_УСПЕШНА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_НЕ_УСПЕШНА:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_0_НЕ_УСПЕШНА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_УСПЕШНА:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_УСПЕШНА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_НЕ_УСПЕШНА:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_АДАПТАЦИЯ_ЛАЗЕРА_1_НЕ_УСПЕШНА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_НАЧАЛО_КАЛИБРОВКИ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_НАЧАЛО_КАЛИБРОВКИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_КАЛИБРОВКА_ВЫПОЛНЯЕТСЯ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_КАЛИБРОВКА_ВЫПОЛНЯЕТСЯ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_КОНЕЦ_КАЛИБРОВКИ_ПО_ТОЧКЕ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_КОНЕЦ_КАЛИБРОВКИ_ПО_ТОЧКЕ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ДУ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ДУ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_РЕЖИМ_ИЗМЕРЕНИЯ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_РЕЖИМ_ИЗМЕРЕНИЯ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_КОД_РЕСТАРТА:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_КОД_РЕСТАРТА;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_РЕЖИМ_АДАПТАЦИИ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_РЕЖИМ_АДАПТАЦИИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ИЗМН_НП_AH_НАЧАЛО_ПЕРЕДАЧИ:
              ЛП_КодСообщенияДляПИВОтДУ = ИЗМН_НП_AH_ДУ;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ИЗМН_НП_BH:
              ЛП_КодСообщенияДляПИВОтДУ = ИЗМН_НП_BH_ДУ;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ИЗМН_НП_CH_ПОСЛЕДНИЙ_ПАРАМЕТР:
              СТОП ПРОЦ СнятиеКоэффициентовКалибровкиИзДУ;
              ЛП_КодСообщенияДляПИВОтДУ = ИЗМН_НП_CH_ДУ;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ_иСообщенияОКонцеПередачиКоэф;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME0:
              СТОП ПРОЦ СнятиеВремениЭкспозицииЛазера0;
              ЛП_КодСообщенияДляПИВОтДУ = ИЗМН_НП_EXPOSURE_TIME0_ДУ;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ_Экспозиции_иСообщенияОКонце;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME1:
              СТОП ПРОЦ СнятиеВремениЭкспозицииЛазера1;
              ЛП_КодСообщенияДляПИВОтДУ = ИЗМН_НП_EXPOSURE_TIME1_ДУ;
              ЛП_ПараметрДляПИВОтДУ =  GetFloatParamDU();
              В СОСТ ПередачаКодаИ_ПараметраПИВ_Экспозиции_иСообщенияОКонце;
              КОНЕЦ;
/*ДУ*/
         УМОЛЧАНИЕ:
              ЛП_КодСообщенияДляПИВОтДУ = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДУ;
              В СОСТ ПередачаСообщенияСПараметромПИВ;
              КОНЕЦ;
     } /* конец разбора */
 }

 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтДУ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтДУ, ЛП_ПараметрДляПИВОтДУ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ_иСообщенияОКонцеПередачиКоэф{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтДУ, ЛП_ПараметрДляПИВОтДУ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияОКонце{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_КОНЕЦ_СНЯТИЯ_КОЭФФИЦИЕНТОВ))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ_Экспозиции_иСообщенияОКонце{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтДУ, ЛП_ПараметрДляПИВОтДУ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияОКонцеЭкспозици{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_КОНЕЦ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗИЦИИ_ЛАЗЕРА))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВОтДУ, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*================================================*/
/*=          Контроль Рестартов от ДУ           ==*/
/*=  Устранение головокружительных глюков ДУ    ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/

ПРОЦ КонтрольРестартовДУ{                 /*  добавлено*/
ИЗ ПРОЦ ОбработкаКомандОтДУ  СчетчикРестартовДУ;

 СОСТ Начало{
    ЕСЛИ (СчетчикРестартовДУ > 2) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ДВЕ_МИНУТЫ СТОП;
 }
 СОСТ Сообщение{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_РЕСТАРТЫ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтключениеДатчика{
    СТОП ПРОЦ ВосстановлениеСвязиС_ДУ;
    DisableChannel_DU(); /* отключение канала из системы */
    СТОП;
 }   
}

/*================================================*/
/*=          Обработка команд от ТДД            ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтТДД{
ИЗ ПРОЦ Инициализация
                      ФлагDкр_ТДД;

ЦЕЛ СчетчикРестартовТДД ДЛЯ ПРОЦ КонтрольРестартовТДД;
ЦЕЛ ЛП_КодСообщенияДляПИВОтТДД ЛОКАЛ;
ПЛАВ ЛП_ПараметрДляПИВОтТДД ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgTDD()) {
          ЛП_КодКоманды = GetMsgTDDCode();
          В СОСТ РазборКодаКомандыОтТДД;
    }
 }

 СОСТ РазборКодаКомандыОтТДД{
    РАЗБОР (ЛП_КодКоманды) {
         СЛУЧАЙ ПК_ТДД_ИНИЦИАЛИЗАЦИЯ:
              ЕСЛИ (ПРОЦ КонтрольРестартовТДД В СОСТ ПАССИВНОЕ) { /* добавлено */
                  СчетчикРестартовТДД = 0;
                  СТАРТ ПРОЦ КонтрольРестартовТДД; 
              } ИНАЧЕ { 
                  СчетчикРестартовТДД++;
              }
              ЛП_КодСообщенияДляПИВОтТДД = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ТДД;
              СТАРТ ПРОЦ СбросБитаИнициализацииВ_ТДД;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ГОТОВ_К_РАБОТЕ:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ГОТОВ_К_РАБОТЕ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ОШИБКА_ФАТАЛЬНАЯ:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ОШИБКА_ФАТАЛЬНАЯ;
              ФлагDкр_ТДД = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КОД_РЕСТАРТА:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КОД_РЕСТАРТА;
              ЛП_ПараметрДляПИВОтТДД = GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_ТЕСТ_ОЗУ:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_ОЗУ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ТЕСТ_ОЗУ_БЕЗ_ОШИБОК:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_ОЗУ_БЕЗ_ОШИБОК;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ОШИБКА_ТЕСТА_ОЗУ:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_ОЗУ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_ПОИСК_ДИАМЕТРА:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ПОИСК_ДИАМЕТРА;
              ФлагDкр_ТДД = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ДИАМЕТР_НЕ_НАЙДЕН:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ДИАМЕТР_НЕ_НАЙДЕН;
              ФлагDкр_ТДД = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ДИАМЕТР_НЕ_ДОСТОВЕРЕН:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ДИАМЕТР_НЕ_ДОСТОВЕРЕН;
              ФлагDкр_ТДД = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ДИАМЕТР_ДОСТОВЕРЕН:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ДИАМЕТР_ДОСТОВЕРЕН;
              ФлагDкр_ТДД = ВКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ТДД:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_НЕСПЕЦИФИЦИРОВАННОЕ_СОСТОЯНИЕ_ТДД;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

        СЛУЧАЙ ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ТЕСТ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ТЕСТ_БП_БЕЗ_ОШИБОК:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_БП_БЕЗ_ОШИБОК;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ОШИБКА_ТЕСТА_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

        СЛУЧАЙ ПК_ТДД_КАМЕРА_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАМЕРА_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_БП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_БП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_БП_ПЛЮС;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;

/*----------------------------*/
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_XTOLER:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_XTOLER;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_YTOLER:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_YTOLER;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_YDOWNTOLER:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_YDOWNTOLER;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_NUMOFSTR:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_NUMOFSTR;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_THRRELIAB:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_THRRELIAB;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_THRDERIV:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_THRDERIV;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_THRDERIVCLB:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_THRDERIVCLB;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGZERO_LVL:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGZERO_LVL;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGPLUS_LVL:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGPLUS_LVL;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLZERO_LVL:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLZERO_LVL;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLPLUS_LVL:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLPLUS_LVL;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_MINAVERTIME:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_MINAVERTIME;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
/*-------------------------- */

         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGZERO_CTG_НАЧАЛО_ПЕРЕДАЧИ:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGZERO_CTG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGZERO_KY:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGZERO_KY;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGZERO_X:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGZERO_X;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGZERO_TG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGZERO_TG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGPLUS_CTG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGPLUS_CTG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGPLUS_KY:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGPLUS_KY;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGPLUS_X:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGPLUS_X;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_BIGPLUS_TG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_BIGPLUS_TG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ТЕСТ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ТЕСТ_МП_БЕЗ_ОШИБОК:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ТЕСТ_МП_БЕЗ_ОШИБОК;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_ОШИБКА_ТЕСТА_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ОШИБКА_ТЕСТА_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
        СЛУЧАЙ ПК_ТДД_КАМЕРА_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАМЕРА_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_РЕЖИМ_КАЛИБРОВКИ_МП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_ЗАВЕРШЕНА_УСПЕШНО_МП_ПЛЮС;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП_ПЛЮС:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_КАЛИБРОВКА_НЕ_УСПЕШНА_МП_ПЛЮС;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;

         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLZERO_CTG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLZERO_CTG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLZERO_KY:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLZERO_KY;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLZERO_X:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLZERO_X;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLZERO_TG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLZERO_TG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLPLUS_CTG:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLPLUS_CTG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLPLUS_KY:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLPLUS_KY;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLPLUS_X:
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLPLUS_X;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ИЗМН_НП_SMALLPLUS_TG_ПОСЛЕДНИЙ_ПАРАМЕТР:
              СТОП ПРОЦ СнятиеКоэффициентовКалибровкиИзТДД;
              ЛП_КодСообщенияДляПИВОтТДД = ИЗМН_НП_SMALLPLUS_TG;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ_иСообщенияОКонце;
              КОНЕЦ;
         СЛУЧАЙ ПК_ТДД_ОШИБКА_ВНУТРЕННЯЯ:       /* добавлено */
              СТАРТ ПРОЦ СбросОшибкиВ_ТДД;
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_ТДД_ОШИБКА_ВНУТРЕННЯЯ;
              ЛП_ПараметрДляПИВОтТДД =  GetFloatParamTDD();
              В СОСТ ПередачаКодаИ_ПараметраПИВ;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              ЛП_КодСообщенияДляПИВОтТДД = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ТДД;
              В СОСТ ПередачаСообщенияСПараметромПИВ;
              КОНЕЦ;
     } /* конец разбора */
 }

 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтТДД))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтТДД, ЛП_ПараметрДляПИВОтТДД))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ_иСообщенияОКонце{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтТДД, ЛП_ПараметрДляПИВОтТДД))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияОКонце{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТДД_КОНЕЦ_СНЯТИЯ_КОЭФФИЦИЕНТОВ))
        В СОСТ Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВОтТДД, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*================================================*/
/*=          Контроль Рестартов от ТДД          ==*/
/*=  Устранение головокружительных глюков ТДД   ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/

ПРОЦ КонтрольРестартовТДД{                 /* добавлено*/
ИЗ ПРОЦ ОбработкаКомандОтТДД  СчетчикРестартовТДД;

 СОСТ Начало{
    ЕСЛИ (СчетчикРестартовТДД > 2) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ДВЕ_МИНУТЫ СТОП;
 }
 СОСТ Сообщение{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТДД_РЕСТАРТЫ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтключениеДатчика{
    СТОП ПРОЦ ВосстановлениеСвязиС_ТДД;
    DisableChannel_TDD(); /* отключение канала из системы */
    СТОП;
 }   
}
/*================================================*/
/*=          Обработка команд от ДТН            ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтДТН{
ИЗ ПРОЦ Инициализация
                      ФлагДТН;

ЦЕЛ ЛП_КодСообщенияДляПИВОтДТН ЛОКАЛ;
ПЛАВ ЛП_ПараметрДляПИВОтДТН ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgDTN()) {
          ЛП_КодКоманды = GetMsgDTNCode();
          В СОСТ РазборКодаКомандыОтДТН;
    }
 }

 СОСТ РазборКодаКомандыОтДТН{
     РАЗБОР (ЛП_КодКоманды) {
         СЛУЧАЙ ПК_ДТН_ИНИЦИАЛИЗАЦИЯ:
              ЛП_КодСообщенияДляПИВОтДТН = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДТН;
              СТАРТ ПРОЦ СбросБитаИнициализацииВ_ДТН;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ГОТОВ_К_РАБОТЕ                  :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ГОТОВ_К_РАБОТЕ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ЗАПУСК_ТЕСТА                    :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ЗАПУСК_ТЕСТА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ТЕСТ_БЕЗ_ОШИБКИ                    :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ТЕСТ_БЕЗ_ОШИБКИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ОШИБКА_ТЕСТА                    :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ОШИБКА_ТЕСТА;
              ФлагДТН = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ОШИБКА_ФАТАЛЬНАЯ                  :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ОШИБКА_ФАТАЛЬНАЯ;
              ФлагДТН = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ                  :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ;
              ФлагДТН = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ;
              ФлагДТН = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ:
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ;
              ФлагДТН = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТН_ТЕМПЕРАТУРА_В_НОРМЕ             :
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_ДТН_ТЕМПЕРАТУРА_В_НОРМЕ;
              ФлагДТН = ВКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              ЛП_КодСообщенияДляПИВОтДТН = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДТН;
              В СОСТ ПередачаСообщенияСПараметромПИВ;
              КОНЕЦ;
     } /* конец разбора */
 }

 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтДТН))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтДТН, ЛП_ПараметрДляПИВОтДТН))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВОтДТН, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }

}

/*================================================*/
/*=          Обработка команд от ДТР            ==*/
/*=           643.АЭ1610.10000 Д2.37            ==*/
/*================================================*/
ПРОЦ ОбработкаКомандОтДТР{
ИЗ ПРОЦ Инициализация
                      ФлагДТР;

ЦЕЛ ЛП_КодСообщенияДляПИВОтДТР ЛОКАЛ;
ПЛАВ ЛП_ПараметрДляПИВОтДТР ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgDTR()) {
          ЛП_КодКоманды = GetMsgDTRCode();
          В СОСТ РазборКодаКомандыОтДТР;
    }
 }

 СОСТ РазборКодаКомандыОтДТР{
     РАЗБОР (ЛП_КодКоманды) {
         СЛУЧАЙ ПК_ДТР_ИНИЦИАЛИЗАЦИЯ:
              ЛП_КодСообщенияДляПИВОтДТР = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ДТР;
              СТАРТ ПРОЦ СбросБитаИнициализацииВ_ДТР;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ГОТОВ_К_РАБОТЕ                  :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ГОТОВ_К_РАБОТЕ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ЗАПУСК_ТЕСТА                    :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ЗАПУСК_ТЕСТА;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ТЕСТ_БЕЗ_ОШИБКИ                    :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ТЕСТ_БЕЗ_ОШИБКИ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ОШИБКА_ТЕСТА                    :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ОШИБКА_ТЕСТА;
              ФлагДТР = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ОШИБКА_ФАТАЛЬНАЯ                  :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ОШИБКА_ФАТАЛЬНАЯ;
              ФлагДТР = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ                  :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ДАННЫЕ_ПО_ТЕМПЕРАТУРЕ_УСТАРЕЛИ;
              ФлагДТР = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_НИЖЕ_МИН_ДОПУСТИМОЙ;
              ФлагДТР = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ:
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_ВЫШЕ_МАКС_ДОПУСТИМОЙ;
              ФлагДТР = ВЫКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         СЛУЧАЙ ПК_ДТР_ТЕМПЕРАТУРА_В_НОРМЕ             :
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_ДТР_ТЕМПЕРАТУРА_В_НОРМЕ;
              ФлагДТР = ВКЛ;
              В СОСТ ПередачаСообщенияДляПИВ;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              ЛП_КодСообщенияДляПИВОтДТР = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ДТР;
              В СОСТ ПередачаСообщенияСПараметромПИВ;
              КОНЕЦ;
     } /* конец разбора */
 }

 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтДТР))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтДТР, ЛП_ПараметрДляПИВОтДТР))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВОтДТР, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=          Обработка команд от ИП2К           ==*/
/*=           643.АЭ1610.10000 Д2.34            ==*/
/*================================================*/
/* ИП_ЛИТ */
ПРОЦ ОбработкаКомандОтИП2К_К1{
ИЗ ПРОЦ Инициализация
                      Флаг_ИП2К_К1;

ЦЕЛ ЛП_КодСообщенияДляПИВОтИП ЛОКАЛ;
ПЛАВ ЛП_ПараметрДляПИВОтИП ЛОКАЛ;
ЦЕЛ ЛП_КодКоманды  ЛОКАЛ;

 СОСТ Начало{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    ЕСЛИ (GetNextMsgIP2K_K1()) {
          ЛП_КодКоманды = GetMsgIP2K_K1Code();
              РАЗБОР (ЛП_КодКоманды) {
                   СЛУЧАЙ ПК_ИП2К_К1_ИНИЦИАЛИЗАЦИЯ:
                        Флаг_ИП2К_К1 = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВОтИП = ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ИП2К_К1;
                        СТАРТ ПРОЦ СбросБитаИнициализацииВ_ИП2К_К1;
                        В СОСТ ПередачаСообщенияДляПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_ГОТОВ_К_РАБОТЕ:
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_ИП2К_К1_ГОТОВ_К_РАБОТЕ;
                        В СОСТ ПередачаСообщенияДляПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_ОТКАЗ:
                        Флаг_ИП2К_К1 = ВЫКЛ;
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_ОТКАЗ_ИП2К_К1;
                        ЛП_ПараметрДляПИВОтИП = GetFloatParamIP2K_K1();
                        В СОСТ ПередачаКодаИ_ПараметраПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_ВКЛЮЧИТЬ:  /* подтверждение о включении ИП */
                        Флаг_ИП2К_К1 = ВКЛ;
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_ВКЛЮЧЕН_ИП2К_К1;
                        В СОСТ ПередачаСообщенияДляПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_ВЫКЛЮЧИТЬ:  /* подтверждение о выключении ИП */
                        Флаг_ИП2К_К1 = ВЫКЛ;
                        ЕСЛИ ((ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) || 
                              (ПРОЦ РЕГ_W_ИПН_К1_ТЕСТОВОЕ В СОСТ АКТИВНОЕ))
                           ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_ОТКАЗ_ИП2К_К1;
                        ИНАЧЕ 
                           ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_ВЫКЛЮЧЕН_ИП2К_К1;
                        ЛП_ПараметрДляПИВОтИП = GetFloatParamIP2K_K1();
                        В СОСТ ПередачаКодаИ_ПараметраПИВ;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_АВТОНОМНЫЙ_РЕЖИМ:  /* ИП сам задает мощность и т.д.*/
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_АВТОНОМНЫЙ_РЕЖИМ_ИП2К_К1;
                        В СОСТ ПередачаСообщенияДляПИВ;;
                        КОНЕЦ;
                   СЛУЧАЙ ПК_ИП2К_К1_НЕАВТОНОМНЫЙ_РЕЖИМ:  /* задает мощность и т.д. от ШПУ*/
                        ЕСЛИ (Флаг_ИП2К_К1) СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1; /*  */
                        ИНАЧЕ СТАРТ ПРОЦ ВЫК_ИПН_К1;
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_НЕАВТОНОМНЫЙ_РЕЖИМ_ИП2К_К1;
                        В СОСТ ПередачаСообщенияДляПИВ;;
                        КОНЕЦ;
                   УМОЛЧАНИЕ:
                        ЛП_КодСообщенияДляПИВОтИП = ПК_ПИВ_НЕИЗВЕСТНЫЙ_КОД_ИП2К_К1;
                        В СОСТ ПередачаСообщенияСПараметромПИВ;
                        КОНЕЦ;
              } /* конец разбора */
    }
 }
 СОСТ ПередачаСообщенияДляПИВ{
    ЕСЛИ (SendMsgPIVCode(ЛП_КодСообщенияДляПИВОтИП))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКодаИ_ПараметраПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСообщенияДляПИВОтИП, ЛП_ПараметрДляПИВОтИП))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ ПередачаСообщенияСПараметромПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСообщенияДляПИВОтИП, ЛП_КодКоманды))
        В СОСТ  Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }

}


/*================================================*/
/*====                                   =========*/
/*==== Запуск индивидуальных процессов   =========*/
/*==== мониторинга состояния регуляторов =========*/
/*====                                   =========*/
/*====     643.АЭ1610.10000 Д2.0         =========*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегуляторов{
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСостоянияРегVзР;
    СТАРТ ПРОЦ КонтрольСостоянияРегХзР;
    СТАРТ ПРОЦ КонтрольСостоянияРегVзУ;
    СТАРТ ПРОЦ КонтрольСостоянияРегХзУ;
    СТАРТ ПРОЦ КонтрольСостоянияРегWз;
    СТАРТ ПРОЦ КонтрольСостоянияРегWз_УГОЛ;
    СТАРТ ПРОЦ КонтрольСостоянияРегVтР;
    СТАРТ ПРОЦ КонтрольСостоянияРегХтР;
    СТАРТ ПРОЦ КонтрольСостоянияРегVтУ;
    СТАРТ ПРОЦ КонтрольСостоянияРегХтУ;
    СТАРТ ПРОЦ КонтрольСостоянияРегWт;
    СТАРТ ПРОЦ КонтрольСостоянияРегWт_УГОЛ;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_РГ;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_Д;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_W_ИПН_К1;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_W_ИПН_К2;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_ТН;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_ТР;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_РОСТА;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_УР;
    СТАРТ ПРОЦ КонтрольСостояния_РЕГ_ДК;
    СТОП;
 }
}

/*=========================================*/
/*====                                 ====*/
/*====                                 ====*/
/*====  ПРОЦЕССЫ КОНТРОЛЯ РЕГУЛЯТОРОВ  ====*/
/*====                                 ====*/
/*====    643.АЭ1610.10000 Д2.0        ====*/
/*=========================================*/

/*================================================*/
/*=   КонтрольСостоянияРегулятора VзР            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегVзР{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ЗАТ_РС)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_РЕГ_Vз)) В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*================================================*/
/*=   КонтрольСостоянияРегулятора ХзР            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегХзР{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАТ_РК В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XзР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ЗАТ_РК В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XзР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ЗАТ_РК В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора VзУ            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегVзУ{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VзУ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ЗАТ_УС)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VзУ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_РЕГ_Vз)) В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора ХзУ            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегХзУ{

 СОСТ Начало {
      ЕСЛИ ((ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ) ||
            (ПРОЦ ЗАТ_УК_УС В СОСТ АКТИВНОЕ) ||
            (ПРОЦ ВКЛ_РЕГ_ЗАТ_УК В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XзУ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ ((!(ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ)) &&
            (!(ПРОЦ ЗАТ_УК_УС В СОСТ АКТИВНОЕ)) &&
            (!(ПРОЦ ВКЛ_РЕГ_ЗАТ_УК В СОСТ АКТИВНОЕ))) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XзУ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ ((ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ) ||
            (ПРОЦ ЗАТ_УК_УС В СОСТ АКТИВНОЕ) ||
            (ПРОЦ ВКЛ_РЕГ_ЗАТ_УК В СОСТ АКТИВНОЕ)) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора Wз             =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегWз{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАТ_ВР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wз_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ЗАТ_ВР)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ЗАТ_ВР В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wз_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_ЗАТ_ВР)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ЗАТ_ВР В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора Wз_УГОЛ        =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегWз_УГОЛ{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАТ_УГОЛ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wз_УГОЛ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ЗАТ_УГОЛ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wз_УГОЛ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ЗАТ_УГОЛ В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*================================================*/
/*=   КонтрольСостоянияРегулятора VтР            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегVтР{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VтР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ТИГ_РС)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VтР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_РЕГ_Vт)) В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора ХтР            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегХтР{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XтР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ТИГ_РК В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XтР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ТИГ_РК В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора VтУ            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегVтУ{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VтУ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ТИГ_УС)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_VтУ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_РЕГ_Vт)) В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора ХтУ            =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегХтУ{

 СОСТ Начало {
      ЕСЛИ ((ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ) ||
             (ПРОЦ ВКЛ_РЕГ_ТИГ_УК В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XтУ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ ((!(ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ)) &&
            (!(ПРОЦ ВКЛ_РЕГ_ТИГ_УК В СОСТ АКТИВНОЕ))) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_XтУ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ ((ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ) ||
             (ПРОЦ ВКЛ_РЕГ_ТИГ_УК В СОСТ АКТИВНОЕ)) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора РегWт          =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегWт{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wт_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ТИГ_ВР)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wт_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_ТИГ_ВР)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   КонтрольСостоянияРегулятора Wт_УГОЛ        =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостоянияРегWт_УГОЛ{

 СОСТ Начало {
      ЕСЛИ (ПРОЦ ТИГ_УГОЛ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wт_УГОЛ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (!(ПРОЦ ТИГ_УГОЛ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgPIVCode(РЕГ_Wт_УГОЛ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (ПРОЦ ТИГ_УГОЛ В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=  КонтрольСостоянияРегулятора расхода газа    =*/
/*=    643.АЭ1610.10000 Д2.0                     =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_РГ{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_РГ_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_РГ_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=  КонтрольСостоянияРегулятора давления        =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_Д{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_Д_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_Д_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_УР{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_УР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_УР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_ДК{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_ДК В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ДК_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_ДК В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ДК_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_ДК В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_W_ИПН_К1{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_W_ИПН_К1_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_W_ИПН_К1_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_W_ИПН_К2{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_W_ИПН_К2_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_W_ИПН_К2_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_ТН{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТН_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВКЛ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТН_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообК_ВПО_РЕГ_ВЫКЛ {
     ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязиСВПО_ВКЛ_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВыключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСВПО_ВЫК_РЕГ {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ ОжиданиеВключения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_ТР{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_ТР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТР_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_ТР В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТР_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_ТР В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольСостояния_РЕГ_РОСТА{

 СОСТ Начало {
    ЕСЛИ (ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ СообК_ПИВ_РЕГ_ВЫКЛ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_РОСТА_ВКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
    ЕСЛИ (!(ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_РЕГ_ВЫКЛ {
    ЕСЛИ (SendMsgPIVCode(РЕГ_РОСТА_ВЫКЛЮЧЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
    ЕСЛИ (ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ) В СОСТ СообК_ПИВ_РЕГ_ВКЛ;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*=========================================*/
/*=========================================*/
/*====                                 ====*/
/*====                                 ====*/
/*====  ПРОЦЕССЫ УПРАВЛЕНИЕ КЛАПАНАМИ  ====*/
/*====    И АГРЕГАТАМИ ВАКУУМНЫМИ      ====*/
/*====  643.АЭ1610.10000 Д2.36         ====*/
/*====                                 ====*/
/*=========================================*/
/*=========================================*/

/*=========================================*/
/*=                                       =*/
/*=     ОБРАБОТКА КОМАНД УПРАВЛЕНИЯ       =*/
/*=     КЛАПАНАМИ ОТ ПИВ                  =*/
/*=     643.АЭ1610.10000 Д2.0             =*/
/*=========================================*/
ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ{
ИЗ ПРОЦ Инициализация
                      ТекущийРежим,
                      КодСобытия_от_ПИВ;

/* СОБЫТИЯ УПРАВЛЕНИЯ ПРОЦЕССАМИ */
 СОСТ Анализ{
    СТОП; /* наметим останов по умолчанию */
    РАЗБОР (КодСобытия_от_ПИВ) {
       СЛУЧАЙ ОТКР_АВД1_МО_НК_VE3:
          СТАРТ ПРОЦ ОТКР_АВД1_МО_НК_VE3;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_АВД1_МО_НК_VE3:
          СТАРТ ПРОЦ ЗАКР_АВД1_МО_НК_VE3;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_АВД2_МО_НК_VE4:
          СТАРТ ПРОЦ ОТКР_АВД2_МО_НК_VE4;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_АВД2_МО_НК_VE4:
          СТАРТ ПРОЦ ЗАКР_АВД2_МО_НК_VE4;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_АВД1_МО_ВК_VE5:
          СТАРТ ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_АВД1_МО_ВК_VE5:
          СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_АВД2_МО_ВК_VE6:
          СТАРТ ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_АВД2_МО_ВК_VE6:
          СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_БПК_VE7:
          СТАРТ ПРОЦ ОТКР_БПК_VE7;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_БПК_VE7:
          СТАРТ ПРОЦ ЗАКР_БПК_VE7;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_ПРОДУВКА_VE8:
          СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_ПРОДУВКА_VE8:
          СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_НАДДУВ_ВК_VE9:
          СТАРТ ПРОЦ ОТКР_НАДДУВ_ВК_VE9;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_НАДДУВ_ВК_VE9:
          СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_НАДДУВ_НК_VE12:
          СТАРТ ПРОЦ ОТКР_НАДДУВ_НК_VE12;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_НАДДУВ_НК_VE12:          /*добавить*/
          СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12;
          КОНЕЦ;
       СЛУЧАЙ ОТКР_VM14:
          СТАРТ ПРОЦ ОТКР_VM14;
          КОНЕЦ;
       СЛУЧАЙ ЗАКР_VM14:
          СТАРТ ПРОЦ ЗАКР_VM14;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_VM14:
          СТАРТ ПРОЦ ВЫК_VM14;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД1:
          СТАРТ ПРОЦ ВКЛ_АВД1;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД2:
          СТАРТ ПРОЦ ВКЛ_АВД2;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_АВД1:
          СТАРТ ПРОЦ ВЫК_АВД1;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_АВД2:
          СТАРТ ПРОЦ ВЫК_АВД2;
          КОНЕЦ;
       СЛУЧАЙ ПЕРЕКЛЮЧИТЬ_АВД:
          СТАРТ ПРОЦ ПЕРЕКЛЮЧИТЬ_АВД; 
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД1_НК:
          СТАРТ ПРОЦ ВКЛ_АВД1_НК;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД2_НК:
          СТАРТ ПРОЦ ВКЛ_АВД2_НК;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД1_ВК:
          СТАРТ ПРОЦ ВКЛ_АВД1_ВК;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_АВД2_ВК:
          СТАРТ ПРОЦ ВКЛ_АВД2_ВК;
          КОНЕЦ;
       СЛУЧАЙ РАЗГЕРМЕТИЗАЦИЯ_ВК: /* добавить 06.05.22*/
          ЕСЛИ ((ТекущийРежим == РЕЖИМ_РР) && 
                (ПРОЦ ВАКУУМИРОВАНИЕ_ВК В СОСТ ПАССИВНОЕ) &&
                (ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК В СОСТ ПАССИВНОЕ)
               ) СТАРТ ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК;
          ИНАЧЕ 
             В СОСТ НекорректноеСобытие; 
          КОНЕЦ;
       СЛУЧАЙ ВАКУУМИРОВАНИЕ_ВК:
          ЕСЛИ ((ТекущийРежим == РЕЖИМ_РР) && 
                (ПРОЦ ВАКУУМИРОВАНИЕ_ВК В СОСТ ПАССИВНОЕ) &&
                (ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК В СОСТ ПАССИВНОЕ)
               ) СТАРТ ПРОЦ ВАКУУМИРОВАНИЕ_ВК;
          ИНАЧЕ 
             В СОСТ НекорректноеСобытие; 
          КОНЕЦ;
       СЛУЧАЙ ОСТАНОВ_ШЛЮЗОВАНИЯ:
          СТАРТ ПРОЦ ОСТАНОВ_ШЛЮЗОВАНИЯ; /* добавить */
          КОНЕЦ;
       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие; /* отменит СТОП и все будет хорошо */
          КОНЕЦ;
    } /* конец разбора */
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаКомандУправленияКлапанами_от_ПИВ   */


/*=========================================*/
/*=========================================*/
/*=                                       =*/
/*=   ОТКРЫТИЕ КЛАПАНА НАТЕКАНИЯ VE1      =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
/*=         ОТКР VE1                      =*/

ПРОЦ ОТКР_НАТ_АВД1_VE1{
 ИЗ ПРОЦ Инициализация  К_VE1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE1;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_НАТ_АВД1_VE1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_НАТ_АВД1_VE1;
      СТОП ПРОЦ КонтрольОткрытияVE1;
      У_VE1 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE1 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE1;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE1))
    		ОШИБКА;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_НАТ_АВД1_VE1   */


/*=========================================*/
/*=                                       =*/
/*=   ЗАКРЫТИЕ КЛАПАНА НАТЕКАНИЯ VE1      =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
/*=         ЗАКР VE1                      =*/

ПРОЦ ЗАКР_НАТ_АВД1_VE1{
 ИЗ ПРОЦ Инициализация  К_VE1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE1;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_НАТ_АВД1_VE1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_НАТ_АВД1_VE1;
      СТОП ПРОЦ КонтрольЗакрытияVE1;
      У_VE1 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE1 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE1;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE1)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_НАТ_АВД1_VE1   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE1          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE1{
 ИЗ ПРОЦ Инициализация  К_VE1,
                        У_VE1;

 СОСТ Начало {
      ЕСЛИ (К_VE1 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE1_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE1_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE1 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE1 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE1   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE1         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE1 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE1{
 ИЗ ПРОЦ Инициализация  К_VE1,
                        У_VE1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE1 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE1))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE1 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE1)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE1   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE1         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE1 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE1{
 ИЗ ПРОЦ Инициализация  К_VE1,
                        У_VE1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE1 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE1))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE1 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE1)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE1   */

/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE2         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_НАТ_АВД2_VE2{
 ИЗ ПРОЦ Инициализация  К_VE2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE2;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_НАТ_АВД2_VE2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_НАТ_АВД2_VE2;
      СТОП ПРОЦ КонтрольОткрытияVE2;
      У_VE2 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE2 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE2;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE2))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_НАТ_АВД2_VE2   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE2         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_НАТ_АВД2_VE2{
 ИЗ ПРОЦ Инициализация  К_VE2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE2;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_НАТ_АВД2_VE2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_НАТ_АВД2_VE2;
      СТОП ПРОЦ КонтрольЗакрытияVE2;
      У_VE2 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE2 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE2;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE2))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_НАТ_АВД2_VE2   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE2          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE2{
 ИЗ ПРОЦ Инициализация  К_VE2,
                        У_VE2;

 СОСТ Начало {
      ЕСЛИ (К_VE2 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE2_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE2_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE2 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE2 == ОТКР) В СОСТ КлапанОткрыт;
  }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE2   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE2         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE2 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE2{
 ИЗ ПРОЦ Инициализация  К_VE2,
                        У_VE2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE2 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE2))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE2 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE2)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE2   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE2         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE2 должен быть закрытым         =*/
ПРОЦ КонтрольЗакрытияVE2{
 ИЗ ПРОЦ Инициализация  К_VE2,
                        У_VE2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE2 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE2))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE2 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE2)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE2   */

/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE3         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_АВД1_МО_НК_VE3{
 ИЗ ПРОЦ Инициализация  К_VE3,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE3,
                        ФП_Pнк,
                        ФП_Pавд1;
 СОСТ Начало {
      ЕСЛИ (ФП_Pавд1 > (ФП_Pнк + 0.5)) В СОСТ ОшибкаДавления; /* добавить 06.07.03 */
      ИНАЧЕ В СОСТ ОткрытиеКлапана;
 }

 СОСТ ОткрытиеКлапана{
      ЕСЛИ (ПРОЦ ЗАКР_АВД1_МО_НК_VE3 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_АВД1_МО_НК_VE3;
      СТОП ПРОЦ КонтрольОткрытияVE3;
      У_VE3 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE3 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE3;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE3_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE3))
      		ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ОшибкаДавления {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE3_Рнк_МЕНЬШЕ_Pавд1))
      		СТОП;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_АВД1_МО_НК_VE3   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE3         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_АВД1_МО_НК_VE3{
 ИЗ ПРОЦ Инициализация  К_VE3,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE3;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_НК_VE3 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_АВД1_МО_НК_VE3;
      СТОП ПРОЦ КонтрольЗакрытияVE3;
      У_VE3 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE3 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE3;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE3_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE3))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_АВД1_МО_НК_VE3   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE3          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE3{
 ИЗ ПРОЦ Инициализация  К_VE3,
                        У_VE3;

 СОСТ Начало {
      ЕСЛИ (К_VE3 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE3_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE3_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE3 == ЗАКР) В СОСТ КлапанЗакрыт;
  }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE3 == ОТКР) В СОСТ КлапанОткрыт;
  }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE3   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE3         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE3 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE3{
 ИЗ ПРОЦ Инициализация  К_VE3,
                        У_VE3;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE3 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE3))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE3 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE3)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE3   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE3         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE3 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE3{
 ИЗ ПРОЦ Инициализация  К_VE3,
                        У_VE3;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE3 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE3))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE3 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE3)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE3   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE4         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_АВД2_МО_НК_VE4{
 ИЗ ПРОЦ Инициализация  К_VE4,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE4,
                        ФП_Pнк,
                        ФП_Pавд2;

 СОСТ Начало {
      ЕСЛИ (ФП_Pавд2 > (ФП_Pнк + 0.5))  В СОСТ ОшибкаДавления; /* добавить 06.07.03 */
      ИНАЧЕ В СОСТ ОткрытиеКлапана;
 }

 СОСТ ОткрытиеКлапана {
      ЕСЛИ (ПРОЦ ЗАКР_АВД2_МО_НК_VE4 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_АВД2_МО_НК_VE4;
      СТОП ПРОЦ КонтрольОткрытияVE4;
      У_VE4 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE4 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE4;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE4_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE4))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаДавления {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE4_Рнк_МЕНЬШЕ_Pавд2))
      		ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_АВД2_МО_НК_VE4   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE4         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_АВД2_МО_НК_VE4{
 ИЗ ПРОЦ Инициализация  К_VE4,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE4;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_НК_VE4 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_АВД2_МО_НК_VE4;
      СТОП ПРОЦ КонтрольЗакрытияVE4;
      У_VE4 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
      ЕСЛИ (К_VE4 == ЗАКР) {
            СТАРТ ПРОЦ КонтрольОткрытияVE4;
            В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE4_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE4))
            ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_АВД2_МО_НК_VE4   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE4          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE4{
 ИЗ ПРОЦ Инициализация  К_VE4,
                        У_VE4;

 СОСТ Начало {
      ЕСЛИ (К_VE4 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }
 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE4_ОТКРЫТ))    В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE4_ЗАКРЫТ))    В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE4 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE4 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE4   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE4         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE1 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE4{
 ИЗ ПРОЦ Инициализация  К_VE4,
                        У_VE4;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE4 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE4))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE4 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE4)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE4   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE4         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE4 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE4{
 ИЗ ПРОЦ Инициализация  К_VE4,
                        У_VE4;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE4 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE4))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE4 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE4)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE4   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE5         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_АВД1_МО_ВК_VE5{
 ИЗ ПРОЦ Инициализация  К_VE5,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE5,
                        ФП_Pвк,
                        ФП_Pавд1;

 СОСТ Начало {
      ЕСЛИ (ФП_Pавд1 > (ФП_Pвк + 0.5)) В СОСТ ОшибкаДавления; /* добавить 06.07.03 */
      ИНАЧЕ В СОСТ ОткрытиеКлапана;
 }

 СОСТ ОткрытиеКлапана{
      ЕСЛИ (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
      СТОП ПРОЦ КонтрольОткрытияVE5;
      У_VE5 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE5 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE5;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE5_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE5))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаДавления {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE5_Рвк_МЕНЬШЕ_Pавд1))
      		ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_АВД1_МО_ВК_VE5   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE5         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_АВД1_МО_ВК_VE5{
 ИЗ ПРОЦ Инициализация  К_VE5,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE5;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
      СТОП ПРОЦ КонтрольЗакрытияVE5;
      У_VE5 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE5 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE5;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE5_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE5))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_АВД1_МО_ВК_VE5   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE5          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE5{
 ИЗ ПРОЦ Инициализация  К_VE5,
                        У_VE5;

 СОСТ Начало {
      ЕСЛИ (К_VE5 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE5_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE5_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE5 == ЗАКР) В СОСТ КлапанЗакрыт;
  }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE5 == ОТКР) В СОСТ КлапанОткрыт;
  }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE5   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE5         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE5 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE5{
 ИЗ ПРОЦ Инициализация  К_VE5,
                        У_VE5;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE5 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE5))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE5 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE5)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE5         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE5 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE5{
 ИЗ ПРОЦ Инициализация  К_VE5,
                        У_VE5;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE5 == ЗАКР) {
           ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE5))   ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE5 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE5)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE5   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE6         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_АВД2_МО_ВК_VE6{
 ИЗ ПРОЦ Инициализация  К_VE6,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE6,
                        ФП_Pвк,
                        ФП_Pавд2;
 СОСТ Начало {
      ЕСЛИ (ФП_Pавд2 > (ФП_Pвк + 0.5)) В СОСТ ОшибкаДавления; /* добавить 06.07.03 */
      ИНАЧЕ В СОСТ ОткрытиеКлапана;
 }

 СОСТ ОткрытиеКлапана{
      ЕСЛИ (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
      СТОП ПРОЦ КонтрольОткрытияVE6;
      У_VE6 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE6 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE6;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE6_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE6))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаДавления {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ОТКРЫТИЯ_VE6_Рвк_МЕНЬШЕ_Pавд2))
      		ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_АВД2_МО_ВК_VE6   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE6         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_АВД2_МО_ВК_VE6{
 ИЗ ПРОЦ Инициализация  К_VE6,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE6;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
      СТОП ПРОЦ КонтрольЗакрытияVE6;
      У_VE6 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE6 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE6;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE6_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE6))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_АВД2_МО_ВК_VE6   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE6          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE6{
 ИЗ ПРОЦ Инициализация  К_VE6,
                        У_VE6;

 СОСТ Начало {
      ЕСЛИ (К_VE6 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE6_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE6_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE6 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE6 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE6   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE6         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE6 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE6{
 ИЗ ПРОЦ Инициализация  К_VE6,
                        У_VE6;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE6 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE6))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE6 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE6)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE6   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE6         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE6 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE6{
 ИЗ ПРОЦ Инициализация  К_VE6,
                        У_VE6;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE6 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE6))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE6 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE6)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE6   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE7         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/

ПРОЦ ОТКР_БПК_VE7{
 ИЗ ПРОЦ Инициализация  К_VE7,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE7;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_БПК_VE7 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_БПК_VE7;
      СТОП ПРОЦ КонтрольОткрытияVE7;
      У_VE7 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE7 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE7;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE7_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE7))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }

}   /* конец ПРОЦ ОТКР_БПК_VE7   */

/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE7         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_БПК_VE7{
 ИЗ ПРОЦ Инициализация  К_VE7,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE7;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_БПК_VE7 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_БПК_VE7;
      СТОП ПРОЦ КонтрольЗакрытияVE7;
      У_VE7 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE7 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE7;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE7_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE7))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_БПК_VE7   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE7          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE7{
 ИЗ ПРОЦ Инициализация  К_VE7,
                        У_VE7;

 СОСТ Начало {
      ЕСЛИ (К_VE7 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE7_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE7_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE7 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE7 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE7   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE7         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE7 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE7{
 ИЗ ПРОЦ Инициализация  К_VE7,
                        У_VE7;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE7 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE7))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE7 == ОТКР) {
           ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE7)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE7   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE7         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE7 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE7{
 ИЗ ПРОЦ Инициализация  К_VE7,
                        У_VE7;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE7 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE7))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE7 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE7)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE7   */

/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE8         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_ПРОДУВКА_VE8{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE8;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      СТОП ПРОЦ КонтрольОткрытияVE8;
      У_VE8 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE8 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE8;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE8_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE8))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_ПРОДУВКА_VE8   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE8         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_ПРОДУВКА_VE8{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE8;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_ПРОДУВКА_VE8;
      СТОП ПРОЦ КонтрольЗакрытияVE8;
      У_VE8 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE8 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE8;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE8_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE8))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_ПРОДУВКА_VE8   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE8          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE8{
 ИЗ ПРОЦ Инициализация
                        ФП_Pвк,
                        НП_Pатмосф,
                        У_VE8;

 СОСТ Начало {
      ЕСЛИ (У_VE8 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE8_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE8_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (У_VE8 == ЗАКР) В СОСТ КлапанЗакрыт;
      ИНАЧЕ {
         ЕСЛИ (ФП_Pвк >= НП_Pатмосф) {                     /* добавить 06.05.22 (решение с Елисеевм 05.24) */
	    ЕСЛИ (ПРОЦ ЗАКР_ПРОДУВКА_VE8 В СОСТ ПАССИВНОЕ) /* с помощью ВЕ8 нельзя создать в Рвк > атмосфер */
	       СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
         }
      }
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (У_VE8 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE8   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE8         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE8 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE8{
 ИЗ ПРОЦ Инициализация
                        У_VE8;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE8 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE8))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE8 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE8)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE8   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE8         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE8 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE8{
 ИЗ ПРОЦ Инициализация  У_VE8;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE8 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE8))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE8 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE8)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE8   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE9         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_НАДДУВ_ВК_VE9{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE9;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_НАДДУВ_ВК_VE9 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
      СТОП ПРОЦ КонтрольОткрытияVE9;
      У_VE9 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE9 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE9;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE9_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE9))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_НАДДУВ_ВК_VE9   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE9         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_НАДДУВ_ВК_VE9{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE9;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_НАДДУВ_ВК_VE9 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_НАДДУВ_ВК_VE9;
      СТОП ПРОЦ КонтрольЗакрытияVE9;
      У_VE9 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE9 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE9;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE9_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE9))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_НАДДУВ_ВК_VE9   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE9          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE9{
 ИЗ ПРОЦ Инициализация
                        У_VE9;

 СОСТ Начало {
      ЕСЛИ (У_VE9 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE9_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE9_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (У_VE9 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (У_VE9 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE9   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE9         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE9 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE9{
 ИЗ ПРОЦ Инициализация
                        У_VE9;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE9 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE9))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE9 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE9)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE9   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE9         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE9 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE9{
 ИЗ ПРОЦ Инициализация  У_VE9;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE9 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE9))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE9 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE9)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE9   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE12         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_НАДДУВ_НК_VE12{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE12;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_НАДДУВ_НК_VE12 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_НАДДУВ_НК_VE12;
      СТОП ПРОЦ КонтрольОткрытияVE12;
      У_VE12 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE12 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE12;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE12_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE12))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_НАДДУВ_НК_VE12   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE12         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_НАДДУВ_НК_VE12{
 ИЗ ПРОЦ Инициализация
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE12;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_НАДДУВ_НК_VE12 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_НАДДУВ_НК_VE12;
      СТОП ПРОЦ КонтрольЗакрытияVE12;
      У_VE12 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (У_VE12 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE12;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE12_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE12))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_НАДДУВ_НК_VE12   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE12          =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE12{
 ИЗ ПРОЦ Инициализация
                        У_VE12;

 СОСТ Начало {
      ЕСЛИ (У_VE12 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE12_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE12_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (У_VE12 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (У_VE12 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE12   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE12         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE12 должен быть закрытым         =*/

ПРОЦ КонтрольОткрытияVE12{
 ИЗ ПРОЦ Инициализация
                        У_VE12;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE12 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE12))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE12 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE12)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE12   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE12         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE12 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE12{
 ИЗ ПРОЦ Инициализация  У_VE12;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (У_VE12 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE12))    ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE12 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE12)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE12   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE10        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/

ПРОЦ ОТКР_ВЫХЛОП_АВД2_VE10{
 ИЗ ПРОЦ Инициализация  К_VE10,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE10;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10;
      СТОП ПРОЦ КонтрольОткрытияVE10;
      У_VE10 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE10 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE10;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE10_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE10))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_ВЫХЛОП_АВД2_VE10   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE10        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10{
 ИЗ ПРОЦ Инициализация  К_VE10,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE10;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_ВЫХЛОП_АВД2_VE10 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_ВЫХЛОП_АВД2_VE10;
      СТОП ПРОЦ КонтрольЗакрытияVE10;
      У_VE10 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE10 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE10;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE10_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE10))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE10         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE10{
 ИЗ ПРОЦ Инициализация  К_VE10,
                        У_VE10;

 СОСТ Начало {
      ЕСЛИ (К_VE10 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                 В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE10_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE10_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE10 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE10 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE10   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE10        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE10 должен быть закрытым        =*/

ПРОЦ КонтрольОткрытияVE10{
 ИЗ ПРОЦ Инициализация  К_VE10,
                        У_VE10;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE10 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE10))   ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE10 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE10)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE10   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE10        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=     VE10 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE10{
 ИЗ ПРОЦ Инициализация  К_VE10,
                        У_VE10;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE10 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE10)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД2;
              В СЛЕДУЮЩЕЕ;
          }
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE10 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE10)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД2;
              В СЛЕДУЮЩЕЕ;
          }
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольЗакрытияVE10   */


/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VE11        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_ВЫХЛОП_АВД1_VE11{
 ИЗ ПРОЦ Инициализация  К_VE11,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE11;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11;
      СТОП ПРОЦ КонтрольОткрытияVE11;
      У_VE11 = ОТКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE11 == ОТКР) {
         СТАРТ ПРОЦ КонтрольЗакрытияVE11;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE11_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ОТКР_VE11))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ОТКР_ВЫХЛОП_АВД1_VE11   */


/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VE11        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11{
 ИЗ ПРОЦ Инициализация  К_VE11,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_VE11;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ОТКР_ВЫХЛОП_АВД1_VE11 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_ВЫХЛОП_АВД1_VE11;
      СТОП ПРОЦ КонтрольЗакрытияVE11;
      У_VE11 = ЗАКР;
      В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания {
 		ЕСЛИ (К_VE11 == ЗАКР) {
         СТАРТ ПРОЦ КонтрольОткрытияVE11;
         В СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КЛАПАН_VE11_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ЗАКР_VE11))
    	   	ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}   /* конец ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11   */


/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ РАБОТЫ  VE11         =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыVE11{
 ИЗ ПРОЦ Инициализация  К_VE11,
                        У_VE11;

 СОСТ Начало {
      ЕСЛИ (К_VE11 == ОТКР) В СОСТ КлапанОткрыт;
      ИНАЧЕ                 В СОСТ КлапанЗакрыт;
 }

 СОСТ КлапанОткрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE11_ОТКРЫТ)) 	В СОСТ ОжиданиеЗакрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КлапанЗакрыт{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VE11_ЗАКРЫТ)) 	В СОСТ ОжиданиеОткрытия;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеЗакрытия {
      ЕСЛИ (К_VE11 == ЗАКР) В СОСТ КлапанЗакрыт;
 }
 СОСТ ОжиданиеОткрытия {
      ЕСЛИ (К_VE11 == ОТКР) В СОСТ КлапанОткрыт;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыVE11   */

/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ОТКРЫТИЯ VE11        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=      VE11 должен быть закрытым        =*/

ПРОЦ КонтрольОткрытияVE11{
 ИЗ ПРОЦ Инициализация  К_VE11,
                        У_VE11;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE11 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_VE11))   ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE11 == ОТКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ОТКР_У_VE11)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE11   */
/*=========================================*/
/*=                                       =*/
/*=         КОНТРОЛЬ ЗАКРЫТИЯ VE11        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/*=     VE11 должен быть открытым         =*/

ПРОЦ КонтрольЗакрытияVE11{
 ИЗ ПРОЦ Инициализация  К_VE11,
                        У_VE11;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_VE11 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_VE11)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД1;
              ОШИБКА;
          }
      } ИНАЧЕ  В СОСТ КонтрольУправления;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_VE11 == ЗАКР) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКНТР_ЗАКР_У_VE11)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД1;
              ОШИБКА;
          }
      } ИНАЧЕ В СОСТ КонтрольКонцевика;

      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольОткрытияVE11   */

/*=========================================*/
/*=                                       =*/
/*=         ОТКРЫТИЕ КЛАПАНА  VM14        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ОТКР_VM14{
 ИЗ ПРОЦ Инициализация
                        У_ОТКР_VM14,
                        У_ЗАКР_VM14,
                        К_ОТКР_VM14;


 СОСТ Начало {
      ЕСЛИ (ПРОЦ ЗАКР_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_VM14;
      ЕСЛИ (ПРОЦ ВЫК_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫК_VM14;
      ЕСЛИ (К_ОТКР_VM14 != СРАБОТАЛ) {
         У_ОТКР_VM14 = ВКЛ;
         У_ЗАКР_VM14 = ВЫКЛ;
         В СОСТ КонтрольОткрытия;
      } ИНАЧЕ СТОП;
 }

 СОСТ КонтрольОткрытия {
      ЕСЛИ (К_ОТКР_VM14 == СРАБОТАЛ) {
           У_ОТКР_VM14 = ВЫКЛ;
           В  СОСТ ПередачаСообщения;
      }
      ТАЙМАУТ Т2 В СОСТ Ошибка;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VM14_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВРЕМЯ_ОТКР_VM14_ИСТЕКЛО))
           ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* Конец ПРОЦ Открыть VM14 */

/*=========================================*/
/*=                                       =*/
/*=         ЗАКРЫТИЕ КЛАПАНА  VM14        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ЗАКР_VM14{
 ИЗ ПРОЦ Инициализация
                        У_ОТКР_VM14,
                        У_ЗАКР_VM14,
                        К_ОТКР_VM14,
                        К_ЗАКР_VM14;

 СОСТ Начало{
      ЕСЛИ (ПРОЦ ОТКР_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_VM14;
      ЕСЛИ (ПРОЦ ВЫК_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫК_VM14;
      ЕСЛИ(К_ЗАКР_VM14 != СРАБОТАЛ) {
         У_ОТКР_VM14 = ВЫКЛ;
         У_ЗАКР_VM14 = ВКЛ;
         В СОСТ КонтрольЗакрытия;
      }
      ИНАЧЕ  СТОП;
  }

 СОСТ КонтрольЗакрытия {
    ЕСЛИ(К_ЗАКР_VM14 == СРАБОТАЛ) {
         У_ЗАКР_VM14 = ВЫКЛ;
         В СОСТ ПередачаСообщения;
    }
    ТАЙМАУТ Т2 В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VM14_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }



/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВРЕМЯ_ЗАКР_VM14_ИСТЕКЛО))
            ОШИБКА;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}/*   Конец ПРОЦ ЗАКР_VM14 */


/*=========================================*/
/*=                                       =*/
/*=         ВЫКЛЮЧЕНИЕ КЛАПАНА  VM14      =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ВЫК_VM14{
 ИЗ ПРОЦ Инициализация
                        У_ОТКР_VM14,
                        У_ЗАКР_VM14,
                        К_ЗАКР_VM14;

 СОСТ Начало{
    ЕСЛИ (ПРОЦ ОТКР_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ОТКР_VM14;
    ЕСЛИ (ПРОЦ ЗАКР_VM14 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАКР_VM14;


    ЕСЛИ ((!У_ЗАКР_VM14) && (!У_ОТКР_VM14)) СТОП;
    ИНАЧЕ {
         У_ОТКР_VM14 = ВЫКЛ;
         У_ЗАКР_VM14 = ВЫКЛ;
         СТОП;
    }
 }
}/*   Конец ПРОЦ ВЫКЛ VM14 */

/*=========================================*/
/*=                                       =*/
/*=       КОНТРОЛЬ УПРАВЛЕНИЯ VM14        =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольУправленияVM14{
 ИЗ ПРОЦ Инициализация
                        У_ОТКР_VM14,
                        У_ЗАКР_VM14;
 СОСТ Начало{
    ЕСЛИ ((!У_ОТКР_VM14) && (!У_ЗАКР_VM14)) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧЕНИЕ_VM14))  В СОСТ СменаСобытияВыклVM14;
    } ИНАЧЕ {
         ЕСЛИ ((!У_ОТКР_VM14) && (У_ЗАКР_VM14) ) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКР_VM14))  В СОСТ СменаСобытияЗакрVM14;
         } ИНАЧЕ {
              ЕСЛИ ((У_ОТКР_VM14)&&(!У_ЗАКР_VM14) ) {
                  ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКР_VM14))  В СОСТ СменаСобытияОткрVM14;
              } ИНАЧЕ {
                  ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОШИБКА_УПРАВЛЕНИЯ_VM14))  В СОСТ СменаСобытияОшУпрVM14;
              }
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

  СОСТ СменаСобытияВыклVM14{
        ЕСЛИ(!((!У_ОТКР_VM14)&&(!У_ЗАКР_VM14) ))  В СОСТ Начало;
  }
  СОСТ СменаСобытияЗакрVM14{
        ЕСЛИ(!((!У_ОТКР_VM14 )&&(У_ЗАКР_VM14) ))  В СОСТ Начало;
  }
  СОСТ СменаСобытияОткрVM14{
        ЕСЛИ(!((У_ОТКР_VM14 )&&(!У_ЗАКР_VM14) ))  В СОСТ Начало;
  }
  СОСТ СменаСобытияОшУпрVM14{
        ЕСЛИ(!((У_ОТКР_VM14 )&&(У_ЗАКР_VM14) ))   В СОСТ Начало;
  }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /*   Конец ПРОЦ КонтрольУправленияVM14 */


/*=========================================*/
/*=                                       =*/
/*=        КОНТРОЛЬ СОСТОЯНИЯ VM14        =*/
/*=        643.АЭ1610.10000 Д2.36         =*/
/*=========================================*/
ПРОЦ КонтрольСостоянияVM14{
 ИЗ ПРОЦ Инициализация
                        К_ОТКР_VM14,
                        К_ЗАКР_VM14;
 СОСТ Начало{
    ЕСЛИ ((!К_ОТКР_VM14) && (!К_ЗАКР_VM14)) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СРЕДНЕЕ_СОСТОЯНИЕ_VM14))  В СОСТ СменаСобытияСредVM14;
    } ИНАЧЕ {
         ЕСЛИ ((!К_ОТКР_VM14)&&(К_ЗАКР_VM14)) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VM14_ЗАКРЫТ))  В СОСТ СменаСобытияЗакрVM14;
         } ИНАЧЕ {
              ЕСЛИ ((К_ОТКР_VM14)&&(!К_ЗАКР_VM14)) {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_VM14_ОТКРЫТ))  В СОСТ СменаСобытияОткрVM14;
              } ИНАЧЕ {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_VM14))  В СОСТ СменаСобытияОшVM14;
              }
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСобытияСредVM14{
        ЕСЛИ (К_ОТКР_VM14 || К_ЗАКР_VM14)  В СОСТ Начало;
 }

 СОСТ СменаСобытияЗакрVM14{
       ЕСЛИ (К_ОТКР_VM14 || (!К_ЗАКР_VM14))  В СОСТ Начало;
 }

 СОСТ СменаСобытияОткрVM14{
       ЕСЛИ ((!К_ОТКР_VM14) || К_ЗАКР_VM14)  В СОСТ Начало;
 }

 СОСТ СменаСобытияОшVM14{
       ЕСЛИ ((!К_ОТКР_VM14) || (!К_ЗАКР_VM14))   В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /*   Конец ПРОЦ КонтрольСостоянияVM14 */


/*=========================================*/
/*=                                       =*/
/*= КОНТРОЛЬ СОСТОЯНИЯ ЗАТВОРА ВАКУУМНОГО =*/
/*=        643.АЭ1610.10000 Д2.0          =*/
/*=========================================*/
ПРОЦ КонтрольСостоянияЗатвораВакуумного{
 ИЗ ПРОЦ Инициализация
                        К_ОТКР_ЗАТВОР_В,
                        К_ЗАКР_ЗАТВОР_В;
 СОСТ Начало{
    ЕСЛИ ((!К_ОТКР_ЗАТВОР_В) && (!К_ЗАКР_ЗАТВОР_В)) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СРЕДНЕЕ_СОСТОЯНИЕ_ЗАТВОРА_ВАКУУМНОГО))  В СОСТ СменаСостоянияСреднего;
    } ИНАЧЕ {
         ЕСЛИ ((!К_ОТКР_ЗАТВОР_В)&&(К_ЗАКР_ЗАТВОР_В)) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАТВОР_ВАКУУМНЫЙ_ЗАКРЫТ))  В СОСТ СменаСостоянияЗакрытия;
         } ИНАЧЕ {
              ЕСЛИ ((К_ОТКР_ЗАТВОР_В)&&(!К_ЗАКР_ЗАТВОР_В)) {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАТВОР_ВАКУУМНЫЙ_ОТКРЫТ))  В СОСТ СменаСостоянияОткрытия;
              } ИНАЧЕ {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОСТОЯНИЕ_ОШИБКИ_ЗАТВОРА_ВАКУУМНОГО))  В СОСТ СменаСостоянияОшибки;
              }
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияСреднего{
        ЕСЛИ (К_ОТКР_ЗАТВОР_В || К_ЗАКР_ЗАТВОР_В)  В СОСТ Начало;
 }

 СОСТ СменаСостоянияЗакрытия{
       ЕСЛИ (К_ОТКР_ЗАТВОР_В || (!К_ЗАКР_ЗАТВОР_В))  В СОСТ Начало;
 }

 СОСТ СменаСостоянияОткрытия{
       ЕСЛИ ((!К_ОТКР_ЗАТВОР_В) || К_ЗАКР_ЗАТВОР_В)  В СОСТ Начало;
 }

 СОСТ СменаСостоянияОшибки{
       ЕСЛИ ((!К_ОТКР_ЗАТВОР_В) || (!К_ЗАКР_ЗАТВОР_В))   В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*=========================================*/
/*=                                       =*/
/*= КОНТРОЛЬ СОСТОЯНИЯ ЗАТВОРА ВАКУУМНОГО =*/
/*=        643.АЭ1610.10000 Д2.0          =*/
/*=========================================*/
ПРОЦ КонтрольПоложенияЗатравкиПриЗакрытииЗатвораВакуумного{
 ИЗ ПРОЦ Инициализация
                        К_ОТКР_ЗАТВОР_В,
                        К_ЗАКР_ЗАТВОР_В,
                        КООРД_ЗАТ;
 СОСТ Начало{
    ЕСЛИ ((К_ОТКР_ЗАТВОР_В) && (!К_ЗАКР_ЗАТВОР_В)) /* если открыт */
         В СОСТ СменаСостоянияОткрытия;
    ИНАЧЕ {                                        /* если не открыт и затравка,*/
         ЕСЛИ (КООРД_ЗАТ != ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ; /* то предупреждаем */ /*добавлено */
         ИНАЧЕ В СОСТ СменаСостоянияНеОткрытия;
    }
 }
 СОСТ ПредупреждениеОператоруОЗатравке{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТИЕ_ЗВ_ПРИ_ОПУЩЕННОЙ_ЗАТРАВКЕ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СменаСостоянияНеОткрытия{
       ЕСЛИ ((К_ОТКР_ЗАТВОР_В) && (!К_ЗАКР_ЗАТВОР_В))  В СОСТ Начало;
 }
 СОСТ СменаСостоянияОткрытия{
       ЕСЛИ ((!К_ОТКР_ЗАТВОР_В) || К_ЗАКР_ЗАТВОР_В)  В СОСТ Начало;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*))))))))))))))))))))))*/
/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ СОСТОЯНИЯ ДАТЧИКА ПРИВЯЗКИ  =*/
/*=  643.АЭ1610.10000 Д2.0                =*/
/*=========================================*/
ПРОЦ КонтрольСостоянияДатчикаПривязки{
 ИЗ ПРОЦ Инициализация
                        К_ДП,
                        У_ЛАЗЕРА_ДП;
 СОСТ Начало{
    ЕСЛИ (!У_ЛАЗЕРА_ДП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДП_ВЫКЛЮЧЕН))  В СОСТ СменаСостоянияВыключен;
    } ИНАЧЕ {
         ЕСЛИ (К_ДП) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЛУЧ_ДП_ДОСТИГ_ФОТОПРИЕМНИКА))  В СОСТ СменаСостоянияОткрытия;
         } ИНАЧЕ {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЛУЧ_ДП_ПЕРЕКРЫТ_ПРЕПЯТСТВИЕМ))  В СОСТ СменаСостоянияЗакрытия;
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияВыключен{
        ЕСЛИ (У_ЛАЗЕРА_ДП)  В СОСТ Начало;
 }

 СОСТ СменаСостоянияЗакрытия{
       ЕСЛИ (К_ДП || (!У_ЛАЗЕРА_ДП))  В СОСТ Начало;
 }

 СОСТ СменаСостоянияОткрытия{
       ЕСЛИ ((!У_ЛАЗЕРА_ДП) || (!К_ДП))  В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ СОСТОЯНИЯ ДАТЧИКА КАСАНИЯ   =*/
/*=  643.АЭ1610.10000 Д2.0                =*/
/*=========================================*/
ПРОЦ КонтрольСостоянияДатчикаКасания{
 ИЗ ПРОЦ Инициализация  ФП_Xз,
                        ТекущийРежим, /* добавитьдобавлено Зюбин 06.01.20 */ 
                        К_ДАТЧИКА_КАСАНИЯ;
 ЛОГ ЛП_ФлагПервогоКасания ЛОКАЛ;
 СОСТ ПоВключению{
      ЛП_ФлагПервогоКасания = ВЫКЛ; /* исключение сообщений до первого касания расплава */
      В СЛЕДУЮЩЕЕ; 
 }
 СОСТ Начало{                       /* контроль условий нормальной работы */
    ЕСЛИ ((fabs(ФП_Xз) > 360.0) &&             
          (ТекущийРежим != РЕЖИМ_ИНИЦИАЛИЗАЦИИ)) В СЛЕДУЮЩЕЕ;
 }

 СОСТ СообщениеКасания {
    ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ)   {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДК_ЕСТЬ_КАСАНИЕ)) {
            ЛП_ФлагПервогоКасания = ВКЛ;     /* после касания можно выдавать любые сообщения */  
            В СОСТ СменаСостоянияКасание;
         }
    } ИНАЧЕ {
         ЕСЛИ (ЛП_ФлагПервогоКасания) {
            ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДК_НЕТ_КАСАНИЯ))  
                В СОСТ СменаСостоянияНетКасания;
         } ИНАЧЕ {
                В СОСТ СменаСостоянияНетКасания; /* если не было касания - не сигналим */
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияКасание{
        ЕСЛИ (!К_ДАТЧИКА_КАСАНИЯ)  В СОСТ Начало;
 }

 СОСТ СменаСостоянияНетКасания{
       ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ)   В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
      В СОСТ Начало;
 }
}

/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ СОСТОЯНИЯ БЛОКИРОВКИ ВК/НК  =*/
/*=  643.АЭ1610.10000 Д2.0                =*/
/*=========================================*/
ПРОЦ КонтрольСостоянияБлокировки_ВК_НК{
 ИЗ ПРОЦ Инициализация
                        У_РАЗБЛОКИРОВКА_ВК_НК;

 СОСТ Начало{
    ЕСЛИ (У_РАЗБЛОКИРОВКА_ВК_НК) {
         ЕСЛИ (SendMsgPIVCode(НЕТ_БЛОКИРОВКИ_ВК_НК))  В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ЕСТЬ_БЛОКИРОВКА_ВК_НК))  В СОСТ СменаСостоянияВЫКЛ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияВКЛ{
        ЕСЛИ (!У_РАЗБЛОКИРОВКА_ВК_НК)  В СОСТ Начало;
 }

 СОСТ СменаСостоянияВЫКЛ{
       ЕСЛИ (У_РАЗБЛОКИРОВКА_ВК_НК)  В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
      В СОСТ Начало;
 }
}

/*================================================*/
/*=       КОНТРОЛЬ РЕЖИМА РАБОТЫ Д2              =*/
/*=       643.АЭ1610.10000 Д2                    =*/
/*================================================*/
ПРОЦ КонтрольРежимаРаботы{
ИЗ ПРОЦ Инициализация     ТекущийРежим;
 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ТекущийРежим);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ТекущийРежим) {
         ЛП_Предыдущее = ТекущийРежим;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgPIVCode(ЛП_Предыдущее)) В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=       КОНТРОЛЬ ЭТАПА  РАБОТЫ Д2              =*/
/*=       643.АЭ1610.10000 Д2                    =*/
/*================================================*/
ПРОЦ КонтрольЭтапаРаботы{
ИЗ ПРОЦ Инициализация
                        ФП_Xз,
                        ОП_КоординатаТекЧастиМонокристалла         ,
                        ОП_КоординатаНачалаЗатравливания           ,
                        ОП_КоординатаНачалаПереходаЗатравка_Шейка  ,
                        ОП_КоординатаНачалаШейки                   ,
                        ОП_КоординатаНачалаПереходаШейка_Конус     ,
                        ОП_КоординатаНачалаКонуса                  ,
                        ОП_КоординатаНачалаПереходаКонус_Цилиндр   ,
                        ОП_КоординатаНачалаСтабилизацииЦилиндра     ,
                        ОП_КоординатаНачалаЦилиндра                ,
                        ОП_КоординатаНачалаПереходаЦилиндр_ОбрКонус,
                        ОП_КоординатаНачалаОбратногоКонуса         ,
                        ОП_КоординатаОрываМонокристалла            ,
                        ТекущийЭтап;
 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ТекущийЭтап);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ТекущийЭтап) {
         ЛП_Предыдущее = ТекущийЭтап;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ДействияПоСменеЭтапа{
      РАЗБОР (ЛП_Предыдущее) {
         СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
         СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
         СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
         СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
         СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
         СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
         СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
              ОП_КоординатаТекЧастиМонокристалла = ФП_Xз;
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ СообщОбИзменении;
              КОНЕЦ;
      }
 }
 СОСТ ПередачаКоордНачалаТекЧасти{
      ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ТЕК_ЧАСТИ,
                       ОП_КоординатаТекЧастиМонокристалла)) {
           В СЛЕДУЮЩЕЕ;
      }
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаОпределяемыхКоординат{
      РАЗБОР (ЛП_Предыдущее) {
         СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ЗАТРАВЛИВАНИЯ,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаЗатравливания = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ЗАТРАВКА_ШЕЙКА,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаПереходаЗатравка_Шейка = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ШЕЙКИ,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаШейки = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ШЕЙКА_КОНУС,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаПереходаШейка_Конус = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_КОНУСА,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаКонуса = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_КОНУС_ЦИЛИНДР,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаПереходаКонус_Цилиндр = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_СТАБИЛИЗАЦИИ_ЦИЛИНДРА,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаСтабилизацииЦилиндра = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ЦИЛИНДРА,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаЦилиндра = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ПЕРЕХОДА_ЦИЛИНДР_ОБР_КОНУС,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаПереходаЦилиндр_ОбрКонус = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
              ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_НАЧАЛА_ОБР_КОНУСА,
                               ОП_КоординатаТекЧастиМонокристалла)) {
                   ОП_КоординатаНачалаОбратногоКонуса = ОП_КоординатаТекЧастиМонокристалла;
                   В СЛЕДУЮЩЕЕ;
              }
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
      }
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgPIVCode(ЛП_Предыдущее)) В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*))))))))))))))))))))))*/
/*=========================================*/
/*=                                       =*/
/*=         ВКЛЮЧЕНИЕ ДВИГАТЕЛЯ НВР1      =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ВКЛ_НВР1{
 ИЗ ПРОЦ Инициализация  К_НВР1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_НВР1;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ВЫКЛ_НВР1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫКЛ_НВР1;
      СТОП ПРОЦ КонтрольВключенияНВР1;
      У_НВР1 = ВКЛ;
      В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
      ЕСЛИ (К_НВР1 == ВКЛ) {
         СТАРТ ПРОЦ КонтрольВыключенияНВР1;
         В СЛЕДУЮЩЕЕ;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка; /* Т_ДВН_НВР  */
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НВР1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_НВР1))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ВКЛ_НВР1   */

/*=========================================*/
/*=                                       =*/
/*=         ВЫКЛЮЧЕНИЕ ДВИГАТЕЛЯ НВР1     =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ ВЫКЛ_НВР1{
 ИЗ ПРОЦ Инициализация  К_НВР1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_НВР1;
 СОСТ Начало {
    ЕСЛИ (ПРОЦ ВКЛ_НВР1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВКЛ_НВР1;
    СТОП ПРОЦ КонтрольВыключенияНВР1;
    У_НВР1 = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
    ЕСЛИ (К_НВР1 == ВЫКЛ) {
         СТАРТ ПРОЦ КонтрольВключенияНВР1;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка; /* Т_ДВН_НВР  */
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НВР1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР1))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}   /* конец ПРОЦ ВЫКЛ_НВР1   */

/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ РАБОТЫ ДВИГАТЕЛЯ НВР1     =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
ПРОЦ КонтрольРаботыНВР1{
 ИЗ ПРОЦ Инициализация  К_НВР1,
                        У_НВР1;

 СОСТ Начало {
      ЕСЛИ (К_НВР1 == ВКЛ) В СОСТ НВР1Включен;
      ИНАЧЕ                В СОСТ НВР1Выключен;
 }
 СОСТ НВР1Включен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_НВР1_ВКЛЮЧЕНЫ))    В СОСТ ОжиданиеВыключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НВР1Выключен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_НВР1_ВЫКЛЮЧЕНЫ))    В СОСТ ОжиданиеВключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_НВР1 == ВЫКЛ) В СОСТ НВР1Выключен;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_НВР1 == ВКЛ) В СОСТ НВР1Включен;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыНВР1  */

/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР1    =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/* НВР1 должен быть выключен===============*/

ПРОЦ КонтрольВключенияНВР1{
 ИЗ ПРОЦ Инициализация  К_НВР1,
                        У_НВР1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_НВР1 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_НВР1)) ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_НВР1 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_НВР1)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
СОСТ НарушениеСвязи {
      ОШИБКА;
 }
}  /* конец ПРОЦ ВключенияНВР1   */


/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР1   =*/
/*=         643.АЭ1610.10000 Д2.36        =*/
/*=========================================*/
/* НВН1 должен быть включен ===============*/

ПРОЦ КонтрольВыключенияНВР1{
 ИЗ ПРОЦ Инициализация  К_НВР1,
                        У_НВР1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_НВР1 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_НВР1)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД1;
              ОШИБКА;
          }
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольУправления {
      ЕСЛИ (У_НВР1 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_НВР1)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД1;
              ОШИБКА;
          }
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольВыключенияНВР1   */



/*=========================================*/
/*=                                       =*/
/*=       ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР2        =*/
/*=       643.АЭ1610.10000 Д2.36          =*/
/*=========================================*/
ПРОЦ ВКЛ_НВР2{
 ИЗ ПРОЦ Инициализация  К_НВР2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_НВР2;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ВЫКЛ_НВР2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫКЛ_НВР2;
      СТОП ПРОЦ КонтрольВключенияНВР2;
      У_НВР2 = ВКЛ;
      В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
      ЕСЛИ (К_НВР2 == ВКЛ) {
         СТАРТ ПРОЦ КонтрольВыключенияНВР2;
         В СЛЕДУЮЩЕЕ;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;  /* Т_ДВН_НВР  */
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НВР2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_НВР2))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ВКЛ_НВР2   */


/*=========================================*/
/*=                                       =*/
/*=       ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР2       =*/
/*=       643.АЭ1610.10000 Д2.36          =*/
/*=========================================*/
ПРОЦ ВЫКЛ_НВР2{
 ИЗ ПРОЦ Инициализация  К_НВР2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_НВР2;
 СОСТ Начало {
    ЕСЛИ (ПРОЦ ВКЛ_НВР2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВКЛ_НВР2;
    СТОП ПРОЦ КонтрольВыключенияНВР2;
    У_НВР2 = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
    ЕСЛИ (К_НВР2 == ВЫКЛ) {
         СТАРТ ПРОЦ КонтрольВключенияНВР2;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;    /* Т_ДВН_НВР  */
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НВР2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_НВР2))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}   /* конец ПРОЦ ВЫКЛ_НВР2   */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ РАБОТЫ ДВИГАТЕЛЯ НВР2      =*/
/*=       643.АЭ1610.10000 Д2.36          =*/
/*=========================================*/
ПРОЦ КонтрольРаботыНВР2{
 ИЗ ПРОЦ Инициализация  К_НВР2,
                        У_НВР2;

 СОСТ Начало {
      ЕСЛИ (К_НВР2 == ВКЛ) В СОСТ НВР2Включен;
      ИНАЧЕ                В СОСТ НВР2Выключен;
 }

 СОСТ НВР2Включен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_НВР2_ВКЛЮЧЕНЫ))    В СОСТ ОжиданиеВыключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НВР2Выключен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_НВР2_ВЫКЛЮЧЕНЫ))    В СОСТ ОжиданиеВключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_НВР2 == ВЫКЛ) В СОСТ НВР2Выключен;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_НВР2 == ВКЛ) В СОСТ НВР2Включен;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыНВР2  */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР2   =*/
/*=       643.АЭ1610.10000 Д2.36          =*/
/*=========================================*/
/* НВР2 должен быть выключен===============*/

ПРОЦ КонтрольВключенияНВР2{
 ИЗ ПРОЦ Инициализация  К_НВР2,
                        У_НВР2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_НВР2 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_НВР2)) ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_НВР2 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_НВР2)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
СОСТ НарушениеСвязи {
      ОШИБКА;
 }
}  /* конец ПРОЦ ВключенияНВР2   */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ НВР2  =*/
/*=       643.АЭ1610.10000 Д2.36          =*/
/*=========================================*/
/* НВН1 должен быть включен ===============*/

ПРОЦ КонтрольВыключенияНВР2{
 ИЗ ПРОЦ Инициализация  К_НВР2,
                        У_НВР2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_НВР2 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_НВР2)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД2;
              В СЛЕДУЮЩЕЕ;
          }
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольУправления {
      ЕСЛИ (У_НВР2 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_НВР2)) {
              ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД2;
              В СЛЕДУЮЩЕЕ;
          }
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольВыключенияНВР2   */



/*=========================================*/
/*=                                       =*/
/*=      ВКЛЮЧЕНИЕ ДВИГАТЕЛЯ ДВН1         =*/
/*=      643.АЭ1610.10000 Д2.36           =*/
/*=========================================*/
ПРОЦ ВКЛ_ДВН1{
 ИЗ ПРОЦ Инициализация  К_ДВН1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_ДВН1;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ВЫКЛ_ДВН1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫКЛ_ДВН1;
      СТОП ПРОЦ КонтрольВключенияДВН1;
      У_ДВН1 = ВКЛ;
      В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
      ЕСЛИ (К_ДВН1 == ВКЛ) {
         СТАРТ ПРОЦ КонтрольВыключенияДВН1;
         В СЛЕДУЮЩЕЕ;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДВН1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_ДВН1))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ВКЛ_ДВН1   */


/*=========================================*/
/*=                                       =*/
/*=      ВЫКЛЮЧЕНИЕ ДВИГАТЕЛЯ ДВН1        =*/
/*=      643.АЭ1610.10000 Д2.36           =*/
/*=========================================*/
ПРОЦ ВЫКЛ_ДВН1{
 ИЗ ПРОЦ Инициализация  К_ДВН1,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_ДВН1;
 СОСТ Начало {
    ЕСЛИ (ПРОЦ ВКЛ_ДВН1 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВКЛ_ДВН1;
    СТОП ПРОЦ КонтрольВыключенияДВН1;
    У_ДВН1 = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
    ЕСЛИ (К_ДВН1 == ВЫКЛ) {
         СТАРТ ПРОЦ КонтрольВключенияДВН1;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДВН1_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН1))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}   /* конец ПРОЦ ВЫКЛ_ДВН1   */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ РАБОТЫ ДВИГАТЕЛЯ ДВН1      =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
ПРОЦ КонтрольРаботыДВН1{
 ИЗ ПРОЦ Инициализация  К_ДВН1,
                        У_ДВН1;

 СОСТ Начало {
      ЕСЛИ (К_ДВН1 == ВКЛ) В СОСТ ДВН1Включен;
      ИНАЧЕ                В СОСТ ДВН1Выключен;
 }

 СОСТ ДВН1Включен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_ДВН1_ВКЛЮЧЕНЫ))    В СОСТ ОжиданиеВыключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ДВН1Выключен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_ДВН1_ВЫКЛЮЧЕНЫ))    В СОСТ ОжиданиеВключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_ДВН1 == ВЫКЛ) В СОСТ ДВН1Выключен;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_ДВН1 == ВКЛ) В СОСТ ДВН1Включен;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыДВН1  */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН1   =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
/* ДВН1 должен быть выключен===============*/

ПРОЦ КонтрольВключенияДВН1{
 ИЗ ПРОЦ Инициализация  К_ДВН1,
                        У_ДВН1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_ДВН1 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_ДВН1)) ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_ДВН1 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_ДВН1)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
СОСТ НарушениеСвязи {
      ОШИБКА;
 }
}  /* конец ПРОЦ ВключенияДВН1   */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН1  =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
/* НВН1 должен быть включен ===============*/

ПРОЦ КонтрольВыключенияДВН1{
 ИЗ ПРОЦ Инициализация  К_ДВН1,
                        У_ДВН1;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_ДВН1 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_ДВН1))   ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольУправления {
      ЕСЛИ (У_ДВН1 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_ДВН1)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольВыключенияДВН1   */



/*=========================================*/
/*=                                       =*/
/*=      ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН2         =*/
/*=      643.АЭ1610.10000 Д2.36           =*/
/*=========================================*/
ПРОЦ ВКЛ_ДВН2{
 ИЗ ПРОЦ Инициализация  К_ДВН2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_ДВН2;
 СОСТ Начало {
      ЕСЛИ (ПРОЦ ВЫКЛ_ДВН2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВЫКЛ_ДВН2;
      СТОП ПРОЦ КонтрольВключенияДВН2;
      У_ДВН2 = ВКЛ;
      В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
      ЕСЛИ (К_ДВН2 == ВКЛ) {
         СТАРТ ПРОЦ КонтрольВыключенияДВН2;
         В СЛЕДУЮЩЕЕ;
      }
      ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДВН2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВКЛ_ДВН2))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец ПРОЦ ВКЛ_ДВН2   */


/*=========================================*/
/*=                                       =*/
/*=      ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН2        =*/
/*=      643.АЭ1610.10000 Д2.36           =*/
/*=========================================*/
ПРОЦ ВЫКЛ_ДВН2{
 ИЗ ПРОЦ Инициализация  К_ДВН2,
                        Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС,
                        У_ДВН2;
 СОСТ Начало {
    ЕСЛИ (ПРОЦ ВКЛ_ДВН2 В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ВКЛ_ДВН2;
    СТОП ПРОЦ КонтрольВыключенияДВН2;
    У_ДВН2 = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания {
    ЕСЛИ (К_ДВН2 == ВЫКЛ) {
         СТАРТ ПРОЦ КонтрольВключенияДВН2;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ Т_НА_СРАБАТЫВАНИЕ_УСТРОЙСТВ_ГВС В СОСТ Ошибка;
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДВН2_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Ошибка {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_АВТОМАТА_ИЛИ_ПУСКАТЕЛЯ_ПРИ_ВЫКЛ_ДВН2))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}   /* конец ПРОЦ ВЫКЛ_ДВН2   */

/*=========================================*/
/*=                                       =*/
/*=   КОНТРОЛЬ РАБОТЫ ДВИГАТЕЛЯ ДВН2      =*/
/*=   643.АЭ1610.10000 Д2.36              =*/
/*=========================================*/
ПРОЦ КонтрольРаботыДВН2{
 ИЗ ПРОЦ Инициализация  К_ДВН2,
                        У_ДВН2;

 СОСТ Начало {
      ЕСЛИ (К_ДВН2 == ВКЛ) В СОСТ ДВН2Включен;
      ИНАЧЕ                В СОСТ ДВН2Выключен;
 }

 СОСТ ДВН2Включен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ПУСКАТЕЛЬ_ДВН2_ВКЛЮЧЕНЫ))    В СОСТ ОжиданиеВыключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ДВН2Выключен{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВТОМАТ_И_ИЛИ_ПУСКАТЕЛЬ_ДВН2_ВЫКЛЮЧЕНЫ))    В СОСТ ОжиданиеВключения;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_ДВН2 == ВЫКЛ) В СОСТ ДВН2Выключен;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_ДВН2 == ВКЛ) В СОСТ ДВН2Включен;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРаботыДВН2  */

/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ ВКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН2    =*/
/*=  643.АЭ1610.10000 Д2.36               =*/
/*=========================================*/
/* ДВН2 должен быть выключен===============*/

ПРОЦ КонтрольВключенияДВН2{
 ИЗ ПРОЦ Инициализация  К_ДВН2,
                        У_ДВН2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_ДВН2 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_ДВН2)) ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольУправления {
      ЕСЛИ (У_ДВН2 == ВКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВКЛЮЧЕНИЕ_У_ДВН2)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
СОСТ НарушениеСвязи {
      ОШИБКА;
 }
}  /* конец ПРОЦ ВключенияДВН2   */

/*=========================================*/
/*=                                       =*/
/*=  КОНТРОЛЬ ВЫКЛЮЧЕНИЯ ДВИГАТЕЛЯ ДВН2   =*/
/*=  643.АЭ1610.10000 Д2.36               =*/
/*=========================================*/
/* НВН1 должен быть включен ===============*/

ПРОЦ КонтрольВыключенияДВН2{
 ИЗ ПРОЦ Инициализация  К_ДВН2,
                        У_ДВН2;
 СОСТ КонтрольКонцевика {
      ЕСЛИ (К_ДВН2 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_ДВН2))   ОШИБКА;
      } ИНАЧЕ  В СОСТ КонтрольУправления;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольУправления {
      ЕСЛИ (У_ДВН2 == ВЫКЛ) {
          ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕКОНТРОЛИРУЕМОЕ_ВЫКЛЮЧЕНИЕ_У_ДВН2)) ОШИБКА;
      } ИНАЧЕ В СОСТ КонтрольКонцевика;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ КонтрольВыключенияДВН2   */

/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ УСЛОВИЙ ВКЛЮЧЕНИЯ ДВН1    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1{
 ИЗ ПРОЦ Инициализация  ФП_Pавд1,
                        НП_КонтрольноеВремяДостиженияP1_Т1,
                        НП_ДавлениеВключенияДВН_P1;

 СОСТ Начало {
    ЕСЛИ (ФП_Pавд1 <= НП_ДавлениеВключенияДВН_P1) СТОП;
    ТАЙМАУТ НП_КонтрольноеВремяДостиженияP1_Т1 В СОСТ ПередачаСообщения;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД1))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец процесса КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1 */

/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ УСЛОВИЙ ВКЛЮЧЕНИЯ ДВН2    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ КонтрольУсловийВключенияДВН2_Pавд2_Р1_Т1{
 ИЗ ПРОЦ Инициализация  ФП_Pавд2,
                        НП_КонтрольноеВремяДостиженияP1_Т1,
                        НП_ДавлениеВключенияДВН_P1;

 СОСТ Начало {
    ЕСЛИ (ФП_Pавд2 <= НП_ДавлениеВключенияДВН_P1) СТОП;
    ТАЙМАУТ НП_КонтрольноеВремяДостиженияP1_Т1 В СОСТ ПередачаСообщения;
 }

 СОСТ ПередачаСообщения {
 	ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД2))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}   /* конец процесса КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1 */


/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ УСЛОВИЙ ПОДКЛЮЧЕНИЯ       =*/
/*=    АВД1 К МАГИСТРАЛИ ОТКАЧКИ          =*/
/*=    643.АЭ1610.10000 Д2.36   добавить  =*/
/*=========================================*/
ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7{
 ИЗ ПРОЦ Инициализация  ФП_Pавд1,
                        ТК_ВремяОткачкиДопустимое_Т7,
                        НП_ДавлениеВключенияДВН_P1;
                       /* ТК_ГлубокийВакуум_Р2; */

 СОСТ Начало {
      ЕСЛИ (ФП_Pавд1 <= НП_ДавлениеВключенияДВН_P1)  В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТК_ВремяОткачкиДопустимое_Т7 В СОСТ ПередачаСообщения;
 }
 СОСТ ВакуумированиеПоВремени{
      ТАЙМАУТ ДЕСЯТЬ_СЕКУНД СТОП;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КНТР_ВРЕМЯ_ИСТЕКЛО__Pавд1_ВЫШЕ_Pнк))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }

/*  СОСТ Начало {
/*       ЕСЛИ (ФП_Pавд1 <= ТК_ГлубокийВакуум_Р2)  СТОП;
/* 
/*       ТАЙМАУТ ТК_ВремяОткачкиДопустимое_Т7 В СОСТ ПередачаСообщения;
/*  }
/* 
/*  СОСТ ПередачаСообщения {
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КНТР_ВРЕМЯ_ИСТЕКЛО__Pавд1_ВЫШЕ_Pнк))
/*          ОШИБКА;
/*     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/*  }
/* 
/* /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
/* 
/*  СОСТ НарушениеСвязи {
/*    ОШИБКА;
/*  }
*/
}   /* конец процесса КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7 */

/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ УСЛОВИЙ ПОДКЛЮЧЕНИЯ       =*/
/*=    АВД2 К МАГИСТРАЛИ ОТКАЧКИ          =*/
/*=    643.АЭ1610.10000 Д2.36 добавить    =*/
/*=========================================*/
ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7{
 ИЗ ПРОЦ Инициализация  ФП_Pавд2,
                        ТК_ВремяОткачкиДопустимое_Т7,
                        НП_ДавлениеВключенияДВН_P1;
                       /* ТК_ГлубокийВакуум_Р2; */

 СОСТ Начало {
      ЕСЛИ (ФП_Pавд2 <= НП_ДавлениеВключенияДВН_P1)  В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТК_ВремяОткачкиДопустимое_Т7 В СОСТ ПередачаСообщения;
 }
 СОСТ ВакуумированиеПоВремени{
      ТАЙМАУТ ДЕСЯТЬ_СЕКУНД СТОП;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КНТР_ВРЕМЯ_ИСТЕКЛО__Pавд2_ВЫШЕ_Pнк))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }

}   /* конец процесса КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7 */

/*=========================================*/
/*=                                       =*/
/*=           ВКЛЮЧЕНИЕ АВД1              =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД1{
 ИЗ ПРОЦ Инициализация   Флаг_АВД1;
 СОСТ Начало {
    СТАРТ ПРОЦ Контроль_К_РП8_ПриВключенииАВД;
    ЕСЛИ (ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ) ОШИБКА ПРОЦ ВЫК_АВД1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЩелкаемКлапаны {
 	СТАРТ ПРОЦ ЗАКР_НАТ_АВД1_VE1;
    СТАРТ ПРОЦ ОТКР_ВЫХЛОП_АВД1_VE11;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольСрабатывания{
    ЕСЛИ (!(ПРОЦ  ЗАКР_НАТ_АВД1_VE1 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ОТКР_ВЫХЛОП_АВД1_VE11 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ЗАКР_НАТ_АВД1_VE1 В СОСТ ОШИБКА) ||
               (ПРОЦ  ОТКР_ВЫХЛОП_АВД1_VE11 В СОСТ ОШИБКА))
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВключениеНВР1{
      СТАРТ ПРОЦ ВКЛ_НВР1;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВклНВР {
      ЕСЛИ (!(ПРОЦ ВКЛ_НВР1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_НВР1 В СОСТ ОШИБКА)
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 } 
 СОСТ ПроверкаУсловийВключенияДВН1 {
      ЕСЛИ (ПРОЦ ВКЛ_АВД1_ВК В СОСТ АКТИВНОЕ){
	 В СОСТ РазрешениеВключенияДВН; /* добавить 06.05.22 если шлюзование - то проверять не надо */
      } ИНАЧЕ {
         СТАРТ ПРОЦ КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ РезультатКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийВключенияДВН1_Pавд1_Р1_Т1 В СОСТ ОШИБКА)
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
/* добавить */
 СОСТ РазрешениеВключенияДВН{
      СТАРТ ПРОЦ УправлениеДВН1;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеВключенияАВД1{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВД1_ВКЛЮЧЕН)){
         Флаг_АВД1 = ВКЛ;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*========================================*/
 СОСТ ВыключениеПоОшибке{
    ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОтказВключенияАВД1{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ВКЛЮЧЕНИЯ_АВД1)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     ОШИБКА;
 }
}   /* конец процесса ВКЛ_АВД1 */



/*=========================================*/
/*=                                       =*/
/*=           УПРАВЛЕНИЕ ДВН1 добавить    =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=                                       =*/
/*= проверяет условия включения ДВН       =*/
/*= включает его и отключает              =*/
/*= добавить 2006.05.22                   =*/
/*=========================================*/
ПРОЦ УправлениеДВН1{
 ИЗ ПРОЦ Инициализация  
                        К_VE3,  
                        К_VE5,
                        К_VE7,
                        К_ЗАКР_VM14,
                        К_НВР1,
                        У_НВР1,
                        НП_ДавлениеВключенияДВН_P1,
                        ФП_Pавд1;

 СОСТ Начало{
/*       ЕСЛИ ((К_НВР1) &&      /* работа насоса, давление, МО в ВК или НК */
/*             (У_НВР1) &&
/*             (ФП_Pавд1 <= НП_ДавлениеВключенияДВН_P1) &&
/*             (К_VE5 || 
/*              (К_VE3 && (К_VE7 || !К_ЗАКР_VM14))
/*             )
/*            ) { 
/*            ; /*если все нормально - сработает таймаут */
/*       } ИНАЧЕ {
/*            В СОСТ Начало; /* сброс таймаута */
/*       }
/*       ТАЙМАУТ ДВЕ_СЕКУНДЫ {  /* ждем две секунды стабильных условий включения */
/*           СТАРТ ПРОЦ ВКЛ_ДВН1;
/*           В СЛЕДУЮЩЕЕ; 
/*       }
*/
      ЕСЛИ ((К_НВР1) &&      /* работа насоса, МО в НК */
            (У_НВР1) &&
/*            (К_VE3 && (К_VE7 || !К_ЗАКР_VM14)) */
            (К_VE3)
           ) { 
           ; /*если все нормально - сработает таймаут */
      } ИНАЧЕ {
           В СОСТ Начало; /* сброс таймаута */
      }
      ТАЙМАУТ ДВЕ_СЕКУНДЫ {  /* ждем две секунды стабильных условий включения */
          СТАРТ ПРОЦ ВКЛ_ДВН1;
          В СЛЕДУЮЩЕЕ; 
      }
 }
 СОСТ КонтрольВклДВНиОСТАНОВ{
      ЕСЛИ (!(ПРОЦ ВКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ДВН1 В СОСТ ОШИБКА) {
             СТАРТ ПРОЦ ВЫКЛ_ДВН1;  
             ОШИБКА;
         }
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ КонтрольВклДВН{
      ЕСЛИ (!(ПРОЦ ВКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ДВН1 В СОСТ ОШИБКА) {
             СТАРТ ПРОЦ ВЫКЛ_ДВН1;  
             ОШИБКА;
         }
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПаузаНаВключение{
      ЕСЛИ (ФП_Pавд1 >= 90.0) В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольУсловийВыключенияДВН{
      ЕСЛИ ((!К_НВР1) ||      /* работа насоса, давление, МО в НК */
            (!У_НВР1) ||
            (!К_VE3 || (!К_VE7 && К_ЗАКР_VM14))
           ) {
               СТАРТ ПРОЦ ВЫКЛ_ДВН1;
               В СЛЕДУЮЩЕЕ; 
      }
 }
 СОСТ КонтрольВыклДВН{
      ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_ДВН1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПаузаНаВыключение {
      ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СОСТ Начало;
 }

/*  СОСТ КонтрольВклДВН{
/*       ЕСЛИ (!(ПРОЦ ВКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
/*          ЕСЛИ (ПРОЦ ВКЛ_ДВН1 В СОСТ ОШИБКА) {
/*              СТАРТ ПРОЦ ВЫКЛ_ДВН1;  
/*              ОШИБКА;
/*          }
/*          ИНАЧЕ В СЛЕДУЮЩЕЕ;
/*       }
/*  }
/*  СОСТ ПаузаНаВключение{
/*       ЕСЛИ (ФП_Pавд1 >= 90.0) В СЛЕДУЮЩЕЕ;
/*       ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;
/*  }
/*  СОСТ КонтрольУсловийВыключенияДВН{
/*       ЕСЛИ ((!К_НВР1) ||      /* работа насоса, давление, МО в ВК или НК */
/*             (!У_НВР1) ||
/*             (ФП_Pавд1 >= 10.0) ||
/*             ((!К_VE5) && 
/*              (!К_VE3 || (!К_VE7 && К_ЗАКР_VM14))
/*             )
/*            ) {
/*                СТАРТ ПРОЦ ВЫКЛ_ДВН1;
/*                В СЛЕДУЮЩЕЕ; 
/*       }
/*  }
/*  СОСТ КонтрольВыклДВН{
/*       ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
/*          ЕСЛИ (ПРОЦ ВЫКЛ_ДВН1 В СОСТ ОШИБКА) ОШИБКА;
/*          ИНАЧЕ В СЛЕДУЮЩЕЕ;
/*       }
/*  }
/*  СОСТ ПаузаНаВыключение {
/*       ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СОСТ Начало;
/*  }
*/
}

/*=========================================*/
/*=                                       =*/
/*=           ВКЛЮЧЕНИЕ АВД2              =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД2{
 ИЗ ПРОЦ Инициализация   Флаг_АВД2;

 СОСТ Начало {
    СТАРТ ПРОЦ Контроль_К_РП8_ПриВключенииАВД;
    ЕСЛИ (ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ) ОШИБКА ПРОЦ ВЫК_АВД2;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ ЩелкаемКлапаны {
 	СТАРТ ПРОЦ ЗАКР_НАТ_АВД2_VE2;
    СТАРТ ПРОЦ ОТКР_ВЫХЛОП_АВД2_VE10;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатывания{
    ЕСЛИ (!(ПРОЦ  ЗАКР_НАТ_АВД2_VE2 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ОТКР_ВЫХЛОП_АВД2_VE10 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ЗАКР_НАТ_АВД2_VE2 В СОСТ ОШИБКА) ||
               (ПРОЦ  ОТКР_ВЫХЛОП_АВД2_VE10 В СОСТ ОШИБКА))
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВключениеНВР2{
      СТАРТ ПРОЦ ВКЛ_НВР2;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВклНВР {
      ЕСЛИ (!(ПРОЦ ВКЛ_НВР2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_НВР2 В СОСТ ОШИБКА)
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПроверкаУсловийВключенияДВН2 {
      ЕСЛИ (ПРОЦ ВКЛ_АВД2_ВК В СОСТ АКТИВНОЕ){
	 В СОСТ РазрешениеВключенияДВН; /* добавить 06.05.22 если 4шлюзование - то проверять не надо */
      } ИНАЧЕ {
         СТАРТ ПРОЦ КонтрольУсловийВключенияДВН2_Pавд2_Р1_Т1;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ РезультатКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийВключенияДВН2_Pавд2_Р1_Т1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийВключенияДВН2_Pавд2_Р1_Т1 В СОСТ ОШИБКА)
               В СОСТ ВыключениеПоОшибке;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
/* добавить */
 СОСТ РазрешениеВключенияДВН{
      СТАРТ ПРОЦ УправлениеДВН2;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеВключенияАВД2{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВД2_ВКЛЮЧЕН)){
         Флаг_АВД2 = ВКЛ;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*========================================*/
 СОСТ ВыключениеПоОшибке{
    ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ВЫК_АВД2;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОтказВключенияАВД2{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ВКЛЮЧЕНИЯ_АВД2)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     ОШИБКА;
 }
}   /* конец процесса ВКЛ_АВД2 */

/*=========================================*/
/*=                                       =*/
/*=           УПРАВЛЕНИЕ ДВН2 добавить    =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=                                       =*/
/*= проверяет условия включения ДВН       =*/
/*= включает его и отключает              =*/
/*= добавить 2006.05.22                   =*/
/*=========================================*/
ПРОЦ УправлениеДВН2{
 ИЗ ПРОЦ Инициализация  
                        К_VE4,
                        К_VE6,
                        К_VE7,
                        К_ЗАКР_VM14,
                        К_НВР2,
                        У_НВР2,
                        НП_ДавлениеВключенияДВН_P1,
                        ФП_Pавд2;

 СОСТ Начало{
/*       ЕСЛИ ((К_НВР2) &&      /* работа насоса, давление, МО в ВК или НК */
/*             (У_НВР2) &&
/*             (ФП_Pавд2 <= НП_ДавлениеВключенияДВН_P1) &&
/*             (К_VE6 || 
/*              (К_VE4 && (К_VE7 || !К_ЗАКР_VM14))
/*             )
/*            ) {
/*            ; /*если все нормально - сработает таймаут */
/*       } ИНАЧЕ {
/*            В СОСТ Начало; /* сброс таймаута */
/*       }      	
/*       ТАЙМАУТ ДВЕ_СЕКУНДЫ {  /* ждем две секунды стабильных условий включения */
/*            СТАРТ ПРОЦ ВКЛ_ДВН2;
/*            В СЛЕДУЮЩЕЕ; 
/*       }
*/
      ЕСЛИ ((К_НВР2) &&      /* работа насоса, МО в НК */
            (У_НВР2) &&
/*            (К_VE4 && (К_VE7 || !К_ЗАКР_VM14)) */
            (К_VE4)
           ) { 
           ; /*если все нормально - сработает таймаут */
      } ИНАЧЕ {
           В СОСТ Начало; /* сброс таймаута */
      }
      ТАЙМАУТ ДВЕ_СЕКУНДЫ {  /* ждем две секунды стабильных условий включения */
          СТАРТ ПРОЦ ВКЛ_ДВН2;
          В СЛЕДУЮЩЕЕ; 
      }
 }
 СОСТ КонтрольВклДВНиОСТАНОВ{
      ЕСЛИ (!(ПРОЦ ВКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ДВН2 В СОСТ ОШИБКА) {
             СТАРТ ПРОЦ ВЫКЛ_ДВН2;  
             ОШИБКА;
         }
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ КонтрольВклДВН{
      ЕСЛИ (!(ПРОЦ ВКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ДВН2 В СОСТ ОШИБКА) {
             СТАРТ ПРОЦ ВЫКЛ_ДВН2;  
             ОШИБКА;
         }
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПаузаНаВключение{
      ЕСЛИ (ФП_Pавд2 >= 90.0) В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольУсловийВыключенияДВН{
      ЕСЛИ ((!К_НВР2) ||      /* работа насоса, давление, МО в ВК или НК */
            (!У_НВР2) ||
            (!К_VE4 || (!К_VE7 && К_ЗАКР_VM14))
           ) {
               СТАРТ ПРОЦ ВЫКЛ_ДВН2;
               В СЛЕДУЮЩЕЕ; 
      }
 }
 СОСТ КонтрольВыклДВН{
      ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_ДВН2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПаузаНаВыключение {
      ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СОСТ Начало;
 }
                
/*  СОСТ КонтрольВклДВН{
/*       ЕСЛИ (!(ПРОЦ ВКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
/*          ЕСЛИ (ПРОЦ ВКЛ_ДВН2 В СОСТ ОШИБКА) {
/*              СТАРТ ПРОЦ ВЫКЛ_ДВН2;  
/*              ОШИБКА;
/*          }
/*          ИНАЧЕ В СЛЕДУЮЩЕЕ;
/*       }
/*  }
/*  СОСТ ПаузаНаВключение{
/*       ЕСЛИ (ФП_Pавд2 >= 90.0) В СЛЕДУЮЩЕЕ;
/*       ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;
/*  }
/*  СОСТ КонтрольУсловийВыключенияДВН{
/*       ЕСЛИ ((!К_НВР2) ||      /* работа насоса, давление, МО в ВК или НК */
/*             (!У_НВР2) ||
/*             (ФП_Pавд2 >= 10.0) ||
/*             ((!К_VE6) && 
/*              (!К_VE4 || (!К_VE7 && К_ЗАКР_VM14))
/*             )
/*            ) {
/*                СТАРТ ПРОЦ ВЫКЛ_ДВН2;
/*                В СЛЕДУЮЩЕЕ; 
/*       }
/*  }
/*  СОСТ КонтрольВыклДВН{
/*       ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
/*          ЕСЛИ (ПРОЦ ВЫКЛ_ДВН2 В СОСТ ОШИБКА) ОШИБКА;
/*          ИНАЧЕ В СЛЕДУЮЩЕЕ;
/*       }
/*  }
/*  СОСТ ПаузаНаВыключение {
/*       ТАЙМАУТ ТРИДЦАТЬ_СЕКУНД В СОСТ Начало;
/*  }
*/
}


/*=========================================*/
/*=                                       =*/
/*=           ВЫКЛЮЧЕНИЕ АВД1             =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=========================================*/
ПРОЦ ВЫК_АВД1{
 ИЗ ПРОЦ Инициализация   Флаг_АВД1;

 СОСТ Начало {
      Флаг_АВД1 = ВЫКЛ;
      ЕСЛИ (ПРОЦ ВКЛ_АВД1 В СОСТ АКТИВНОЕ) ОШИБКА ПРОЦ ВКЛ_АВД1;
      В СОСТ ЩелкаемКлапаны;
 }

 СОСТ ЩелкаемКлапаны {
    СТАРТ ПРОЦ ЗАКР_АВД1_МО_НК_VE3;
    СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
    В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания{
    ЕСЛИ (!(ПРОЦ  ЗАКР_АВД1_МО_НК_VE3 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ЗАКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ЗАКР_АВД1_МО_НК_VE3 В СОСТ ОШИБКА) ||
               (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СОСТ ВыключениеДВН1;
    }
 }
 СОСТ ВыключениеДВН1{
      СТОП ПРОЦ УправлениеДВН1; /*добавить*/
      СТАРТ ПРОЦ ВЫКЛ_ДВН1;
      В СОСТ ПроверкаВыключенияДВН1;
 }

 СОСТ ПроверкаВыключенияДВН1 {
      ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_ДВН1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ТаймаутВыклДВН1;
      }
 }

 СОСТ ТаймаутВыклДВН1 {
      ТАЙМАУТ Т_ДВН_НВР В СОСТ ОткрытиеНатекания;
 }
 СОСТ ОткрытиеНатекания {
      СТАРТ ПРОЦ ОТКР_НАТ_АВД1_VE1;
      В СОСТ КонтрольОткрытияНатекания;
 }

 СОСТ КонтрольОткрытияНатекания {
      ЕСЛИ (!(ПРОЦ ОТКР_НАТ_АВД1_VE1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_НАТ_АВД1_VE1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ВыключенияНВР1;
      }
 }
 СОСТ ВыключенияНВР1{
      СТАРТ ПРОЦ ВЫКЛ_НВР1;
      В СОСТ ПроверкаВыключенияНВР1;
 }
 СОСТ ПроверкаВыключенияНВР1 {
      ЕСЛИ (!(ПРОЦ ВЫКЛ_НВР1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_НВР1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ТаймаутВыклНВР1;
      }
 }

 СОСТ ТаймаутВыклНВР1 {
      ТАЙМАУТ Т_НА_НАТЕКАНИЕ_ВОЗДУХА_В_АВД В СОСТ ЗакрытиеВыхлопа;
 }

 СОСТ ЗакрытиеВыхлопа{
      СТАРТ ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11;
      В СОСТ ПроверкаЗакрытияВыхлопа;
 }
 СОСТ ПроверкаЗакрытияВыхлопа {
      ЕСЛИ (!(ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_ВЫХЛОП_АВД1_VE11 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ЗакрытиеНатекания;
      }
 }
 СОСТ ЗакрытиеНатекания{
      СТАРТ ПРОЦ ЗАКР_НАТ_АВД1_VE1;
      В СОСТ ПроверкаЗакрытияНатекания;
 }
 СОСТ ПроверкаЗакрытияНатекания {
      ЕСЛИ (!(ПРОЦ ЗАКР_НАТ_АВД1_VE1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_НАТ_АВД1_VE1 В СОСТ ОШИБКА) В СОСТ СообщениеОтказВыключенияАВД1;
         ИНАЧЕ В СОСТ СообщениеВыключенияАВД1;
      }
 }

 СОСТ СообщениеВыключенияАВД1{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВД1_ВЫКЛЮЧЕН)) СТОП;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СообщениеОтказВыключенияАВД1{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ВЫКЛЮЧЕНИЯ_АВД1)) ОШИБКА;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     ОШИБКА;
 }

}   /* конец процесса ВЫК_АВД1 */


/*=========================================*/
/*=                                       =*/
/*=           ВЫКЛЮЧЕНИЕ АВД2             =*/
/*=           643.АЭ1610.10000 Д2.36      =*/
/*=========================================*/
ПРОЦ ВЫК_АВД2{
 ИЗ ПРОЦ Инициализация   Флаг_АВД2;

 СОСТ Начало {
      Флаг_АВД2 = ВЫКЛ;
      ЕСЛИ (ПРОЦ ВКЛ_АВД2 В СОСТ АКТИВНОЕ) ОШИБКА ПРОЦ ВКЛ_АВД2;
      В СОСТ ЩелкаемКлапаны;
 }

 СОСТ ЩелкаемКлапаны {
    СТАРТ ПРОЦ ЗАКР_АВД2_МО_НК_VE4;
    СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
    В СОСТ КонтрольСрабатывания;
 }

 СОСТ КонтрольСрабатывания{
    ЕСЛИ (!(ПРОЦ  ЗАКР_АВД2_МО_НК_VE4 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ЗАКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ЗАКР_АВД2_МО_НК_VE4 В СОСТ ОШИБКА) ||
               (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СОСТ ВыключениеДВН2;
    }
 }
 СОСТ ВыключениеДВН2{
      СТОП ПРОЦ УправлениеДВН2; /*добавить*/
      СТАРТ ПРОЦ ВЫКЛ_ДВН2;
      В СОСТ ПроверкаВыключенияДВН2;
 }

 СОСТ ПроверкаВыключенияДВН2 {
      ЕСЛИ (!(ПРОЦ ВЫКЛ_ДВН2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_ДВН2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ТаймаутВыклДВН2;
      }
 }

 СОСТ ТаймаутВыклДВН2 {
      ТАЙМАУТ Т_ДВН_НВР В СОСТ ОткрытиеНатекания;
 }
 СОСТ ОткрытиеНатекания {
      СТАРТ ПРОЦ ОТКР_НАТ_АВД2_VE2;
      В СОСТ КонтрольОткрытияНатекания;
 }

 СОСТ КонтрольОткрытияНатекания {
      ЕСЛИ (!(ПРОЦ ОТКР_НАТ_АВД2_VE2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_НАТ_АВД2_VE2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ВыключенияНВР2;
      }
 }
 СОСТ ВыключенияНВР2{
      СТАРТ ПРОЦ ВЫКЛ_НВР2;
      В СОСТ ПроверкаВыключенияНВР2;
 }
 СОСТ ПроверкаВыключенияНВР2 {
      ЕСЛИ (!(ПРОЦ ВЫКЛ_НВР2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫКЛ_НВР2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ТаймаутВыклНВР2;
      }
 }

 СОСТ ТаймаутВыклНВР2 {
      ТАЙМАУТ Т_НА_НАТЕКАНИЕ_ВОЗДУХА_В_АВД В СОСТ ЗакрытиеВыхлопа;
 }

 СОСТ ЗакрытиеВыхлопа{
      СТАРТ ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10;
      В СОСТ ПроверкаЗакрытияВыхлопа;
 }
 СОСТ ПроверкаЗакрытияВыхлопа {
      ЕСЛИ (!(ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_ВЫХЛОП_АВД2_VE10 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ЗакрытиеНатекания;
      }
 }
 СОСТ ЗакрытиеНатекания{
      СТАРТ ПРОЦ ЗАКР_НАТ_АВД2_VE2;
      В СОСТ ПроверкаЗакрытияНатекания;
 }
 СОСТ ПроверкаЗакрытияНатекания {
      ЕСЛИ (!(ПРОЦ ЗАКР_НАТ_АВД2_VE2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАКР_НАТ_АВД2_VE2 В СОСТ ОШИБКА) В СОСТ СообщениеОтказВыключенияАВД2;
         ИНАЧЕ В СОСТ СообщениеВыключенияАВД2;
      }
 }
 СОСТ СообщениеВыключенияАВД2{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВД2_ВЫКЛЮЧЕН)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СообщениеОтказВыключенияАВД2{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ВЫКЛЮЧЕНИЯ_АВД2)) ОШИБКА;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     ОШИБКА;
 }
}   /* конец процесса ВЫК_АВД2 */

/*=========================================*/
/*=                                       =*/
/*=    ПОДКЛЮЧЕНИЕ АВД1 ДЛЯ ОТКАЧКИ НК    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД1_НК{
 ИЗ ПРОЦ Инициализация  НП_Pатмосф,
                        ФП_Pнк;

 СОСТ Начало {
      ЕСЛИ (ФП_Pнк > НП_Pатмосф) В СОСТ БольшеАтмосферного;
      ИНАЧЕ В СОСТ МеньшеРавноАтмосферного;
 }

 СОСТ БольшеАтмосферного {
      СТАРТ ПРОЦ ОТКР_АВД1_МО_НК_VE3;
      В СОСТ ПроверкаОткрытияМагистралиАВД1;
 }
 СОСТ ПроверкаОткрытияМагистралиАВД1 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_НК_VE3 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_НК_VE3 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ВключениеАВД1;
      }
 }
 СОСТ ВключениеАВД1 {
      СТАРТ ПРОЦ ВКЛ_АВД1;
      В СОСТ ПроверкаВключенияАВД1;
 }
 СОСТ ПроверкаВключенияАВД1 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 } /*--------------------*/
 СОСТ МеньшеРавноАтмосферного {
      СТАРТ ПРОЦ ВКЛ_АВД1;
      В СОСТ ПроверкаВключения_АВД1;
 }
 СОСТ ПроверкаВключения_АВД1 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ПроверкаУсловийПодключения;
      }
 }
 СОСТ ПроверкаУсловийПодключения {
      СТАРТ ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7;
      В СОСТ ПроверкаРезультатовКонтроля;
 }
 СОСТ ПроверкаРезультатовКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ОткрытиеМагистралиОткачки;
      }
 }
 СОСТ ОткрытиеМагистралиОткачки {
      СТАРТ ПРОЦ ОТКР_АВД1_МО_НК_VE3;
      В СОСТ ПроверкаОткрытияМагистрали_АВД1;
 }
 СОСТ ПроверкаОткрытияМагистрали_АВД1 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_НК_VE3 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_НК_VE3 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 }

}   /* конец процесса ВКЛ_АВД1_НК */

/*=========================================*/
/*=                                       =*/
/*=    ПОДКЛЮЧЕНИЕ АВД2 ДЛЯ ОТКАЧКИ НК    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД2_НК{
 ИЗ ПРОЦ Инициализация  НП_Pатмосф,
                        ФП_Pнк;


 СОСТ Начало {
      ЕСЛИ (ФП_Pнк > НП_Pатмосф) В СОСТ БольшеАтмосферного;
      ИНАЧЕ В СОСТ МеньшеРавноАтмосферного;
 }

 СОСТ БольшеАтмосферного {
      СТАРТ ПРОЦ ОТКР_АВД2_МО_НК_VE4;
      В СОСТ ПроверкаОткрытияМагистралиАВД2;
 }
 СОСТ ПроверкаОткрытияМагистралиАВД2 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_НК_VE4 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_НК_VE4 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ВключениеАВД2;
      }
 }
 СОСТ ВключениеАВД2 {
      СТАРТ ПРОЦ ВКЛ_АВД2;
      В СОСТ ПроверкаВключенияАВД2;
 }
 СОСТ ПроверкаВключенияАВД2 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 } /*--------------------*/
 СОСТ МеньшеРавноАтмосферного {
      СТАРТ ПРОЦ ВКЛ_АВД2;
      В СОСТ ПроверкаВключения_АВД2;
 }
 СОСТ ПроверкаВключения_АВД2 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ПроверкаУсловийПодключения;
      }
 }
 СОСТ ПроверкаУсловийПодключения {
      СТАРТ ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7;
      В СОСТ ПроверкаРезультатовКонтроля;
 }
 СОСТ ПроверкаРезультатовКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ОткрытиеМагистралиОткачки;
      }
 }
 СОСТ ОткрытиеМагистралиОткачки {
      СТАРТ ПРОЦ ОТКР_АВД2_МО_НК_VE4;
      В СОСТ ПроверкаОткрытияМагистрали_АВД2;
 }
 СОСТ ПроверкаОткрытияМагистрали_АВД2 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_НК_VE4 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_НК_VE4 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 }

}   /* конец процесса ВКЛ_АВД2_НК */

/*=========================================*/
/*=                                       =*/
/*=    ПОДКЛЮЧЕНИЕ АВД1 ДЛЯ ОТКАЧКИ ВК    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД1_ВК{
 ИЗ ПРОЦ Инициализация  НП_Pатмосф,
                        ФП_Pвк;


 СОСТ Начало {
      ЕСЛИ (ФП_Pвк > НП_Pатмосф) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ МеньшеРавноАтмосферного;
 }
 СОСТ БольшеАтмосферного {
      СТАРТ ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаОткрытияМагистралиАВД1 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ВключениеАВД1 {
      СТАРТ ПРОЦ ВКЛ_АВД1;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключенияАВД1 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 } /*--------------------*/
 СОСТ МеньшеРавноАтмосферного {
      СТАРТ ПРОЦ ВКЛ_АВД1;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключения_АВД1 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ПроверкаУсловийПодключения {
      СТАРТ ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийПодклАВД1кМО_Pавд1_Р2_Т7 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ОткрытиеМагистралиОткачки {
      СТАРТ ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаОткрытияМагистрали_АВД1 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 }
}   /* конец процесса ВКЛ_АВД1_ВК */

/*=========================================*/
/*=                                       =*/
/*=    ПОДКЛЮЧЕНИЕ АВД2 ДЛЯ ОТКАЧКИ ВК    =*/
/*=    643.АЭ1610.10000 Д2.36             =*/
/*=========================================*/
ПРОЦ ВКЛ_АВД2_ВК{
 ИЗ ПРОЦ Инициализация  НП_Pатмосф,
                        ФП_Pвк;

 СОСТ Начало {
      ЕСЛИ (ФП_Pвк > НП_Pатмосф) В СОСТ БольшеАтмосферного;
      ИНАЧЕ В СОСТ МеньшеРавноАтмосферного;
 }

 СОСТ БольшеАтмосферного {
      СТАРТ ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
      В СОСТ ПроверкаОткрытияМагистралиАВД2;
 }
 СОСТ ПроверкаОткрытияМагистралиАВД2 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ВключениеАВД2;
      }
 }
 СОСТ ВключениеАВД2 {
      СТАРТ ПРОЦ ВКЛ_АВД2;
      В СОСТ ПроверкаВключенияАВД2;
 }
 СОСТ ПроверкаВключенияАВД2 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 } /*--------------------*/
 СОСТ МеньшеРавноАтмосферного {
      СТАРТ ПРОЦ ВКЛ_АВД2;
      В СОСТ ПроверкаВключения_АВД2;
 }
 СОСТ ПроверкаВключения_АВД2 {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ПроверкаУсловийПодключения;
      }
 }
 СОСТ ПроверкаУсловийПодключения {
      СТАРТ ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7;
      В СОСТ ПроверкаРезультатовКонтроля;
 }
 СОСТ ПроверкаРезультатовКонтроля {
      ЕСЛИ (!(ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольУсловийПодклАВД2кМО_Pавд2_Р2_Т7 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СОСТ ОткрытиеМагистралиОткачки;
      }
 }
 СОСТ ОткрытиеМагистралиОткачки {
      СТАРТ ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
      В СОСТ ПроверкаОткрытияМагистрали_АВД2;
 }
 СОСТ ПроверкаОткрытияМагистрали_АВД2 {
      ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
      }
 }
}   /* конец процесса ВКЛ_АВД2_ВК */



/*===================================================*/
/*  РАЗГЕРМЕТИЗАЦИЯ ВК ДЛЯ ИЗЪЯТИЯ "НЕДОНОШЕННОГО"   */ /* добавить */
/*  КРИСТАЛЛА И ПРОСТО ДОСТУПА В ВК ПРИ ВКЛ. ИПН     */
/*         643.АЭ1610.10121  Д2.36                   */
/*===================================================*/
ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК{
ИЗ ПРОЦ Инициализация 
                      К_VE5,
                      К_VE6,
                      К_ОТКР_ЗАТВОР_В,
                      К_ЗАКР_ЗАТВОР_В,
                      ФП_Ммонокристалла,
                      ФП_Pвк,
                      НП_Pатмосф;

ПЛАВ ОП_Мкр_НаНачалоРазрегерметизацииВК ДЛЯ ПРОЦ ВАКУУМИРОВАНИЕ_ВК;

 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НАЧАЛО_РАЗГЕРМЕТИЗАЦИИ_ВК)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ КонтрольНачальныхУсловий{
   ЕСЛИ ((К_ОТКР_ЗАТВОР_В)&&(!К_VE5)&&(!К_VE6)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ В СОСТ ОшибкаНачальныхУсловий;
 }
 СОСТ ЗамерМассы{
   ОП_Мкр_НаНачалоРазрегерметизацииВК = ФП_Ммонокристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПриказОператоруЗакрытьЗВ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ОжиданиеНеОткрытия{
    ЕСЛИ(!К_ОТКР_ЗАТВОР_В) {
       СТАРТ ПРОЦ ОТКР_НАДДУВ_НК_VE12;
       В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ПриказОператоруЗакрытьЗВ;
 }
 СОСТ ОжиданиеЗакрытия{
    ЕСЛИ(К_ЗАКР_ЗАТВОР_В) {
       СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
       СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
       В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ПриказОператоруЗакрытьЗВ;
 }
 СОСТ КонтрольPвк{
   ЕСЛИ (ФП_Pвк >= НП_Pатмосф) { 
       СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
       В СОСТ СообщенииОКонцеРазгерметизации;
   }
   ТАЙМАУТ ДВАДЦАТЬ_МИНУТ В СЛЕДУЮЩЕЕ;
 }
 СОСТ Предупреждение_НетАтмосферыЗаЗаданноеВремя{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРЕВЫШЕНО_ВРЕМЯ_РАЗГЕРМЕТИЗАЦИИ_ВК)) 
         В СОСТ КонтрольPвк;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ СообщенииОКонцеРазгерметизации{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_РАЗГЕРМЕТИЗАЦИИ_ВК)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }

/* ==== Ненормальные ситуации ======== */

 СОСТ ОшибкаНачальныхУсловий{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ШЛЮЗОВАНИЯ_ЗВ_VE5_VE6)) 
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ СообщенииОКонце{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_РАЗГЕРМЕТИЗАЦИИ_ВК)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}
/*===================================================*/
/*  ВАКУУМИРОВАНЕ ВК ПОСЛЕ ИЗЪЯТИЯ "НЕДОНОШЕННОГО"   */ /* добавить */
/*  КРИСТАЛЛА И ПРОСТО ДОСТУПА В ВК ПРИ ВКЛ. ИПН     */
/*         643.АЭ1610.10121  Д2.36                   */
/*===================================================*/
ПРОЦ ВАКУУМИРОВАНИЕ_ВК{
ИЗ ПРОЦ Инициализация 
                      К_ОТКР_ЗАТВОР_В,
                      К_ЗАКР_ЗАТВОР_В,
                      К_VE3,
                      К_VE4,
                      ФП_Pвк,
                      ФП_Pнк,
                      ФП_Ммонокристалла,
                      НП_Pатмосф,
                      ТК_МначальнойЗагрузки;

ИЗ ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК ОП_Мкр_НаНачалоРазрегерметизацииВК;

ЦЕЛ ЛП_ЧислоЦиклов ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НАЧАЛО_ВАКУУМИРОВАНИЯ_ВК)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ КонтрольНачальныхУсловий{
   ЕСЛИ ((К_ЗАКР_ЗАТВОР_В) &&
         (ФП_Pвк >= НП_Pатмосф) &&
         (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ В СОСТ ОшибкаНачальныхУсловий;
 }
 СОСТ КоррекцияМассы{
   ЛП_ЧислоЦиклов = 0;
   ЕСЛИ (fabs(ОП_Мкр_НаНачалоРазрегерметизацииВК - ФП_Ммонокристалла) > 0.5)
         ТК_МначальнойЗагрузки -= ОП_Мкр_НаНачалоРазрегерметизацииВК - ФП_Ммонокристалла;
   ЕСЛИ (!К_VE3 && К_VE4) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ 
        ЕСЛИ (К_VE3 && !К_VE4) В СОСТ АВД2_НаВК;
        ИНАЧЕ В СОСТ НеразрешимаяСитуация;
 }    
/*------------------ Ветка АВД1 --------------*/ 
 СОСТ АВД1_НаВК{
   СТАРТ ПРОЦ ВКЛ_АВД1_ВК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ АВД1_ПроверкаВключенияНасоса{
   ЕСЛИ (!(ПРОЦ ВКЛ_АВД1_ВК В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ВКЛ_АВД1_ВК В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД1_КонтрольДавления100{
   ЕСЛИ (ФП_Pвк <= 100.0) {
      ЛП_ЧислоЦиклов++;
      ЕСЛИ (ЛП_ЧислоЦиклов < 3) {
         СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
         СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
         В СЛЕДУЮЩЕЕ;
      } ИНАЧЕ {
         СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
         В СОСТ АВД1_Пауза2Мин;
      }
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД1_ПроверкаЗакрытияVE5{
   ЕСЛИ (!(ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД1_КонтрольДавления500{
   ЕСЛИ (ФП_Pвк >= 500.0) {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      СТАРТ ПРОЦ ОТКР_АВД1_МО_ВК_VE5;
      В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД1_ПроверкаОткрытияVE5{
   ЕСЛИ (!(ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ОТКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СОСТ АВД1_КонтрольДавления100;
   }
 }
 СОСТ АВД1_Пауза2Мин{
   ТАЙМАУТ ДВЕ_МИНУТЫ {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД1_ОкончательныйКонтрольДавления{
   ЕСЛИ (ФП_Pвк <= (ФП_Pнк + 5.0)) {
      СТАРТ ПРОЦ ВЫК_АВД1;
      В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД1_ПроверкаВыключения{
   ЕСЛИ (!(ПРОЦ ВЫК_АВД1 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ВЫК_АВД1 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СОСТ ПриказОператоруОткрытьЗВ;
   }
 }

/*------------------ Ветка АВД2 --------------*/
 СОСТ АВД2_НаВК{
   СТАРТ ПРОЦ ВКЛ_АВД2_ВК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ АВД2_ПроверкаВключенияНасоса{
   ЕСЛИ (!(ПРОЦ ВКЛ_АВД2_ВК В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ВКЛ_АВД2_ВК В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД2_КонтрольДавления100{
   ЕСЛИ (ФП_Pвк <= 100.0) {
      ЛП_ЧислоЦиклов++;
      ЕСЛИ (ЛП_ЧислоЦиклов < 3) {
         СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
         СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
         В СЛЕДУЮЩЕЕ;
      } ИНАЧЕ {
         СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
         В СОСТ АВД2_Пауза2Мин;
      }
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД2_ПроверкаЗакрытияVE6{
   ЕСЛИ (!(ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД2_КонтрольДавления500{
   ЕСЛИ (ФП_Pвк >= 500.0) {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      СТАРТ ПРОЦ ОТКР_АВД2_МО_ВК_VE6;
      В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД2_ПроверкаОткрытияVE6{
   ЕСЛИ (!(ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ОТКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СОСТ АВД2_КонтрольДавления100;
   }
 }
 СОСТ АВД2_Пауза2Мин{
   ТАЙМАУТ ДВЕ_МИНУТЫ {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ АВД2_ОкончательныйКонтрольДавления{
   ЕСЛИ (ФП_Pвк <= (ФП_Pнк + 5.0)) {
      СТАРТ ПРОЦ ВЫК_АВД2;
      В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ ОтказШлюзования;
 }
 СОСТ АВД2_ПроверкаВыключения{
   ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ ВЫК_АВД2 В СОСТ ОШИБКА) В СОСТ ОтказШлюзования;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
   }
 }
/*------------------ Конец Веток --------------*/

 СОСТ ПриказОператоруОткрытьЗВ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ОжиданиеНеЗакрытия{
    ЕСЛИ(!К_ЗАКР_ЗАТВОР_В) {
       СТАРТ ПРОЦ ОТКР_НАДДУВ_ВК_VE9;
       В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ПриказОператоруОткрытьЗВ;
 }
 СОСТ ОжиданиеОткрытия{
    ЕСЛИ(К_ОТКР_ЗАТВОР_В) {
       СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12;
       В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ПриказОператоруОткрытьЗВ;
 }
 СОСТ СообщениеОКонцеВакуумирования{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ВАКУУМИРОВАНИЯ_ВК)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }

/* ==== Ненормальные ситуации ======== */
 СОСТ ОтказШлюзования {
    СТАРТ ПРОЦ ОСТАНОВ_ШЛЮЗОВАНИЯ;
    В СЛЕДУЮЩЕЕ;  /* тут можно и ОШИБКА, но тогда ОСТАНОВ_ШЛЮЗОВАНИЯ */
 }                /* не определит, что ему делать см. проц ОСТАНОВ_ШЛЮЗОВАНИЯ */
 СОСТ ОжиданиеВыключенияПроцессомОСТАНОВ_ШЛЮЗОВАНИЯ{
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ ОШИБКА; 
 }
 СОСТ ОшибкаНачальныхУсловий{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_УСЛОВИЙ_ШЛЮЗОВАНИЯ_ЗВ_Pвк_РЕГ_Д)) 
        В СОСТ ЗавершающееСообщениеОКонцеВакуумирования;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ НеразрешимаяСитуация{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕШТАТНАЯ_СИТУАЦИЯ_ШЛЮЗОВАНИЯ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ЗавершающееСообщениеОКонцеВакуумирования{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ВАКУУМИРОВАНИЯ_ВК)) 
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}

/*===================================================*/
/*  КОРРЕКТНОЕ ПРЕКРАЩЕНИЕ РАЗГЕРМЕТИЗАЦИИ И         */ /* добавить */
/*  ВАКУУМИРОВАНИЯ ВК                                */
/*         643.АЭ1610.10121  Д2.36                   */
/*===================================================*/

ПРОЦ ОСТАНОВ_ШЛЮЗОВАНИЯ{
ИЗ ПРОЦ Инициализация 
                      К_ОТКР_ЗАТВОР_В,
                      К_ЗАКР_ЗАТВОР_В;

/* СОСТ СообщениеОбОстанове1{ /* добавить 06.05.22 */
/*    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_РАЗГЕРМЕТИЗАЦИИ_ВК)) 
/*         В СЛЕДУЮЩЕЕ;
/*    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
/* }
/* СОСТ СообщениеОбОстанове2{
/*   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ВАКУУМИРОВАНИЯ_ВК)) 
/*         В СЛЕДУЮЩЕЕ;
/*    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
/* }
/*
*/
 СОСТ СообщениеОбОстанове{ /* добавить 06.05.22 */
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОСТАНОВ_ШЛЮЗОВАНИЯ)) 
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ВыборЧегоЖеОстанавливать{
   ЕСЛИ (ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ ЕСЛИ (ПРОЦ ВАКУУМИРОВАНИЕ_ВК В СОСТ АКТИВНОЕ) В СОСТ ОстановВакуумирования;
         ИНАЧЕ СТОП;
 } 
 СОСТ ОстановРазгерметизации{
   ЕСЛИ (К_ЗАКР_ЗАТВОР_В) {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
   } ИНАЧЕ {
      ЕСЛИ (!К_ОТКР_ЗАТВОР_В)
         СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12;
   }
   СТОП ПРОЦ РАЗГЕРМЕТИЗАЦИЯ_ВК;
   СТОП;
 } 
 СОСТ ОстановВакуумирования{
   ЕСЛИ (К_ЗАКР_ЗАТВОР_В) {
      СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
      СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
      СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
      СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
   } 
/* ИНАЧЕ {
/*      ЕСЛИ (!К_ОТКР_ЗАТВОР_В) ;
/*      СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9; /*???? Согласовано с Елисеевым по телефону 18.04.2006 */
/*   }
*/
   СТОП ПРОЦ ВАКУУМИРОВАНИЕ_ВК;
   СТОП;
 }
}


/*===================================================*/
/*  ПЕРЕКЛЮЧЕНИЕ        Агрегата Вакуумного1         */
/*                 и    Агрегата Вакуумного2         */
/*         643.АЭ1610.10121  Д2.36                   */
/*===================================================*/
ПРОЦ ПЕРЕКЛЮЧИТЬ_АВД{
 ИЗ ПРОЦ Инициализация
                        К_VE3,
                        К_VE4,
                        К_VE5,
                        К_VE6,
                        Флаг_АВД1,
                        Флаг_АВД2;
 СОСТ Начало {
    ЕСЛИ (Флаг_АВД1 && !Флаг_АВД2) В СОСТ НаАВД2;
    ИНАЧЕ
     ЕСЛИ (!Флаг_АВД1 && Флаг_АВД2) В СОСТ НаАВД1;
     ИНАЧЕ В СОСТ НеразрешимаяСитуация;
 }
 СОСТ НаАВД1{
    ЕСЛИ (К_VE4 && !К_VE6) В СОСТ АВД1_НА_НК;
    ИНАЧЕ
     ЕСЛИ (!К_VE4 && К_VE6) В СОСТ АВД1_НА_ВК;
     ИНАЧЕ В СОСТ НеразрешимаяСитуация;
 }
 СОСТ АВД1_НА_НК{
    СТАРТ ПРОЦ ВКЛ_АВД1_НК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключения_АВД1_НК {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1_НК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1_НК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_АВД2;
              СТОП;
         }
      }
 }
 СОСТ АВД1_НА_ВК{
    СТАРТ ПРОЦ ВКЛ_АВД1_ВК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключения_АВД1_ВК {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД1_ВК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1_ВК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_АВД2;
              СТОП;
         }
      }
 }
 СОСТ НаАВД2{
    ЕСЛИ (К_VE3 && !К_VE5) В СОСТ АВД2_НА_НК;
    ИНАЧЕ
     ЕСЛИ (!К_VE3 && К_VE5) В СОСТ АВД2_НА_ВК;
     ИНАЧЕ В СОСТ НеразрешимаяСитуация;
 }
 СОСТ АВД2_НА_НК{
    СТАРТ ПРОЦ ВКЛ_АВД2_НК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключения_АВД2_НК {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2_НК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2_НК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_АВД1;
              СТОП;
         }
      }
 }
 СОСТ АВД2_НА_ВК{
    СТАРТ ПРОЦ ВКЛ_АВД2_ВК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключения_АВД2_ВК {
      ЕСЛИ (!(ПРОЦ ВКЛ_АВД2_ВК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД2_ВК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_АВД1;
              СТОП;
         }
      }
 }
 СОСТ НеразрешимаяСитуация{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕРАЗРЕШИМАЯ_СИТУАЦИЯ_ПЕРЕКЛЮЧЕНИЯ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}
/*===================================================*/
/*  КОНТРОЛЬ ВРЕМЕНИ РАБОТЫ АГРЕГАТА ВАКУУМНОГО      */
/*  643.АЭ1610.10121  Д2.36                          */
/*===================================================*/
ПРОЦ КонтрольВремениРаботыАгрегатаВакуумного{
 ДЦЕЛ СчетчикМинут ЛОКАЛ;
 СОСТ Начало{
      СчетчикМинут = 0;
      В СОСТ Пауза1мин;
 }
 СОСТ Пауза1мин{
      ТАЙМАУТ ОДНА_МИНУТА В СОСТ КонтрольМинут;
 }
 СОСТ КонтрольМинут{
      СчетчикМинут = СчетчикМинут + 1;
      В СОСТ Пауза1мин;
      ЕСЛИ (СчетчикМинут >= ВРЕМЯ_РАБОТЫ_АГР_ВАКУУМНОГО)  В СОСТ  ПередачаСообщения;
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРЕВЫШЕНО_ВРЕМЯ_РАБОТЫ_АГРЕГАТА_ВАКУУМНОГО)) {
       СчетчикМинут = СчетчикМинут - 1;
       В СОСТ Пауза1мин;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}

/*==================================================*/
/*==================================================*/
/*====                                          ====*/
/*====                                          ====*/
/*====  ПРОЦЕССЫ КОНТРОЛЯ СОСТОЯНИЯ УСТРОЙСТВ   ====*/
/*====                                          ====*/
/*====                                          ====*/
/*==================================================*/

/*=========================================*/
/*=                                       =*/
/*=    КОНТРОЛЬ ОБНОВЛЕНИЯ СОСТОЯНИЯ      =*/
/*=    ИСПОЛНИТЕЛЬНЫХ УСТРОЙСТВ           =*/
/*=    643.АЭ1610.10000 Д2.0              =*/
/*=========================================*/
ПРОЦ КонтрольОбновленияСостоянияИсполнительныхУстройств{
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольРежимаРаботы;
    СТАРТ ПРОЦ КонтрольЭтапаРаботы;
    СТАРТ ПРОЦ КонтрольКоординатыЗатравки;
    СТАРТ ПРОЦ КонтрольКоординатыТигля;
    СТАРТ ПРОЦ СредняяСкоростьРоста;
    СТАРТ ПРОЦ КонтрольРаботыVE1;
    СТАРТ ПРОЦ КонтрольРаботыVE2;
    СТАРТ ПРОЦ КонтрольРаботыVE3;
    СТАРТ ПРОЦ КонтрольРаботыVE4;
    СТАРТ ПРОЦ КонтрольРаботыVE5;
    СТАРТ ПРОЦ КонтрольРаботыVE6;
    СТАРТ ПРОЦ КонтрольРаботыVE7;
    СТАРТ ПРОЦ КонтрольРаботыVE8;
    СТАРТ ПРОЦ КонтрольРаботыVE9;
    СТАРТ ПРОЦ КонтрольРаботыVE10;
    СТАРТ ПРОЦ КонтрольРаботыVE11;
    СТАРТ ПРОЦ КонтрольРаботыVE12;
    СТАРТ ПРОЦ КонтрольРаботыНВР1;
    СТАРТ ПРОЦ КонтрольРаботыНВР2;
    СТАРТ ПРОЦ КонтрольРаботыДВН1;
    СТАРТ ПРОЦ КонтрольРаботыДВН2;
    СТАРТ ПРОЦ КонтрольУправленияVM14;
    СТАРТ ПРОЦ КонтрольСостоянияVM14;
    СТАРТ ПРОЦ КонтрольСостоянияЗатвораВакуумного;
    СТАРТ ПРОЦ КонтрольПоложенияЗатравкиПриЗакрытииЗатвораВакуумного;
    СТАРТ ПРОЦ КонтрольПеремещенияЗатравкиВнизПриЗакрытомЗВ; /*добавить 06.05.22 */

    СТАРТ ПРОЦ КонтрольСостоянияДатчикаПривязки;
    СТАРТ ПРОЦ КонтрольСостоянияДатчикаКасания;
    СТАРТ ПРОЦ КонтрольСостоянияБлокировки_ВК_НК;

    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияВК;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияКрышкиНК;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияКоллектораВакуумного;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияНК;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияБазовойПлиты;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияШтокаТигля;
    СТАРТ ПРОЦ КонтрольТемпературыВодыОхлажденияТоковводов;
    СТАРТ ПРОЦ КонтрольТемпературыВодыНаВходе;
    СТАРТ ПРОЦ КонтрольСостоянияМН;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияВК_РП1;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияКрышкиНК_РП2;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияНК_РП3;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияБазовойПлиты_РП4;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияКоллектораВакуумного_РП5;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияШтокаПриводаТигля_РП6;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияТоковводов_РП7;
    СТАРТ ПРОЦ КонтрольРелеПротокаОхлажденияАВД_РП8;
    СТАРТ ПРОЦ КонтрольСостояния_К_V1;
    СТОП;
 }
}

/*===================================================*/
/*  ОПРЕДЕЛЕНИЕ СРЕДНЕЙ СКОРОСТИ РОСТА КРИСТАЛЛА     */
/*  643.АЭ1610.10121  Д2                             */
/*===================================================*/
ПРОЦ СредняяСкоростьРоста{
 ИЗ ПРОЦ Инициализация  ФлагГотовностиVроста,
                        ФП_Vз,
                        НП_ВремяОсредненияVзVроста,
                        НП_Пауза_Vроста,
                        ФП_Vроста;  /* это и есть средняя скорость  затравки*/

 ДЦЕЛ ЛП_ВремяГотовности ЛОКАЛ;
 СОСТ Начало{
     Vrosta_Init();
     ЛП_ВремяГотовности = 0;
     ФлагГотовностиVроста = ВЫКЛ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ НаборСтатистики{
     ЛП_ВремяГотовности ++;
     ФП_Vроста = AverageFloatVrosta(НП_ВремяОсредненияVзVроста, ФП_Vз);
     ЕСЛИ (ЛП_ВремяГотовности >= НП_ВремяОсредненияVзVроста) {
         ФлагГотовностиVроста = ВКЛ;
         В СЛЕДУЮЩЕЕ;
     }
 }
 СОСТ НормальнаяРабота{
     ФП_Vроста = AverageFloatVrosta(НП_ВремяОсредненияVзVроста, ФП_Vз);
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза{
     ТАЙМАУТ НП_Пауза_Vроста В СОСТ НормальнаяРабота;
 }
}

/*=========================================*/
/*=                                       =*/
/*=     ОБРАБОТКА КОМАНД УПРАВЛЕНИЯ       =*/
/*=     РЕГУЛЯТОРАМИ ОТ ПИВ               =*/
/*=     643.АЭ1610.10000  Д2              =*/
/*=========================================*/
ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ{
ИЗ ПРОЦ Инициализация
							ТекущийРежим,
                     КодСобытия_от_ПИВ;

ЦЕЛ ЛП_Флаг ЛОКАЛ;

 СОСТ Анализ{
    ЛП_Флаг = ВКЛ;
    РАЗБОР (КодСобытия_от_ПИВ) {
          /*регулятор расхода газа===== */
       СЛУЧАЙ ВКЛ_РЕГ_РГ:
          СТАРТ ПРОЦ РЕГ_РГ;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_РГ:
          СТАРТ ПРОЦ ВЫК_РЕГ_РГ;
          КОНЕЦ;
          /*регулятор давления========= */
       СЛУЧАЙ ВКЛ_РЕГ_Д:
          СТАРТ ПРОЦ РЕГ_Д;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_Д:
          СТАРТ ПРОЦ ВЫК_РЕГ_Д;
          КОНЕЦ;

       СЛУЧАЙ ВКЛ_РЕГ_W_ИПН_К1:
          СТОП ПРОЦ РЕГ_ТР;
          СТОП ПРОЦ РЕГ_ТН;
          СТОП ПРОЦ РЕГ_РОСТА;
          СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;
          КОНЕЦ;

       СЛУЧАЙ ВКЛ_РЕГ_ТН:
          СТОП ПРОЦ РЕГ_ТР;
          СТОП ПРОЦ РЕГ_РОСТА;
          СТАРТ ПРОЦ ВКЛ_РЕГ_ТН;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_РЕГ_ТР:
          СТОП ПРОЦ РЕГ_РОСТА;
          СТАРТ ПРОЦ ВКЛ_РЕГ_ТР;
          КОНЕЦ;
/* 
добавить - в том смысле, что после плавки №11
и отработки нового механизма запуска ТП - этот комментарий убрать...

СТАЛО: А теперь Курочкин сделал все как надо,
по запуску ТП все ненужные(конкурирующие) регуляторы
сами отключаются. Проверка режима работы исключена.

БЫЛО:
по результатам отработки выявлено, что для регулятора диаметра требуется
"базовое значение" скорости вытягивания из расплава, совпадающее по величине
с оптимальной скоростью роста. В качестве этого базовового значения и
используется заданная скорость роста. Однако, при задании этой скорости роста
в тех.программе, при отработке тех.программы автоматически (так сделано
у Курочкина-Безштейнова) запускается регулятор роста, что приводит
к нарушению температурного режима роста, т.к. температурный режим при этом
требуется поддерживать не регулятором роста, а регулятором температуры
нагревателя. Поэтому решено в режиме РА исключить возможность
запуска регулятора роста.  
*/
       СЛУЧАЙ ВКЛ_РЕГ_РОСТА:   /* добавлено */
          СТОП ПРОЦ РЕГ_ТР;
          СТАРТ ПРОЦ ВКЛ_РЕГ_РОСТА;
          КОНЕЦ;

       СЛУЧАЙ ВЫК_РЕГ_ТН:      /* добавлено */
          СТОП ПРОЦ РЕГ_ТН;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_ТР:      /* добавлено */
          СТОП ПРОЦ РЕГ_ТР;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_РОСТА:   /* добавлено */
          СТОП ПРОЦ РЕГ_РОСТА;
          КОНЕЦ;

       СЛУЧАЙ ВЫК_ИПН_К1:
          СТАРТ ПРОЦ ВЫК_ИПН_К1;
          КОНЕЦ;

       СЛУЧАЙ ВКЛ_РЕГ_W_ИПН_К2:
/*          СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К2; Зюбин Добавить из-за РЕГ_РОСТА и Базы Для РЕГ_Роста */
          КОНЕЦ;
       СЛУЧАЙ ВЫК_ИПН_К2:
          СТАРТ ПРОЦ ВЫК_ИПН_К2;
          КОНЕЦ;

       СЛУЧАЙ ВЫК_ИПН:
          СТАРТ ПРОЦ ВЫК_ИПН;
          КОНЕЦ;


          /*регулятор уровня расплава========= */
       СЛУЧАЙ ВКЛ_РЕГ_УР:
          СТАРТ ПРОЦ РЕГ_УР;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_УР:
          СТАРТ ПРОЦ ВЫК_РЕГ_УР;
          КОНЕЦ;
          /*регулятор диаметра кристалла ========= */
       СЛУЧАЙ ВКЛ_РЕГ_ДК:
          СТАРТ ПРОЦ РЕГ_ДК;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_РЕГ_ДК:
          СТАРТ ПРОЦ ВЫК_РЕГ_ДК;
          КОНЕЦ;


       СЛУЧАЙ ЗАТ_РС: /* регулятор VзРабочаяСкорость  */
          СТАРТ ПРОЦ ЗАТ_РС;
          КОНЕЦ;
       СЛУЧАЙ ЗАТ_РК:
          СТАРТ ПРОЦ ЗАТ_РК;
          КОНЕЦ;
       СЛУЧАЙ ЗАТ_УС:
          СТАРТ ПРОЦ ЗАТ_УС;
          КОНЕЦ;
       СЛУЧАЙ ЗАТ_УК:
          СТАРТ ПРОЦ ЗАТ_УК;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_РЕГ_ЗАТ_УК:
          СТАРТ ПРОЦ ВКЛ_РЕГ_ЗАТ_УК;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_ЗАТРАВКУ:
          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
          КОНЕЦ;
       СЛУЧАЙ ТИГ_РС: /* регулятор VзРабочаяСкорость  */
          СТАРТ ПРОЦ ТИГ_РС;
          КОНЕЦ;
       СЛУЧАЙ ТИГ_РК:
          СТАРТ ПРОЦ ТИГ_РК;
          КОНЕЦ;
       СЛУЧАЙ ТИГ_УС:
          СТАРТ ПРОЦ ТИГ_УС;
          КОНЕЦ;
       СЛУЧАЙ ТИГ_УК:
          СТАРТ ПРОЦ ТИГ_УК;
          КОНЕЦ;
       СЛУЧАЙ ВКЛ_РЕГ_ТИГ_УК:
          СТАРТ ПРОЦ ВКЛ_РЕГ_ТИГ_УК;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_ТИГЕЛЬ:
          СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
          КОНЕЦ;
       СЛУЧАЙ ЗАТ_ВР:
          СТАРТ ПРОЦ ЗАТ_ВР;
          КОНЕЦ;
       СЛУЧАЙ ЗАТ_УГОЛ:
          СТАРТ ПРОЦ ЗАТ_УГОЛ;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_ЗАТ_ВР:  /* вращение затравки */
          СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
          КОНЕЦ;

       СЛУЧАЙ ТИГ_ВР:
          СТАРТ ПРОЦ ТИГ_ВР;
          КОНЕЦ;
       СЛУЧАЙ ТИГ_УГОЛ:
          СТАРТ ПРОЦ ТИГ_УГОЛ;
          КОНЕЦ;
       СЛУЧАЙ ВЫК_ТИГ_ВР:  /* вращение тигля */
          СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
          КОНЕЦ;
       УМОЛЧАНИЕ:
          ЛП_Флаг = ВЫКЛ;
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
    ЕСЛИ (ЛП_Флаг == ВКЛ) СТОП;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаКомандУправленияРегуляторами_от_ПИВ   */


/*=========================================*/
/*=                                       =*/
/*=     ОБРАБОТКА КОМАНД КООРДИНАТНОЙ     =*/
/*=     СИСТЕМЫ ПЕРЕМЕЩЕНИЯ ОТ ПИВ        =*/
/*=     643.АЭ1610.10000 Д2               =*/
/*=========================================*/
ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ{
ИЗ ПРОЦ Инициализация
                      Реальная_Xз_Измеренная_Оператором,
                      НП_Lз_ОТ_КВП_ДО_КНП,
                      КодСобытия_от_ПИВ;

ЦЕЛ ЛП_Флаг ЛОКАЛ;
ПЛАВ УстановочнаяКоординатаЗатравки ДЛЯ ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ЗАТРАВКИ;
ПЛАВ УстановочнаяКоординатаТигля ДЛЯ ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ТИГЛЯ;

 СОСТ Анализ{
    ЛП_Флаг = ВКЛ;
    РАЗБОР (КодСобытия_от_ПИВ) {
         СЛУЧАЙ ЗАТ_КНП:
              СТАРТ ПРОЦ ЗАТ_КНП;
              КОНЕЦ;
         СЛУЧАЙ ЗАТ_ДП:
              СТАРТ ПРОЦ ЗАТ_ДП;
              КОНЕЦ;
         СЛУЧАЙ ЗАТ_КВП:
              СТАРТ ПРОЦ ЗАТ_КВП;
              КОНЕЦ;
         СЛУЧАЙ УСТАНОВИТЬ_КООРДИНАТУ_ЗАТРАВКИ:
              УстановочнаяКоординатаЗатравки = GetFloatParamPIV();
              СТАРТ ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ЗАТРАВКИ;
              КОНЕЦ;
         СЛУЧАЙ ДВИЖЕНИЕ_ЗАТРАВКИ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ:
              СТАРТ ПРОЦ ДВИЖЕНИЕ_ЗАТРАВКИ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ;
              КОНЕЦ;
         СЛУЧАЙ РАССЧИТАТЬ_РЕАЛЬНЫЕ_КОЭФФИЦИЕНТЫ_ЗАТРАВКИ:
              Реальная_Xз_Измеренная_Оператором = НП_Lз_ОТ_КВП_ДО_КНП;
              СТАРТ ПРОЦ РАССЧИТАТЬ_РЕАЛЬНЫЕ_КОЭФФИЦИЕНТЫ_ЗАТРАВКИ;
              КОНЕЦ;
         СЛУЧАЙ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ДП:
              СТАРТ ПРОЦ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ДП;
              КОНЕЦ;
         СЛУЧАЙ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_СТЫКА_НК:
              СТАРТ ПРОЦ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_СТЫКА_НК;
              КОНЕЦ;
         СЛУЧАЙ ТИГ_КНП:
              СТАРТ ПРОЦ ТИГ_КНП;
              КОНЕЦ;
         СЛУЧАЙ ТИГ_ПВК:
              СТАРТ ПРОЦ ТИГ_ПВК;
              КОНЕЦ;
         СЛУЧАЙ ТИГ_КВП:
              СТАРТ ПРОЦ ТИГ_КВП;
              КОНЕЦ;
         СЛУЧАЙ УСТАНОВИТЬ_КООРДИНАТУ_ТИГЛЯ:
              УстановочнаяКоординатаТигля = GetFloatParamPIV();
              СТАРТ ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ТИГЛЯ;
              КОНЕЦ;
         СЛУЧАЙ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_КНП_ТИГЛЯ_ДО_КВП:
              СТАРТ ПРОЦ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_КНП_ТИГЛЯ_ДО_КВП;
              КОНЕЦ;
         СЛУЧАЙ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР:
              СТАРТ ПРОЦ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              ЛП_Флаг = ВЫКЛ;
              В СОСТ НекорректноеСобытие;
              КОНЕЦ;
    } /* конец разбора */
    ЕСЛИ (ЛП_Флаг == ВКЛ) СТОП;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}

/*=========================================*/
/*=                                       =*/
/*=     ОБРАБОТКА СИСТЕМНОЙ КОМАНДЫ       =*/
/*=     ОТ ПИВ                            =*/
/*=     643.АЭ1610.10000  Д2              =*/
/*=========================================*/
ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ{
ИЗ ПРОЦ Инициализация
                      КодСобытия_от_ПИВ,
                      ФлагПовторнойЗагрузки;

ЦЕЛ ЛП_Флаг ЛОКАЛ;
ЦЕЛ ЛП_ФлагМониторинга ЛОКАЛ;


 СОСТ Анализ{
    ЛП_Флаг = ВКЛ;
    ЛП_ФлагМониторинга = ВЫКЛ;
    РАЗБОР (КодСобытия_от_ПИВ) {
         СЛУЧАЙ ЗАПРОС_ИНИЦИАЛИЗАЦИИ_ПИВ:       /* запуск процессов синхронизации ЗД, ФП, РЕГ, КЛАПАНОВ */
              ЕСЛИ (ФлагПовторнойЗагрузки == ВКЛ) ФлагПовторнойЗагрузки = ВЫКЛ;
              ИНАЧЕ { /* добавлено */
                   СТАРТ ПРОЦ ЗапускПроцессовКонтроляСтыковок;
                   СТАРТ ПРОЦ КонтрольОбновленияСостоянияИсполнительныхУстройств;
                   СТАРТ ПРОЦ ЗапускПроцессовКонтроляИзмененияЗаданий;
                   СТАРТ ПРОЦ ЗапускПроцессовКонтроляИзмененияФактПараметров;  /* разбивка на более мелкие процессы и запуск группы этих процессов */
                   СТАРТ ПРОЦ КонтрольСостоянияРегуляторов;     /* запуск кучи процессов */
                   СТАРТ ПРОЦ МониторингСтатусаКаналов;         /* запуск кучи процессов */
                   СТАРТ ПРОЦ ВосстановлениеСвязиС_ПИВ;
                   ЕСЛИ(ПРОЦ РежимРР В СОСТ ПАССИВНОЕ) СТАРТ ПРОЦ Переход_вРР; /*добавлено*/
              }
              InitChannelStatus_PIV(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ВПО:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ВПО;
              InitChannelStatus_VPO(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДТР:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ДТР;
              InitChannelStatus_DTR(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДТН:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ДТН;
              InitChannelStatus_DTN(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ДУ:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ДУ;
              InitChannelStatus_DU (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТДД:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ТДД;
              InitChannelStatus_TDD(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ИП2К_К1:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ИП2К_К1;
              InitChannelStatus_IP2K_K1(); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗУ:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗУ;
              InitChannelStatus_ZU (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗР:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗР;
              InitChannelStatus_ZR (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТУ:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ТУ;
              InitChannelStatus_TU (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТР:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ТР;
              InitChannelStatus_TR (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ЗВ:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗВ;
              InitChannelStatus_ZV (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;
         СЛУЧАЙ ИНИЦИАЛИЗАЦИЯ_СВЯЗИ_С_ТВ:
              СТАРТ ПРОЦ ВосстановлениеСвязиС_ТВ;
              InitChannelStatus_TV (); /* инициализация статуса, обнуление числа ошибок */
              КОНЕЦ;

         СЛУЧАЙ РЕСТАРТ_ПК  :
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ВПО :
              SendMsgVPOCode(ПК_ВПО_ИНИЦИАЛИЗАЦИЯ);
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ДТР :
              SendMsgDTRCode(ПК_ДТР_ИНИЦИАЛИЗАЦИЯ);
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ДТН :
              SendMsgDTNCode(ПК_ДТН_ИНИЦИАЛИЗАЦИЯ);
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ДУ  :
              SendMsgDUCode (ПК_ДУ_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ТДД :
              SendMsgTDDCode(ПК_ТДД_ИНИЦИАЛИЗАЦИЯ);
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ИП2К_К1  :
              SendMsgIP2K_K1Code (ПК_ИП2К_К1_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ЗУ  :
              SendMsgZUCode (ПК_ЗУ_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ЗР  :
              SendMsgZRCode (ПК_ЗР_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ТУ  :
              SendMsgTUCode (ПК_ТУ_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ТР  :
              SendMsgTRCode (ПК_ТР_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ЗВ  :
              SendMsgZVCode (ПК_ЗВ_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;
         СЛУЧАЙ РЕСТАРТ_ТВ  :
              SendMsgTVCode (ПК_ТВ_ИНИЦИАЛИЗАЦИЯ );
              КОНЕЦ;

/*!!!!!!! ТЕСТОВЫЕ КОМАНДЫ - ПОДЛЕЖАТ УНИЧТОЖЕНИЮ ПО ОТЛАДКЕ */
         СЛУЧАЙ ТЕСТОВАЯ_КОМАНДА1:
              СТАРТ ПРОЦ ТЕСТ1;
              КОНЕЦ;
         СЛУЧАЙ ТЕСТОВАЯ_КОМАНДА2:
              СТАРТ ПРОЦ ТЕСТ2;
              КОНЕЦ;


         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ВПО:
              СТОП ПРОЦ ВосстановлениеСвязиС_ВПО;
              DisableChannel_VPO(); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДТР:
              СТОП ПРОЦ ВосстановлениеСвязиС_ДТР;
              DisableChannel_DTR(); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДТН:
              СТОП ПРОЦ ВосстановлениеСвязиС_ДТН;
              DisableChannel_DTN(); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ДУ:
              СТОП ПРОЦ ВосстановлениеСвязиС_ДУ;
              DisableChannel_DU (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТДД:
              СТОП ПРОЦ ВосстановлениеСвязиС_ТДД;
              DisableChannel_TDD(); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ИП2К_К1:
              СТОП ПРОЦ ВосстановлениеСвязиС_ИП2К_К1;
              DisableChannel_IP2K_K1(); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗУ:
              СТОП ПРОЦ ВосстановлениеСвязиС_ЗУ;
              DisableChannel_ZU (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗР:
              СТОП ПРОЦ ВосстановлениеСвязиС_ЗР;
              DisableChannel_ZR (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТУ:
              СТОП ПРОЦ ВосстановлениеСвязиС_ТУ;
              DisableChannel_TU (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТР:
              СТОП ПРОЦ ВосстановлениеСвязиС_ТР;
              DisableChannel_TR (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ЗВ:
              СТОП ПРОЦ ВосстановлениеСвязиС_ЗВ;
              DisableChannel_ZV (); /* отключение канала из системы */
              КОНЕЦ;
         СЛУЧАЙ ОТКЛЮЧЕНИЕ_СВЯЗИ_С_ТВ:
              СТОП ПРОЦ ВосстановлениеСвязиС_ТВ;
              DisableChannel_TV (); /* отключение канала из системы */
              КОНЕЦ;

         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПИВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаПИВ;
              КОНЕЦ;

         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ВПО:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаВПО;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаДТР;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТН:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаДТН;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДУ:
              СТАРТ ПРОЦ МониторингКаналаДУ ;
              ЛП_ФлагМониторинга = ВКЛ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТДД:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаТДД;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К1:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаИП2К_К1;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗУ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаЗУ ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаЗР ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТУ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаТУ ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаТР ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаЗВ ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингКаналаТВ ;
              КОНЕЦ;

         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ПИВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаПИВ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ВПО:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаВПО;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаДТР;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДТН:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаДТН;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ДУ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаДУ ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТДД:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаТДД;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ИП2К_К1:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаИП2К_К1;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗУ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаЗУ ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаЗР ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТУ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаТУ ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТР:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаТР ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ЗВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаЗВ ;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_С_ТВ:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП  ПРОЦ МониторингКаналаТВ ;
              КОНЕЦ;
         СЛУЧАЙ ВКЛЮЧЕНИЕ_МОНИТОРИНГА_СИСТЕМНЫХ_ОШИБОК:
              ЛП_ФлагМониторинга = ВКЛ;
              СТАРТ ПРОЦ МониторингСистемныхОшибок;
              КОНЕЦ;
         СЛУЧАЙ ВЫКЛЮЧЕНИЕ_МОНИТОРИНГА_СИСТЕМНЫХ_ОШИБОК:
              ЛП_ФлагМониторинга = ВКЛ;
              СТОП ПРОЦ МониторингСистемныхОшибок;
              КОНЕЦ;
         СЛУЧАЙ СБРОС_СИСТЕМНОЙ_ОШИБКИ:
              ClearSystemError();
              КОНЕЦ;
         УМОЛЧАНИЕ:
              ЛП_Флаг = ВЫКЛ;
              В СОСТ НекорректноеСобытие;
              КОНЕЦ;
    } /* конец разбора */

    ЕСЛИ (ЛП_ФлагМониторинга == ВКЛ) В СОСТ ПодтверждениеМониторинга;
    ИНАЧЕ {
       ЕСЛИ (ЛП_Флаг == ВКЛ) СТОП;
    }

 }

 СОСТ ПодтверждениеМониторинга{
    ЕСЛИ (SendMsgPIVCode(КодСобытия_от_ПИВ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
} /* конец ПРОЦ ОбработкаСистемнойКоманды_от_ПИВ */

/*=========================================*/
/*=                                       =*/
/*=     ОБРАБОТКА КОМАНД ДЛЯ ДАТЧИКОВ     =*/
/*=     ОТ ПИВ                            =*/
/*=     643.АЭ1610.10000 Д2.0             =*/
/*=========================================*/
ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ{
ИЗ ПРОЦ Инициализация  КодСобытия_от_ПИВ,
                       ФП_ТочкиДля_ДУ;

ПЛАВ ЛП_НомерТочки ЛОКАЛ;
 СОСТ Анализ{
    РАЗБОР (КодСобытия_от_ПИВ) {
/*---------------------------------------------*/
/*-   КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА УРОВНЯ        =*/
/*---------------------------------------------*/

       СЛУЧАЙ ПК_ПИВ_ДУ_СНЯТЬ_КОЭФФИЦИЕНТЫ:
          СТАРТ ПРОЦ СнятиеКоэффициентовКалибровкиИзДУ;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ДУ_СНЯТЬ_ВРЕМЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА_0:
          СТАРТ ПРОЦ СнятиеВремениЭкспозицииЛазера0;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_СНЯТЬ_ВРЕМЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА_1:
          СТАРТ ПРОЦ СнятиеВремениЭкспозицииЛазера1;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0:
          СТАРТ ПРОЦ НачалоАдаптацииЛазера_0_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1:
          СТАРТ ПРОЦ НачалоАдаптацииЛазера_1_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ПРЕРВАТЬ_АДАРПТАЦИЮ:
          СТАРТ ПРОЦ ПрерватьАдаптацию_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВКЛ_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА:
          СТАРТ ПРОЦ ВклВычислениеТемновогоСигнала_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВЫК_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА:
          СТАРТ ПРОЦ ВыкВычислениеТемновогоСигнала_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_НАЧАЛО_КАЛИБРОВКИ:
          СТАРТ ПРОЦ НачалоКалибровки_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ПРЕРВАТЬ_КАЛИБРОВКУ:
          СТАРТ ПРОЦ ПрерватьКалибровку_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_КАЛИБРОВКА_ПО_ТОЧКЕ:
          ФП_ТочкиДля_ДУ = GetFloatParamPIV();
          СТАРТ ПРОЦ КалибровкаПоТочкеСНомеромДля_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ:
          СТАРТ ПРОЦ НачалоРежимаОтладкиДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ:
          СТАРТ ПРОЦ КонецРежимаОтладкиДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0:
          СТАРТ ПРОЦ ВключитьЛазер0_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1:
          СТАРТ ПРОЦ ВключитьЛазер1_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0:
          СТАРТ ПРОЦ ВыключитьЛазер0_ДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1:
          СТАРТ ПРОЦ ВыключитьЛазер1_ДУ;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ДУ_ЗАПУСК_ТЕСТА:
          СТАРТ ПРОЦ ЗапускТестаДУ;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДУ_КОНЕЦ_РАБОТЫ:
          СТАРТ ПРОЦ КонецРаботыДУ;
          КОНЕЦ;
/*--------------------------------------------*/
/*- КОДЫ СООБЩЕНИЙ ОТ ДАТЧИКА ДИАМЕТРА       -*/
/*--------------------------------------------*/
       СЛУЧАЙ ПК_ПИВ_ТДД_СНЯТЬ_КОЭФФИЦИЕНТЫ:
          СТАРТ ПРОЦ СнятиеКоэффициентовКалибровкиИзТДД;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_ТЕСТ_ОЗУ:
          СТАРТ ПРОЦ ЗапускТестаОЗУ_ТДД;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП:
          СТАРТ ПРОЦ РЕЖИМ_ИЗМЕРЕНИЯ_ТДД_МП;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП:
          СТАРТ ПРОЦ РЕЖИМ_ИЗМЕРЕНИЯ_ТДД_БП;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП:
          СТАРТ ПРОЦ ПереключитьВидеовыходНаКамеруБольшогоПоля;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП:
          СТАРТ ПРОЦ РЕЖИМ_АТТЕСТАЦИИ_БП_ТДД;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_ТЕСТ_БП:
          СТАРТ ПРОЦ ЗапускТеста_БП_ТДД;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП:
          СТАРТ ПРОЦ НачатьКалибровкуБольшогоПоля;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС:
          СТАРТ ПРОЦ НачатьКалибровкуБольшогоПоля_ПЛЮС;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП:
          СТАРТ ПРОЦ ПереключитьВидеовыходНаКамеруМалогоПоля;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП:
          СТАРТ ПРОЦ РЕЖИМ_АТТЕСТАЦИИ_МП_ТДД;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_ТЕСТ_МП:
          СТАРТ ПРОЦ ЗапускТеста_МП_ТДД;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП:
          СТАРТ ПРОЦ  НачатьКалибровкуМалогоПоля;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС:
          СТАРТ ПРОЦ НачатьКалибровкуМалогоПоля_ПЛЮС;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ТДД_КОНЕЦ_РАБОТЫ:
          СТАРТ ПРОЦ КонецРаботыТДД;
          КОНЕЦ;

/*-----------------------------------------------------*/
/*- КОДЫ СООБЩЕНИЙ ОТ ДТН и ДТР                       -*/
/*-----------------------------------------------------*/
       СЛУЧАЙ ПК_ПИВ_ДТН_ЗАПУСК_ТЕСТА:
          СТАРТ ПРОЦ ЗапускТестаДТН;
          КОНЕЦ;
       СЛУЧАЙ ПК_ПИВ_ДТР_ЗАПУСК_ТЕСТА:
          СТАРТ ПРОЦ ЗапускТестаДТР;
          КОНЕЦ;

       СЛУЧАЙ ПК_ПИВ_ВКЛ_ЛАЗЕР_ДП:
          СТАРТ ПРОЦ ВКЛ_ЛАЗЕР_ДП;
          КОНЕЦ;
/*-----------------------------------------------------*/
/*- КОДЫ СООБЩЕНИЙ ОТ ИП                              -*/
/*-----------------------------------------------------*/

       УМОЛЧАНИЕ:
          В СОСТ НекорректноеСобытие;
          КОНЕЦ;
    } /* конец разбора */
    СТОП;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НекорректноеСобытие {
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ОШИБКА_КОДА_КОМАНДЫ_ОТ_ПИВ, КодСобытия_от_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
    ОШИБКА;
 }

} /* конец ПРОЦ ОбработкаКомандДляДатчиков_от_ПИВ */


/*==============================================*/
/*= Временное Включение Лазера ДП (для теста)  =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ ВКЛ_ЛАЗЕР_ДП{
 ИЗ ПРОЦ Инициализация У_ЛАЗЕРА_ДП;
 СОСТ Начало{
    У_ЛАЗЕРА_ДП = ВКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Таймаут{
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ Конец;
 }
 СОСТ Конец{
    У_ЛАЗЕРА_ДП = ВЫКЛ;
    СТОП;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Каналов               =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатусаКаналов{
 СОСТ Начало{
    СТАРТ ПРОЦ МониторингСтатуса_ВПО ;
    СТАРТ ПРОЦ МониторингСтатуса_ДТН ;
    СТАРТ ПРОЦ МониторингСтатуса_ДТР ;
    СТАРТ ПРОЦ МониторингСтатуса_ДУ  ;
    СТАРТ ПРОЦ МониторингСтатуса_ТДД ;
    СТАРТ ПРОЦ МониторингСтатуса_ИП2К_К1  ;
    СТАРТ ПРОЦ МониторингСтатуса_ЗУ  ;
    СТАРТ ПРОЦ МониторингСтатуса_ЗР  ;
    СТАРТ ПРОЦ МониторингСтатуса_ТУ  ;
    СТАРТ ПРОЦ МониторингСтатуса_ТР  ;
    СТАРТ ПРОЦ МониторингСтатуса_ЗВ  ;
    СТАРТ ПРОЦ МониторингСтатуса_ТВ  ;
    СТОП;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ВПО {
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_VPO(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_VPO()) {
      ЛП_Статус = GetChannelStatus_VPO();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_VPO()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_VPO();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ВПО)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ВПО)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}


/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ДТН {
ИЗ ПРОЦ Инициализация
                        ФлагДТН;

 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_DTN(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_DTN()) {
      ЛП_Статус = GetChannelStatus_DTN();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_DTN()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_DTN();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ДТН)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагДТН = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ДТН)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}


/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ДТР {
ИЗ ПРОЦ Инициализация
                        ФлагДТР;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_DTR(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_DTR()) {
      ЛП_Статус = GetChannelStatus_DTR();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_DTR()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_DTR();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ДТР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагДТР = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ДТР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ДУ {
ИЗ ПРОЦ Инициализация
                        ФлагHур_ДУ;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_DU(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_DU()) {
      ЛП_Статус = GetChannelStatus_DU();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_DU()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_DU();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ДУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагHур_ДУ = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ДУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}
/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ТДД {
ИЗ ПРОЦ Инициализация
                        ФлагDкр_ТДД;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_TDD(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_TDD()) {
      ЛП_Статус = GetChannelStatus_TDD();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_TDD()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_TDD();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ТДД)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагDкр_ТДД = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ТДД)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ИП2К_К1 {
 ИЗ ПРОЦ Инициализация
                      Флаг_ИП2К_К1;

 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_IP2K_K1(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_IP2K_K1()) {
      ЛП_Статус = GetChannelStatus_IP2K_K1();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_IP2K_K1()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_IP2K_K1();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ИП2К_К1)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    Флаг_ИП2К_К1 = ВЫКЛ;        /*  добавлено*/
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ИП2К_К1)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ЗУ {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ЗУ;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_ZU(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_ZU()) {
      ЛП_Статус = GetChannelStatus_ZU();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_ZU()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_ZU();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ЗУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ЗУ = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ЗУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ЗР {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ЗР;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_ZR(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_ZR()) {
      ЛП_Статус = GetChannelStatus_ZR();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_ZR()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_ZR();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ЗР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ЗР = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ЗР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}
/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ТУ {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ТУ;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_TU(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_TU()) {
      ЛП_Статус = GetChannelStatus_TU();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_TU()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_TU();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ТУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ТУ = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ТУ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ТР {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ТР;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_TR(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_TR()) {
      ЛП_Статус = GetChannelStatus_TR();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_TR()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_TR();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ТР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ТР = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ТР)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ЗВ {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ЗВ;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_ZV(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_ZV()) {
      ЛП_Статус = GetChannelStatus_ZV();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_ZV()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_ZV();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ЗВ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ЗВ = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ЗВ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=   Мониторинг Статуса Канала                =*/
/*=   643.АЭ1610.10000 Д2.0                    =*/
/*==============================================*/
ПРОЦ МониторингСтатуса_ТВ {
ИЗ ПРОЦ Инициализация
                        ФлагРегулятора_V_ТВ;
 ЦЕЛ ЛП_Статус ЛОКАЛ;
 СОСТ Начало {
    ЛП_Статус = !GetChannelStatus_TV(); /* инициация передачи статуса */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Анализ{
    ЕСЛИ (ЛП_Статус != GetChannelStatus_TV()) {
      ЛП_Статус = GetChannelStatus_TV();
      ЕСЛИ (ЛП_Статус) В СЛЕДУЮЩЕЕ; /* включение нужно контролировать особо!*/
      ИНАЧЕ В СОСТ ПередачаВыключения;
    }
 }
 СОСТ КонтрольВключения{                    /* если за 5 сек не выклюается => */
    ЕСЛИ (!GetChannelStatus_TV()) {        /* действительно включился */
        ЛП_Статус = GetChannelStatus_TV();
        В СОСТ Анализ;
    }
    ТАЙМАУТ ПЯТЬ_СЕКУНД В СОСТ ПередачаВключения;
 }
 СОСТ ПередачаВключения {
    ЕСЛИ (SendMsgPIVCode(НАЛИЧИЕ_СВЯЗИ_С_ТВ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ПередачаВыключения {
    ФлагРегулятора_V_ТВ = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(РАЗРЫВ_СВЯЗИ_С_ТВ)) В СОСТ Анализ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
}

/*==============================================*/
/*=           Мониторинг Канала ПИВ            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаПИВ{
ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_PIV  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_PIV  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_PIV ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_PIV ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_PIV  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_PIV  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }
 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ПИВ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_PIV  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_PIV  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ПИВ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_PIV ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_PIV ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ПИВ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_PIV ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_PIV ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ПИВ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }
}

/*==============================================*/
/*=           Мониторинг Системных Ошибок      =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингСистемныхОшибок{
ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;
ЦЕЛ ЛП_КодОшибки ЛОКАЛ;

 СОСТ Начало{
    ЛП_КодОшибки = !GetSystemErrorCode();
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_КодОшибки != GetSystemErrorCode()) {
        ЛП_КодОшибки = GetSystemErrorCode();
        ЕСЛИ (ЛП_КодОшибки)
              В СОСТ СообщОбИзмененииОшибок;
        ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбОтсутствииСистемныхОшибок{
     ЕСЛИ (SendMsgPIVCode(СИСТЕМНАЯ_ОШИБКА_ОТСУТСТВУЕТ))
          В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ СообщОбИзмененииОшибок{
     ЕСЛИ (SendMsgLongParamPIV(КОД_СИСТЕМНОЙ_ОШИБКИ, ЛП_КодОшибки))
          В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПауза{
    ClearSystemError();  /* 06/17/03 00:28am Если ошибки возникают, они будут выдаваться несколько раз */
    ТАЙМАУТ ДЕСЯТЬ_СЕКУНД В СОСТ КонтрольИзменения;
 }
}
/*==============================================*/
/*=           Мониторинг Канала ВПО            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаВПО{
ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_VPO  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_VPO  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_VPO ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_VPO ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_VPO  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_VPO  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }
 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ВПО_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }
/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_VPO  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_VPO  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ВПО_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_VPO ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_VPO ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ВПО, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_VPO ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_VPO ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ВПО, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ДТР            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаДТР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_DTR  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_DTR  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_DTR ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_DTR ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_DTR  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_DTR  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДТР_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }
/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_DTR  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_DTR  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДТР_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_DTR ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_DTR ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДТР, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_DTR ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_DTR ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }
 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДТР, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ДТН            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаДТН{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_DTN  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_DTN  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_DTN ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_DTN ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_DTN  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_DTN  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДТН_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }
/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_DTN  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_DTN  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДТН_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_DTN ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_DTN ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДТН, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_DTN ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_DTN ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДТН, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}

/*==============================================*/
/*=           Мониторинг Канала ДУ             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаДУ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_DU  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_DU  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_DU ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_DU ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_DU  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_DU  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }
 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДУ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }
/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_DU  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_DU  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ДУ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_DU ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_DU ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ДУ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }
/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_DU ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_DU ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ДУ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }
}

/*==============================================*/
/*=           Мониторинг Канала ТДД            =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаТДД{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_TDD  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_TDD  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_TDD ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_TDD ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_TDD  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_TDD  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }
 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТДД_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }
/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_TDD  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_TDD  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТДД_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_TDD ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_TDD ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТДД, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_TDD ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_TDD ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТДД, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}

/*==============================================*/
/*=           Мониторинг Канала ИП             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаИП2К_К1{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_IP2K_K1  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_IP2K_K1  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_IP2K_K1 ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_IP2K_K1 ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_IP2K_K1  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_IP2K_K1  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }
 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ИП2К_К1_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_IP2K_K1  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_IP2K_K1  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }
 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ИП2К_К1_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_IP2K_K1 ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_IP2K_K1 ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ИП2К_К1, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_IP2K_K1 ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_IP2K_K1 ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }
 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ИП2К_К1, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ЗУ             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаЗУ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_ZU  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_ZU  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_ZU ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_ZU ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_ZU  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_ZU  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗУ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_ZU  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_ZU  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }
 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗУ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_ZU ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_ZU ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }
 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗУ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_ZU ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_ZU ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗУ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ЗР             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаЗР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_ZR  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_ZR  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_ZR ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_ZR ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_ZR  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_ZR  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗР_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_ZR  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_ZR  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗР_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_ZR ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_ZR ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗР, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_ZR ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_ZR ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗР, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ТУ             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаТУ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_TU  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_TU  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_TU ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_TU ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_TU  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_TU  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТУ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_TU  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_TU  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТУ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_TU ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_TU ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТУ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_TU ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_TU ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТУ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ТР             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаТР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_TR  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_TR  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_TR ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_TR ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_TR  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_TR  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТР_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_TR  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_TR  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТР_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_TR ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_TR ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТР, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_TR ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_TR ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТР, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ЗВ             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаЗВ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_ZV  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_ZV  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_ZV ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_ZV ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_ZV  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_ZV  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗВ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_ZV  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_ZV  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ЗВ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_ZV ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_ZV ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ЗВ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВыходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_ZV ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_ZV ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ЗВ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}
/*==============================================*/
/*=           Мониторинг Канала ТВ             =*/
/*=           643.АЭ1610.10000 Д2.0            =*/
/*==============================================*/
ПРОЦ МониторингКаналаТВ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;

ЦЕЛ ЛП_КолвоОшибокКС ЛОКАЛ;
ЦЕЛ ЛП_КолвоОшибокТА ЛОКАЛ;
ЦЕЛ ЛП_КолвоВходныхСообщений ЛОКАЛ;
ЦЕЛ ЛП_КолвоВыходныхСообщений ЛОКАЛ;

 СОСТ Начало{
    ЛП_КолвоОшибокКС              = !GetErrorNumberCS_TV  ();
    ЛП_КолвоОшибокТА              = !GetErrorNumberTO_TV  ();
    ЛП_КолвоВходныхСообщений      = !GetInpMsgNumber_TV ();
    ЛП_КолвоВыходныхСообщений     = !GetOutMsgNumber_TV ();
    В СОСТ АнализОшибокКС;
 }
/*---------------*/
 СОСТ АнализОшибокКС{
    ЕСЛИ (ЛП_КолвоОшибокКС != GetErrorNumberCS_TV  ()) {
         ЛП_КолвоОшибокКС   = GetErrorNumberCS_TV  ();
         В СОСТ СообщОбИзмененииОшибокКС;
    } ИНАЧЕ В СОСТ АнализОшибокТА;
 }

 СОСТ СообщОбИзмененииОшибокКС{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТВ_ПО_КС, ЛП_КолвоОшибокКС))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаКС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокТА;
 }

/*---------------*/
 СОСТ АнализОшибокТА{
    ЕСЛИ (ЛП_КолвоОшибокТА != GetErrorNumberTO_TV  ()) {
         ЛП_КолвоОшибокТА   = GetErrorNumberTO_TV  ();
         В СОСТ СообщОбИзмененииОшибокТА;
    } ИНАЧЕ В СОСТ АнализКолваВходныхСообщений;
 }

 СОСТ СообщОбИзмененииОшибокТА{
     ЕСЛИ (SendMsgLongParamPIV(КОЛИЧЕСТВО_СБОЕВ_ТВ_ПО_ТА, ЛП_КолвоОшибокТА))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаТА{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализКолваВходныхСообщений;
 }

/*---------------*/
 СОСТ АнализКолваВходныхСообщений{
    ЕСЛИ (ЛП_КолвоВходныхСообщений != GetInpMsgNumber_TV ()) {
         ЛП_КолвоВходныхСообщений   = GetInpMsgNumber_TV ();
         В СОСТ СообщОбИзмененииКолваВходныхСообщений;
    } ИНАЧЕ В СОСТ АнализКолваВыходныхСообщений;
 }

 СОСТ СообщОбИзмененииКолваВходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_ВО_ВХОДНОМ_БУФЕРЕ_ТВ, ЛП_КолвоВходныхСообщений))
         В СЛЕДУЮЩЕЕ;
         В СОСТ АнализКолваВыходныхСообщений;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }

/*---------------*/
 СОСТ АнализКолваВыходныхСообщений{
    ЕСЛИ (ЛП_КолвоВыходныхСообщений != GetOutMsgNumber_TV ()) {
         ЛП_КолвоВыходныхСообщений   = GetOutMsgNumber_TV ();
         В СОСТ СообщОбИзмененииКолваВыходныхСообщений;
    } ИНАЧЕ В СОСТ АнализОшибокКС;
 }

 СОСТ СообщОбИзмененииКолваВыходныхСообщений{
     ЕСЛИ (SendMsgLongParamPIV(N_СООБ_В_ВЫХОДНОМ_БУФЕРЕ_ТВ, ЛП_КолвоВыходныхСообщений))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПаузаВыхС{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ АнализОшибокКС;
 }

}

/*================================================*/
/*==                                            ==*/
/*==  ПРОЦЕССЫ ВОССТАНОВЛЕНИЯ СВЯЗИ             ==*/
/*==  643.АЭ1610.10000 Д2.0                     ==*/
/*================================================*/
ПРОЦ ЗапускПроцессовВосстановленияСвязи{
 СОСТ Начало{
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ПИВ;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ВПО;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ТДД;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ДУ;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ДТН;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ДТР;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ИП2К_К1;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗР;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗУ;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ЗВ;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ТР;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ТУ;
    СТАРТ ПРОЦ ВосстановлениеСвязиС_ТВ;
    СТОП;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ПИВ             =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ПИВ{
ДЦЕЛ ЛП_ВремяОтсутствияСвязи ЛОКАЛ;
 СОСТ Начало{
    ЛП_ВремяОтсутствияСвязи = 0;
    ЕСЛИ (GetChannelStatus_PIV() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Восстановление{
    ЛП_ВремяОтсутствияСвязи++;
    InitChannelStatus_PIV();
    SendMsgPIVCode(ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ);
    ЕСЛИ (ЛП_ВремяОтсутствияСвязи >= ДВЕ_МИНУТЫ) В СОСТ ЗапускОтмены;
    ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВосстановления{
    ЛП_ВремяОтсутствияСвязи++;
    ЕСЛИ (GetChannelStatus_PIV() == ВЫКЛ) В СОСТ Восстановление;
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ В СОСТ Начало; /* если связь не пропала */
 }

/*   ВОПРОС!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   */
 СОСТ ЗапускОтмены{
    ЕСЛИ (!(ПРОЦ РежимОТМЕНА В СОСТ АКТИВНОЕ))	СТАРТ ПРОЦ РежимОТМЕНА;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ БесконечныеПопыткиВосстановления{
    InitChannelStatus_PIV();
    SendMsgPIVCode(ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВосстановленияПослеОтмены{
    ЕСЛИ (GetChannelStatus_PIV() == ВЫКЛ)
         В СОСТ БесконечныеПопыткиВосстановления;
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПИВ В СОСТ Начало;
 }

}
/*==============================================*/
/*=     Восстановление Связи с ВПО             =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ВПО{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_VPO() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ВПО В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_VPO();
    SendMsgVPOCode(ПК_ВПО_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ТДД             =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ТДД{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_TDD() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ТДД В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_TDD();
    SendMsgTDDCode(ПК_ТДД_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ДУ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ДУ{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_DU() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДУ В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_DU();
    SendMsgDUCode(ПК_ДУ_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ДТН             =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ДТН{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_DTN() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТН В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_DTN();
    SendMsgDTNCode(ПК_ДТН_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ДТР             =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ДТР{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_DTR() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ДТР В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_DTR();
    SendMsgDTRCode(ПК_ДТР_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ИП              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ИП2К_К1{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_IP2K_K1() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ИП В СОСТ Восстановление;

 }
 СОСТ Восстановление{
    InitChannelStatus_IP2K_K1();
    SendMsgIP2K_K1Code(ПК_ИП2К_К1_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ЗР              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ЗР{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_ZR() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_ZR();
    SendMsgZRCode(ПК_ЗР_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ЗУ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ЗУ{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_ZU() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_ZU();
    SendMsgZUCode(ПК_ЗУ_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ЗВ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ЗВ{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_ZV() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_ZV();
    SendMsgZVCode(ПК_ЗВ_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ТВ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ТР{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_TR() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_TR();
    SendMsgTRCode(ПК_ТР_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ТУ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ТУ{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_TU() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_TU();
    SendMsgTUCode(ПК_ТУ_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}
/*==============================================*/
/*=     Восстановление Связи с ТВ              =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ВосстановлениеСвязиС_ТВ{
 СОСТ Начало{
    ЕСЛИ (GetChannelStatus_TV() == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ТаймАутВосстановления{
    ТАЙМАУТ ТАЙМАУТ_НА_ВОССТАНОВЛЕНИЕ_СВЯЗИ_С_ПРИВОДОМ В СОСТ Восстановление;
 }
 СОСТ Восстановление{
    InitChannelStatus_TV();
    SendMsgTVCode(ПК_ТВ_ИНИЦИАЛИЗАЦИЯ);
    В СОСТ Начало;
 }
}


/*==============================================*/
/*==============================================*/
/*==                                          ==*/
/*==       ПРОЦЕССЫ УПРАВЛЕНИЯ ВПО            ==*/
/*==       643.АЭ1610.10000 Д2.38             ==*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*=           ВЫКЛЮЧИТЬ ВПО                    =*/
/*=           643.АЭ1610.10000 Д2.38           =*/
/*==============================================*/
ПРОЦ ВЫК_ВПО{
 ИЗ ПРОЦ Инициализация ФлагВПО;
 СОСТ Начало{
         ФлагВПО = ВЫКЛ;
         ЕСЛИ (SendMsgPIVCode(ВЫК_ВПО)) В СОСТ ПередачаКомандыВ_ВПО;

         ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКомандыВ_ВПО{
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВЫК_ВПО)) СТОП;

         ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ НарушениеСвязиСВПО{
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*==============================================*/
/*=           ВКЛЮЧИТЬ ВПО                     =*/
/*=           643.АЭ1610.10000 Д2.38           =*/
/*==============================================*/
ПРОЦ ВКЛ_ВПО{
 ИЗ ПРОЦ Инициализация ФлагВПО;
 СОСТ Начало{
         ФлагВПО = ВКЛ;
         ЕСЛИ (SendMsgPIVCode(ВКЛ_ВПО)) В СОСТ ПередачаКомандыВ_ВПО;

         ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПередачаКомандыВ_ВПО{
         ЕСЛИ (SendMsgVPOCode(ПК_ВПО_ВКЛ_ВПО)) СТОП;

         ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ НарушениеСвязиСВПО{
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }


 СОСТ НарушениеСвязи{
     СТОП;
 }


}

/*==============================================*/
/*==============================================*/
/*==                                          ==*/
/*==        ПРОЦЕССЫ РЕГУЛЯТОРОВ              ==*/
/*==        643.АЭ1610.10000 Д2.40 - 48       ==*/
/*==============================================*/
/*==============================================*/

/*==============================================*/
/*=       РЕГУЛЯТОР РАСХОДА ГАЗА               =*/
/*=       643.АЭ1610.10000 Д2.40               =*/
/*==============================================*/
ПРОЦ РЕГ_РГ{
 СОСТ Начало{
         СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_РГ;
         В СОСТ ФормированиеЗадания;
 }
 СОСТ ФормированиеЗадания{
      В СОСТ ФормированиеЗадания;
 }
}

/*==============================================*/
/*=   КОНТРОЛЬ РЕГУЛЯТОРА РАСХОДА ГАЗА         =*/
/*=   643.АЭ1610.10000 Д2.40                   =*/
/*==============================================*/
ПРОЦ КОНТРОЛЬ_РЕГ_РГ{
 ИЗ ПРОЦ Инициализация
                         НП_ВремяПереходногоПроцессаQгаза,
                         НП_ПогрешностьQгаза,
                         ФП_Qгаза,
                         ЗД_Qгаза;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;
ПЛАВ ЛП_ЗД_Qгаза_Т1 ЛОКАЛ; /*спасенное значение ЗД_Qгаза на предыдущей итеррации*/

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Qгаза_Т1 = ЗД_Qгаза;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{
    ЕСЛИ(ЛП_ЗД_Qгаза_Т1 != ЗД_Qгаза)   ЛП_СчетчикВремени = 0;
    ЛП_СчетчикВремени ++;
    ЕСЛИ(ЛП_СчетчикВремени > НП_ВремяПереходногоПроцессаQгаза) {
       ЛП_СчетчикВремени --;	/* защита от переполнения */

       ЕСЛИ (ЗД_Qгаза < 1.0) {
          В СОСТ ПередачаСообщения;
       } ИНАЧЕ {
          ЕСЛИ ((fabs(ФП_Qгаза - ЗД_Qгаза)/ЗД_Qгаза) > НП_ПогрешностьQгаза) {
             В СОСТ ПередачаСообщения;
          }
      }
    }
    ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) СТОП;

 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_РГ_ВЫШЕ_НОРМЫ)) В СОСТ Начало;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_РГ   */

/*==============================================*/
/*=     ВЫКЛЮЧНИЕ РЕГУЛЯТОРА РАСХОДА ГАЗА      =*/
/*=     643.АЭ1610.10000 Д2.40                 =*/
/*==============================================*/
ПРОЦ ВЫК_РЕГ_РГ{
 ИЗ ПРОЦ Инициализация
                         ЗД_Qгаза;

 СОСТ Начало{
    СТОП ПРОЦ РЕГ_РГ;
    СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;  /*!!!!!! добавить ???? */
    СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12; /*!!!!!! добавить ???? */
    СТОП;
 }
}  /* конец ПРОЦ ВЫК_РЕГ_РГ   */

/*==============================================*/
/*=       РЕГУЛЯТОР ДАВЛЕНИЯ                   =*/
/*=       643.АЭ1610.10000 Д2.41               =*/
/*==============================================*/
ПРОЦ РЕГ_Д{
 ИЗ ПРОЦ Инициализация   ОП_ПогрешностьPнк,
                         НП_Pпор,
                         НП_КОЭФ_НА_ОТКР,
                         НП_КОЭФ_НА_ЗАКР,
                         ЗД_Pнк,
                         ФП_Pнк;
ДЦЕЛ ЛП_ВремяПерехода ЛОКАЛ;
ДЦЕЛ ЛП_ВремяПротивод ЛОКАЛ;
ЛОГ  ЛП_ФлагПерехода ЛОКАЛ;

 СОСТ Начало{
    СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_Д;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализРассогласования{ /* добавитьдобавлено */
    ЛП_ВремяПерехода = 0;
    ЕСЛИ ((ФП_Pнк - ЗД_Pнк ) > ОП_ПогрешностьPнк) {
        СТАРТ ПРОЦ ОТКР_VM14;
        ЛП_ФлагПерехода = ОТКР;
        В СЛЕДУЮЩЕЕ;
    }
    ИНАЧЕ ЕСЛИ ((ФП_Pнк - ЗД_Pнк ) <= -ОП_ПогрешностьPнк) {
        СТАРТ ПРОЦ ЗАКР_VM14;
        ЛП_ФлагПерехода = ЗАКР;
        В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОграничениеМинимальногоВремениРаботы{ /* иначе "щелкает" на границе не изменяя состояния */ /* добавитьдобавлено */
    ТАЙМАУТ 2 {
    	ЕСЛИ (ЛП_ФлагПерехода == ОТКР) В СОСТ ВысокоеДавление;
    	ИНАЧЕ В СОСТ НизкоеДавление;
    }
 }
 СОСТ ВысокоеДавление{
    ЕСЛИ ((ФП_Pнк - ЗД_Pнк ) <= ОП_ПогрешностьPнк) {
      СТАРТ ПРОЦ ВЫК_VM14;
      В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольПороговогоДавления_1{
   ЛП_ВремяПерехода++;
   ЕСЛИ ((ФП_Pнк - ЗД_Pнк) <= НП_Pпор) {
       ЛП_ВремяПротивод = НП_КОЭФ_НА_ОТКР / ЛП_ВремяПерехода;
       ЕСЛИ (ЛП_ВремяПротивод > Т2/2) ЛП_ВремяПротивод = Т2/2;
       ЕСЛИ (ЛП_ВремяПротивод == 0) В СОСТ АнализРассогласования;
       ИНАЧЕ {
          СТАРТ ПРОЦ ЗАКР_VM14;
          В СОСТ Пауза;
       }
   }
   ЕСЛИ (fabs(ФП_Pнк - ЗД_Pнк) > ОП_ПогрешностьPнк)
	В СОСТ АнализРассогласования;
   ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ АнализРассогласования;
 }
 СОСТ Пауза{
    ЕСЛИ (fabs(ФП_Pнк - ЗД_Pнк) > ОП_ПогрешностьPнк)
        В СОСТ АнализРассогласования;
    ТАЙМАУТ ЛП_ВремяПротивод В СОСТ ВыключитьVM14;
 }
 СОСТ ВыключитьVM14 {
        СТАРТ ПРОЦ ВЫК_VM14;
        В СОСТ АнализРассогласования;
 }
 СОСТ НизкоеДавление{
    ЕСЛИ ((ФП_Pнк - ЗД_Pнк) >= -ОП_ПогрешностьPнк) {
      СТАРТ ПРОЦ ВЫК_VM14;
      В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ КонтрольПороговогоДавления_2 {
   ЛП_ВремяПерехода++;
   ЕСЛИ ((ФП_Pнк - ЗД_Pнк) >= -НП_Pпор) {
       ЛП_ВремяПротивод = НП_КОЭФ_НА_ЗАКР / ЛП_ВремяПерехода;
       ЕСЛИ (ЛП_ВремяПротивод > Т2/2) ЛП_ВремяПротивод = Т2/2;
       ЕСЛИ (ЛП_ВремяПротивод == 0) В СОСТ АнализРассогласования;
       ИНАЧЕ {
          СТАРТ ПРОЦ ОТКР_VM14;
          В СОСТ Пауза;
       }
   }
   ЕСЛИ (fabs(ФП_Pнк - ЗД_Pнк) > ОП_ПогрешностьPнк)
	В СОСТ АнализРассогласования;
   ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ АнализРассогласования;
 }
}  /* конец ПРОЦ РЕГ_Д   */

/*==============================================*/
/*=        КОНТРОЛЬ РЕГУЛЯТОРА ДАВЛЕНИЯ        =*/
/*=        643.АЭ1610.10000 Д2.41              =*/
/*==============================================*/
ПРОЦ КОНТРОЛЬ_РЕГ_Д{
 ИЗ ПРОЦ Инициализация   ОП_ПогрешностьPнк,
                         НП_ВремяПереходногоПроцессаPнк,
                         ЗД_Pнк,
                         ЗД_Qгаза,
                         ФП_Qгаза,
                         ФП_Pнк;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;

ПЛАВ ЛП_ЗД_Pнк_Т1 ЛОКАЛ; /*спасенное значение ЗД_Pнк_Т1 на предыдущей итеррации*/
ПЛАВ ЛП_ЗД_Qгаза_Т1 ЛОКАЛ;

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Pнк_Т1 = ЗД_Pнк;
    ЛП_ЗД_Qгаза_Т1 = ЗД_Qгаза;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{      /*изменения заданий РЕГ_Д и РЕГ_РГ */
    ЕСЛИ((ЛП_ЗД_Qгаза_Т1 != ЗД_Qгаза)||(ЛП_ЗД_Pнк_Т1 != ЗД_Pнк) ) {
         ЛП_СчетчикВремени = 0;
         ЛП_ЗД_Pнк_Т1 = ЗД_Pнк;
         ЛП_ЗД_Qгаза_Т1 = ЗД_Qгаза;
    }
    ЛП_СчетчикВремени ++;

    ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаPнк) {
       ЛП_СчетчикВремени --;	/* защита от переполнения */
       ЕСЛИ (ЗД_Pнк < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Д) {
          ЕСЛИ (!(ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ)) СТОП;
          ИНАЧЕ В СОСТ ПередачаСообщения;
       } ИНАЧЕ {
          ЕСЛИ ((fabs(ФП_Pнк - ЗД_Pнк)/ЗД_Pнк) > ОП_ПогрешностьPнк) {
               ЕСЛИ (!(ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ)) СТОП;
               ИНАЧЕ В СОСТ ПередачаСообщения;
          }
       }
    }

 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_Д_ВЫШЕ_НОРМЫ)) В СОСТ Начало;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_Д   */

/*==============================================*/
/*=        ВЫКЛЮЧНИЕ РЕГУЛЯТОРА ДАВЛЕНИЯ       =*/
/*=        643.АЭ1610.10000 Д2.41              =*/
/*==============================================*/
ПРОЦ ВЫК_РЕГ_Д{
 СОСТ Начало{
    СТАРТ ПРОЦ ВЫК_VM14;
    СТОП ПРОЦ РЕГ_Д;
    СТОП;
 }
}  /* конец ПРОЦ ВЫК_РЕГ_Д   */


/*==============================================*/
/*=                                            =*/
/*=   ПРОЦЕССЫ УПРАВЛЕНИЯ ИСТОЧНИКОМ ПИТАНИЯ   =*/
/*=   НАГРЕВАТЕЛЯ (ПТД И ИП2К)                 =*/
/*=   643.АЭ1610.10000 Д2.33                   =*/
/*=                                            =*/
/*==============================================*/

/*************************************************
 *  Включение Регулятора Мощности ИПН
 *  разбирается с текущим ИПН и включает соответственно
 *  ПТД или ИП2К
 *  Примечание. Для правильной работы при переключении на регулятор
 *  требуется "убивать"
 *  процессы РЕГ_ТН, РЕГ_ТР, РЕГ_РОСТА вручную
 **************************************************/

/*************************************************
 *  Включение Регулятора Мощности ИПН К1
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВКЛ_РЕГ_W_ИПН_К1{
 ИЗ ПРОЦ Инициализация К_МНмах,
                       К_МНмин;
 ИЗ ПРОЦ Инициализация НП_ТипИПН;
 СОСТ Начало{
    СТОП ПРОЦ ВЫК_ИПН;
    СТОП ПРОЦ ВЫК_ИПН_К1;
    СТОП ПРОЦ ВЫК_ПТД;
    СТОП ПРОЦ ВЫК_ИП2К_К1;

    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) СТОП;
    ИНАЧЕ {
         ЕСЛИ (!К_МНмин) В СЛЕДУЮЩЕЕ;
         ИНАЧЕ В СОСТ ВключениеИсточника;
    }
 }
 СОСТ СообщениеНетВоды{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОДАТЬ_ВОДУ_В_СИСТЕМУ_ОХЛАЖДЕНИЯ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПаузаМинута{
     ТАЙМАУТ ОДНА_МИНУТА В СОСТ Начало;
 }
 СОСТ ВключениеИсточника{
    РАЗБОР (НП_ТипИПН) {
         СЛУЧАЙ ИПН_ПТД:
              СТАРТ ПРОЦ ВКЛ_ПТД;
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
         СЛУЧАЙ ИПН_ИП2К:
              СТАРТ ПРОЦ ВКЛ_ИП2К_К1;
              В СОСТ КонтрольВключенияИП2К;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ ОшибкаИнициализацииИПН;
              КОНЕЦ;
    }
 }

 СОСТ КонтрольВключенияПТД{
    ЕСЛИ (!(ПРОЦ ВКЛ_ПТД В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ПТД В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_W_ИПН_К1;
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольВключенияИП2К{
    ЕСЛИ (!(ПРОЦ ВКЛ_ИП2К_К1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ИП2К_К1 В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_W_ИПН_К1;
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ОшибкаИнициализацииИПН{
    ЕСЛИ (SendMsgPIVCode(ТИП_ИПН_НЕ_ПРОИНИЦИАЛИЗИРОВАН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Включение Регулятора Мощности ИПН К1 ТЕСТОВОЕ
  ТЕСТОВОЕ - значит без контроля воды и т.п.
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ{
 ИЗ ПРОЦ Инициализация НП_ТипИПН;
 СОСТ ВключениеИсточника{
    РАЗБОР (НП_ТипИПН) {
         СЛУЧАЙ ИПН_ПТД:
              СТАРТ ПРОЦ ВКЛ_ПТД;
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
         СЛУЧАЙ ИПН_ИП2К:
              СТАРТ ПРОЦ ВКЛ_ИП2К_К1;
              В СОСТ КонтрольВключенияИП2К;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ ОшибкаИнициализацииИПН;
              КОНЕЦ;
    }
 }
 СОСТ КонтрольВключенияПТД{
    ЕСЛИ (!(ПРОЦ ВКЛ_ПТД В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ПТД В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_W_ИПН_К1_ТЕСТОВОЕ;  /* !!!!! ВОТ ТАК !!!! */
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }

 СОСТ КонтрольВключенияИП2К{
    ЕСЛИ (!(ПРОЦ ВКЛ_ИП2К_К1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ИП2К_К1 В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_W_ИПН_К1_ТЕСТОВОЕ;
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }

 СОСТ ОшибкаИнициализацииИПН{
    ЕСЛИ (SendMsgPIVCode(ТИП_ИПН_НЕ_ПРОИНИЦИАЛИЗИРОВАН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}
/*************************************************
 *  Включение Регулятора Мощности ИПН К2
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВКЛ_РЕГ_W_ИПН_К2{
 ИЗ ПРОЦ Инициализация К_МНмах,
                       К_МНмин;
 СОСТ Начало{
    СТОП ПРОЦ ВЫК_ИПН;
    СТОП ПРОЦ ВЫК_ИПН_К2;
    СТОП ПРОЦ ВЫК_ИП2К_К2;

    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ) СТОП;
    ИНАЧЕ {
         ЕСЛИ (!К_МНмин) В СЛЕДУЮЩЕЕ;
         ИНАЧЕ В СОСТ ВключениеИсточника;
    }
 }
 СОСТ СообщениеНетВоды{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОДАТЬ_ВОДУ_В_СИСТЕМУ_ОХЛАЖДЕНИЯ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПаузаМинута{
     ТАЙМАУТ ОДНА_МИНУТА В СОСТ Начало;
 }
 СОСТ ВключениеИсточника{
              СТАРТ ПРОЦ ВКЛ_ИП2К_К2;
              В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияИП2К{
    ЕСЛИ (!(ПРОЦ ВКЛ_ИП2К_К2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_ИП2К_К2 В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_W_ИПН_К2;
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Включение ПТД (Физический уровень)
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВКЛ_ПТД{

 ИЗ ПРОЦ Инициализация
                        У_ВКЛ_ПТД,
                        У_ВЫК_ПТД,
                        У_ВКЛ_РВ_ПТД,
                        К_ВКЛ_ПТД;
 СОСТ Начало{
    СТОП ПРОЦ ВЫК_ПТД;
    У_ВКЛ_РВ_ПТД = ВКЛ;
    У_ВКЛ_ПТД = ВКЛ;
    У_ВЫК_ПТД = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза1сек{
    ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ ПроверкаВключения;
 }
 СОСТ ПроверкаВключения{
    У_ВКЛ_ПТД = ВЫКЛ;
    ЕСЛИ (К_ВКЛ_ПТД) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ ОшибкаПТД;
 }
 СОСТ Сообщение{
    ЕСЛИ (SendMsgPIVCode(ПТД_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаПТД{
    У_ВЫК_ПТД = ВКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза1сек_2{
    ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ СообщениеОбОшибкаПТД;
 }
 СОСТ СообщениеОбОшибкаПТД{
    У_ВЫК_ПТД = ВЫКЛ;
    У_ВКЛ_РВ_ПТД = ВЫКЛ;
    ЕСЛИ (SendMsgPIVCode(ОТКАЗ_ПТД)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}

/*************************************************
 *  Выключение ПТД (Физический уровень)
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВЫК_ПТД{
 ИЗ ПРОЦ Инициализация
                        У_ВКЛ_РВ_ПТД,
                        У_ВКЛ_ПТД,
                        У_ВЫК_ПТД,
                        К_ВКЛ_ПТД;
 СОСТ Начало{
    СТОП ПРОЦ ВКЛ_ПТД;
    У_ВКЛ_ПТД = ВЫКЛ;
    У_ВЫК_ПТД = ВКЛ;
    В СОСТ Пауза1сек;
 }
 СОСТ Пауза1сек{
    ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ ПроверкаВыключения;
 }
 СОСТ ПроверкаВыключения{
    У_ВЫК_ПТД = ВЫКЛ;
    У_ВКЛ_РВ_ПТД = ВЫКЛ;
    ЕСЛИ (!К_ВКЛ_ПТД) В СОСТ Сообщение;
    ИНАЧЕ В СОСТ ОшибкаПТД;
 }
 СОСТ Сообщение{
    ЕСЛИ (SendMsgPIVCode(ПТД_В_НОРМЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОшибкаПТД{
    ЕСЛИ (SendMsgPIVCode(ОТКАЗ_ПТД)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}


/*************************************************
 *  Тестирование Исправности Теплового Узла
 *  смотрит текущий тип ИПН и вызывает тест
 *  соответствующего ИПН
    643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ТЕСТ_ТУ{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 СОСТ Начало{
    РАЗБОР (НП_ТипИПН) {
         СЛУЧАЙ ИПН_ПТД:
              СТАРТ ПРОЦ ТЕСТ_ТУ_ПТД;
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
         СЛУЧАЙ ИПН_ИП2К:
              СТАРТ ПРОЦ ТЕСТ_ТУ_ИП2К;
              В СОСТ КонтрольКонцаТестаИП2К;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ ОшибкаИнициализацииИПН;
              КОНЕЦ;
    }
 }
 СОСТ КонтрольКонцаТестаПТД{
    ЕСЛИ (ПРОЦ ТЕСТ_ТУ_ПТД В СОСТ СТОП) СТОП;
    ИНАЧЕ
         ЕСЛИ (ПРОЦ ТЕСТ_ТУ_ПТД В СОСТ ОШИБКА) ОШИБКА;
 }
 СОСТ КонтрольКонцаТестаИП2К{
    ЕСЛИ (ПРОЦ ТЕСТ_ТУ_ИП2К В СОСТ СТОП) СТОП;
    ИНАЧЕ
         ЕСЛИ (ПРОЦ ТЕСТ_ТУ_ИП2К В СОСТ ОШИБКА) ОШИБКА;
 }
 СОСТ ОшибкаИнициализацииИПН{
    ЕСЛИ (SendMsgPIVCode(ТИП_ИПН_НЕ_ПРОИНИЦИАЛИЗИРОВАН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Тестирование Исправности Теплового Узла с ПТД
    643.АЭ1610.10000 Д2.33~
    Проверка того, что при вращении тигля
    в ИП плюс не замыкает на минус
 **************************************************/
ПРОЦ ТЕСТ_ТУ_ПТД{
 ИЗ ПРОЦ Инициализация  К_ИЗОЛ_ПТД,
                        К_ЗАЩИТА_ПТД,
                        У_ВКЛ_АСС;
 ИЗ ПРОЦ Инициализация  ЗД_Wт,
                        ЗД_Wипн_К1;
 ЛОГ ЛП_ФлагОшибки ЛОКАЛ;
 СОСТ Начало{
    ЛП_ФлагОшибки = ВЫКЛ;
    У_ВКЛ_АСС = ВКЛ;   /* включаем сброс, пауза Т3 */
    ТАЙМАУТ ДВЕ_СЕКУНДЫ В СОСТ ВключениеИПН_и_ВращенияТигля;
 }
 СОСТ ВключениеИПН_и_ВращенияТигля{
    У_ВКЛ_АСС = ВЫКЛ;   /* выключаем аварийный стоп-сброс */
    ЗД_Wт = -2.0;
    СТАРТ ПРОЦ ТИГ_ВР;
    ЗД_Wипн_К1 = 0.0;
    СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключенияИПН{
    ЕСЛИ (!ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ В СОСТ АКТИВНОЕ) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ В СОСТ СТОП) В СЛЕДУЮЩЕЕ;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
              СТАРТ ПРОЦ ВЫК_ИПН_К1;
              ОШИБКА;
         }
    }
 }
 СОСТ ПроверкаRиз{
    ЕСЛИ (К_ИЗОЛ_ПТД) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ПроверкаЗащиты;
 }
 СОСТ СообщениеОбОшибкеСопротивления {
    ЛП_ФлагОшибки = ВКЛ;
    ЕСЛИ (SendMsgPIVCode(СОПРОТИВЛЕНИЕ_ИЗОЛЯЦИИ_ПТД_НИЖЕ_НОРМЫ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаЗащиты{
    СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
    СТАРТ ПРОЦ ВЫК_ИПН_К1;
    ЕСЛИ (К_ЗАЩИТА_ПТД) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ КонтрольРезультатаТестирования;
 }
 СОСТ СообщениеОбОшибкеЗащиты {
    ЛП_ФлагОшибки = ВКЛ;
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛА_ЗАЩИТА_ПТД)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольРезультатаТестирования{
    ЕСЛИ (ЛП_ФлагОшибки) {
         ЕСЛИ (SendMsgPIVCode(ОШИБКА_ТУ)) ОШИБКА;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ТУ_В_НОРМЕ)) СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Тестирование Исправности Теплового Узла с ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ТЕСТ_ТУ_ИП2К{
 ИЗ ПРОЦ Инициализация
                        Флаг_ИП2К_К1,
                        ЗД_Wт,
                        ЗД_Wипн_К1;
 ЛОГ ЛП_ФлагОшибки ЛОКАЛ;
 СОСТ Начало{
    ЛП_ФлагОшибки = ВЫКЛ;
    ЗД_Wт = -2.0;
    СТАРТ ПРОЦ ТИГ_ВР;
    ЗД_Wипн_К1 = 0.0;
    СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВключенияИПН{
    ЕСЛИ (!ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ В СОСТ АКТИВНОЕ) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ В СОСТ СТОП) В СЛЕДУЮЩЕЕ;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
              СТАРТ ПРОЦ ВЫК_ИПН_К1;
              ОШИБКА;
         }
    }
 }
 СОСТ ПроверкаРаботыВтечениеМинуты{
    ЕСЛИ (!Флаг_ИП2К_К1) {
         ЛП_ФлагОшибки = ВКЛ;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ ВыключениеРегуляторов;
 }
 СОСТ ВыключениеРегуляторов{
    СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
    СТАРТ ПРОЦ ВЫК_ИПН_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольРезультатаТестирования{
    ЕСЛИ (ЛП_ФлагОшибки) {
         ЕСЛИ (SendMsgPIVCode(ОШИБКА_ТУ)) ОШИБКА;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ТУ_В_НОРМЕ)) СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}


/*************************************************
 *  Выключение Регуляторов ИПН
 *  выключает регуляторы мощности обоих каналов,
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВЫК_ИПН{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;

 СОСТ Начало{
    СТАРТ ПРОЦ ВЫК_ИПН_К1;
    СТАРТ ПРОЦ ВЫК_ИПН_К2;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОкончания{
    ЕСЛИ (!(ПРОЦ ВЫК_ИПН_К1 В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВЫК_ИПН_К2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ ВЫК_ИПН_К1 В СОСТ СТОП) &&
               (ПРОЦ ВЫК_ИПН_К2 В СОСТ СТОП)) СТОП;
         ИНАЧЕ ОШИБКА;
    }
 }
}

/*************************************************
 *  Выключение Регуляторов ИПН К1
 *  смотрит текущий тип ИПН и
 *  выключает регуляторы мощности первого канала,
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВЫК_ИПН_К1{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 СОСТ Начало{
    СТОП ПРОЦ РЕГ_РОСТА;
    СТОП ПРОЦ РЕГ_ТР;
    СТОП ПРОЦ РЕГ_ТН;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_W_ИПН_К1_ТЕСТОВОЕ;
    СТОП ПРОЦ РЕГ_W_ИПН_К1;
    СТОП ПРОЦ РЕГ_W_ИПН_К1_ТЕСТОВОЕ;

    РАЗБОР (НП_ТипИПН) {
         СЛУЧАЙ ИПН_ПТД:
              СТАРТ ПРОЦ ВЫК_ПТД;
              В СЛЕДУЮЩЕЕ;
              КОНЕЦ;
         СЛУЧАЙ ИПН_ИП2К:
              СТАРТ ПРОЦ ВЫК_ИП2К_К1;
              В СОСТ КонтрольВыключенияИП2К;
              КОНЕЦ;
         УМОЛЧАНИЕ:
              В СОСТ ОшибкаИнициализацииИПН;
              КОНЕЦ;
    }
 }

 СОСТ КонтрольВыключенияПТД{
    ЕСЛИ (!(ПРОЦ ВЫК_ПТД В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ПТД В СОСТ СТОП) СТОП;
         ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольВыключенияИП2К{
    ЕСЛИ (!(ПРОЦ ВЫК_ИП2К_К1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ИП2К_К1 В СОСТ СТОП) СТОП;
         ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ОшибкаИнициализацииИПН{
    ЕСЛИ (SendMsgPIVCode(ТИП_ИПН_НЕ_ПРОИНИЦИАЛИЗИРОВАН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Выключение Регуляторов ИПН К2
 *  смотрит текущий тип ИПН и
 *  выключает регулятор мощности второго канала,
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ ВЫК_ИПН_К2{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 СОСТ Начало{
    СТОП ПРОЦ РЕГ_W_ИПН_К2;
    ЕСЛИ (НП_ТипИПН == ИПН_ПТД) СТОП;
    ИНАЧЕ {
         СТАРТ ПРОЦ ВЫК_ИП2К_К2;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольВыключенияИП2К{
    ЕСЛИ (!(ПРОЦ ВЫК_ИП2К_К2 В СОСТ АКТИВНОЕ)){
         ЕСЛИ (ПРОЦ ВЫК_ИП2К_К2 В СОСТ СТОП) СТОП;
         ИНАЧЕ ОШИБКА;
    }
 }
}

/*************************************************
 *  Включение канала 1 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ ВКЛ_ИП2К_К1{
 ИЗ ПРОЦ Инициализация   ЗД_Wипн_К1,
                         НП_УставкаПотокаОхлЖидкости_ИП2К_К1,
                         ФП_ПотокОхлаждВоды_ИП2К_К1,
                         Флаг_ИП2К_К1;

 СОСТ Начало{
    ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 < НП_УставкаПотокаОхлЖидкости_ИП2К_К1) В СЛЕДУЮЩЕЕ; 
    ИНАЧЕ В СОСТ ВключениеИсточника;
 }
 СОСТ СообщениеНетВоды{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_НИЖЕ_НОРМЫ_ПОДАТЬ_ВОДУ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПаузаМинута{
    ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 >= НП_УставкаПотокаОхлЖидкости_ИП2К_К1) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ОДНА_МИНУТА В СОСТ Начало;
 }

 СОСТ ВключениеИсточника{
     ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ВКЛЮЧИТЬ, ЗД_Wипн_К1)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }
 СОСТ КонтрольВключения{
     ЕСЛИ (Флаг_ИП2К_К1 == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП В СОСТ НарушениеРаботы;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботы {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     ОШИБКА;
 }

}
/*************************************************
 *  Выключение канала 1 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ ВЫК_ИП2К_К1{
 ИЗ ПРОЦ Инициализация
                         Флаг_ИП2К_К1;

 СОСТ Начало{
     ЕСЛИ (SendMsgIP2K_K1Code(ПК_ИП2К_К1_ВЫКЛЮЧИТЬ)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }
 СОСТ КонтрольВключения{
     ЕСЛИ (Флаг_ИП2К_К1 == ВЫКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП В СОСТ НарушениеРаботы;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботы {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*************************************************
 *  Включение канала 2 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.33~
 **************************************************/
ПРОЦ ВКЛ_ИП2К_К2{
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ИП2К_ОТСУТСТВУЕТ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}
/*************************************************
 *  Выключение канала 2 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.33~
 **************************************************/
ПРОЦ ВЫК_ИП2К_К2{
 СОСТ Начало{
      СТОП;
 /*   ЕСЛИ (SendMsgPIVCode(ИП2К_ОТСУТСТВУЕТ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;   */
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}

/*==============================================*/
/*=                                            =*/
/*=          РЕГУЛЯТОР МОЩНОСТИ                =*/
/*=         643.АЭ1610.10000 Д2.43             =*/
/*=                                            =*/
/*==============================================*/
/*************************************************
 *  Регулирование Мощности канала 1 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.43
 **************************************************/
ПРОЦ РЕГ_W_ИПН_К1{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 ИЗ ПРОЦ Инициализация   Флаг_ИП2К_К1;
 ИЗ ПРОЦ Инициализация
                         НП_Кп_Wптд,
                         НП_Iптд_МАХ,
                         НП_Пауза_Wптд,
                         ФП_Wипн_К1,
                         ФП_Iипн_К1,
                         ФП_Uипн_К1,
                         ЗД_Wипн_К1,
                         ЗД_Iптд;

 СОСТ Начало{
    СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_W_ИПН_К1;
    ЕСЛИ (НП_ТипИПН == ИПН_ПТД)    В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ РегулированиеПриИП2К;
 }
 СОСТ РегулированиеПриПТД{
      ЗД_Iптд += НП_Кп_Wптд * (ФП_Wипн_К1 - ЗД_Wипн_К1);
      ЗД_Iптд = limitationMINMAX(ЗД_Iптд, 0.0, НП_Iптд_МАХ);
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПАУЗА_Wптд {
      ТАЙМАУТ НП_Пауза_Wптд В СОСТ РегулированиеПриПТД;
 }
/* ИП_ЛИТ */
 СОСТ РегулированиеПриИП2К{
    ЕСЛИ (Флаг_ИП2К_К1 != ВКЛ) В СЛЕДУЮЩЕЕ;
    В СОСТ РегулированиеПриИП2К;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ИП2К_К1)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}

/*************************************************
 *  Регулирование Мощности канала 1 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 ТЕСТОВОЕ - посылается в качестве задания - 0

 *  643.АЭ1610.10000 Д2.43
 **************************************************/
ПРОЦ РЕГ_W_ИПН_К1_ТЕСТОВОЕ{
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 ИЗ ПРОЦ Инициализация   Флаг_ИП2К_К1;
 ИЗ ПРОЦ Инициализация
                         НП_Кп_Wптд,
                         НП_Iптд_МАХ,
                         НП_Пауза_Wптд,
                         ФП_Wипн_К1,
                         ФП_Iипн_К1,
                         ФП_Uипн_К1,
                         ЗД_Wипн_К1,
                         ЗД_Iптд;

 СОСТ Начало{
    ЕСЛИ (НП_ТипИПН == ИПН_ПТД) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ РегулированиеПриИП2К;
 }
 СОСТ РегулированиеПриПТД{
      ЗД_Iптд = 0.0;
      В СОСТ РегулированиеПриПТД;
 }
 СОСТ РегулированиеПриИП2К{
    ЕСЛИ (Флаг_ИП2К_К1 != ВКЛ) В СЛЕДУЮЩЕЕ;
    В СОСТ РегулированиеПриИП2К;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ИП2К_К1)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}
/*======================================================*/
/*============= КОНТРОЛЬ РЕГ МОЩНОСТИ ИПН ==============*/
/*  643.АЭ1610.10000 Д2.43                              */
/*======================================================*/

ПРОЦ КОНТРОЛЬ_РЕГ_W_ИПН_К1{
 ИЗ ПРОЦ Инициализация   НП_ПогрешностьWипн_К1,
                         НП_ВремяПереходногоПроцессаWптд,
                         ЗД_Wипн_К1,
                         ФП_Wипн_К1;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;

ПЛАВ ЛП_ЗД_Wипн_К1_Т1 ЛОКАЛ; /* спасенное значение ЗД_Wипн_К1_Т1 на предыдущей итеррации*/

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Wипн_К1_Т1 = ЗД_Wипн_К1;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{      /*изменения заданий РЕГ_W_ИПН_К1  */
    ЕСЛИ (ЛП_ЗД_Wипн_К1_Т1 != ЗД_Wипн_К1) {
          ЛП_СчетчикВремени = 0;
          ЛП_ЗД_Wипн_К1_Т1 = ЗД_Wипн_К1;
    }
    ЛП_СчетчикВремени++;
    ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаWптд) {
       ЛП_СчетчикВремени --;	/* защита от переполнения */
       ЕСЛИ (ЗД_Wипн_К1 > (МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_W_ИПН_К1 + 500.0)) {
          ЕСЛИ ((fabs(ФП_Wипн_К1 - ЗД_Wипн_К1)/ЗД_Wипн_К1) > НП_ПогрешностьWипн_К1)
             В СОСТ ПередачаСообщения;
       }
    }
    ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) СТОП;
 }

 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_W_ИПН_К1_ВЫШЕ_НОРМЫ)) В СОСТ Начало;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_W_ИПН_К1   */

/*************************************************
 *  Регулирование Мощности канала 2 ИП2К
 *  до появления ИП2К - просто выдает ошибку с диагностикой
 *  - отсутствует ИП2К
 *  643.АЭ1610.10000 Д2.43
 **************************************************/
ПРОЦ РЕГ_W_ИПН_К2{
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ИП2К_ОТСУТСТВУЕТ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	ОШИБКА;
 }
}



/*=====================================================*/
/*==                                                ===*/
/*== ПРОЦЕССЫ РЕГУЛИРОВАНИЯ ТЕМПЕРАТУРЫ НАГРЕВАТЕЛЯ ===*/
/*== Д2.44                                          ===*/
/*==                                                ===*/
/*=====================================================*/

/*==============================================*/
/*=           ВКЛЮЧНИЕ РЕГУЛЯТОРА              =*/
/*=           ТЕМПЕРАТУРЫ НАГРЕВАТЕЛЯ          =*/
/*=           643.АЭ1610.10000 Д2.33           =*/
/*==============================================*/
/*************************************************
*  Включение Регулятора Температуры Нагревателя (ИПН К1)
*  Примечание. Для правильной работы при переключении на
*  регулятор требуется "убивать" процессы РЕГ_ТР, РЕГ_РОСТА
*  вручную
**************************************************/
ПРОЦ ВКЛ_РЕГ_ТН{
 СОСТ Начало{
    ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) {
         ЕСЛИ (!(ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ РЕГ_ТН;
         СТОП;
    } ИНАЧЕ {
         СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольЗапускаРегулятора{
    ЕСЛИ (!(ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_ТН;
              СТОП;
         }
         ИНАЧЕ ОШИБКА;
    }
 }
}

/*==============================================*/
/*=     РЕГУЛЯТОР ТЕМПЕРАТУРЫ НАГРЕВАТЕЛЯ      =*/
/*=     643.АЭ1610.10000 Д2.44                 =*/
/*==============================================*/
ПРОЦ РЕГ_ТН{
 ИЗ ПРОЦ Инициализация
                          ФлагДТН,

                          НП_ДелтаW_Разогрева,
                          НП_ДелтаВремениРазогрева,

                          НП_Кп_Тн,
                          НП_Кд_Тн,
                          НП_Ки_Тн,
                          НП_Пауза_Тн,

                          ЗД_Wипн_К1,
                          НП_Wипн_К1_МАХ,

                          ФП_Тн,
                          ЗД_Тн;

/* добавитьдобавлено - Зюбин */

ПЛАВ ЛП_ФП_Ошибка_0_Тн           ЛОКАЛ; /* текущая */
ПЛАВ ЛП_ФП_Ошибка_1_Тн           ЛОКАЛ; /* предыдущая */
ПЛАВ ЛП_ФП_Ошибка_2_Тн           ЛОКАЛ; /* пред-предыдущая */

 СОСТ Начало{
    ЛП_ФП_Ошибка_0_Тн = 0.0; /* текущая */
    ЛП_ФП_Ошибка_1_Тн = 0.0; /* предыдущая */
    ЛП_ФП_Ошибка_2_Тн = 0.0; /* пред-предыдущая */
    СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_ТН;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ РазогревНагревателя{
     ЕСЛИ (ФП_Тн < МАК_ДОП_ТЕМП_НАГРЕВАТЕЛЯ) {
         ЗД_Wипн_К1 += НП_ДелтаW_Разогрева;
         ЗД_Wипн_К1 = limitationMINMAX(ЗД_Wипн_К1, 0.0, НП_Wипн_К1_МАХ);
         В СОСТ ПаузаРазогрева;
     } ИНАЧЕ В СОСТ РегулированиеЗадания;
 }
 СОСТ ПаузаРазогрева {
      ТАЙМАУТ НП_ДелтаВремениРазогрева В СОСТ РазогревНагревателя;
 }
 СОСТ РегулированиеЗадания{
    ЕСЛИ (ФлагДТН) {
         ЛП_ФП_Ошибка_2_Тн = ЛП_ФП_Ошибка_1_Тн; /* пред-предыдущая */
         ЛП_ФП_Ошибка_1_Тн = ЛП_ФП_Ошибка_0_Тн; /* предыдущая */
		 ЛП_ФП_Ошибка_0_Тн = ФП_Тн - ЗД_Тн; /* текущая */
         ЗД_Wипн_К1 += ЛП_ФП_Ошибка_0_Тн * (НП_Кп_Тн + НП_Ки_Тн + НП_Кд_Тн) -
                       ЛП_ФП_Ошибка_1_Тн * (НП_Кп_Тн + 2.0 * НП_Кд_Тн) +
                       ЛП_ФП_Ошибка_2_Тн *   НП_Кд_Тн;

         ЗД_Wипн_К1 = limitationMINMAX(ЗД_Wипн_К1, 0.0, НП_Wипн_К1_МАХ);
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
          В СОСТ СообщениеДостоверность;
    }
 }
 СОСТ ПаузаТемпНагревателя {
      ТАЙМАУТ НП_Пауза_Тн В СОСТ РегулированиеЗадания;
 }
 СОСТ ОжиданиеГотовности{
    ЕСЛИ (ФлагДТН) В СОСТ РегулированиеЗадания;
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ СообщениеДостоверность;
 }
/*====== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ СообщениеДостоверность{
    ЕСЛИ (SendMsgPIVCode(НЕТ_ДОСТОВЕРНОСТИ_Т_НАГРЕВАТЕЛЯ__РАБОТА_РЕГ_ТН_ПРИОСТАНОВЛЕНА))
         В СОСТ ОжиданиеГотовности;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
    В СОСТ ОжиданиеГотовности;
 }
}  /* конец ПРОЦ РЕГ_ТН   */


/*==============================================*/
/*=   КОНТРОЛЬ РЕГУЛЯТОРА ТЕМПЕРАТУРЫ          =*/
/*=   НАГРЕВАТЕЛЯ                              =*/
/*=   643.АЭ1610.10000 Д2.44                   =*/
/*==============================================*/

ПРОЦ КОНТРОЛЬ_РЕГ_ТН{
 ИЗ ПРОЦ Инициализация   НП_ПогрешностьТн,
                         НП_ВремяПереходногоПроцессаТн,
                         ЗД_Тн,
                         ФП_Тн;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;

ПЛАВ ЛП_ЗД_Тн_Т1 ЛОКАЛ; /* спасенное значение ЗД_Тн на предыдущей итеррации */

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Тн_Т1 = ЗД_Тн;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{      /*изменения заданий РЕГ_ТН  */
    ЕСЛИ (ЛП_ЗД_Тн_Т1 != ЗД_Тн) {
       ЛП_СчетчикВремени = 0;
       ЛП_ЗД_Тн_Т1 = ЗД_Тн;
    }
    ЛП_СчетчикВремени ++;
    ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаТн) {
       ЛП_СчетчикВремени --;	/* защита от переполнения */
       ЕСЛИ (ЗД_Тн < МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_ТН) {
          ЕСЛИ (!(ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ)) СТОП;
          ИНАЧЕ В СОСТ ПередачаСообщения;
       } ИНАЧЕ {
          ЕСЛИ ((fabs(ФП_Тн - ЗД_Тн)/ЗД_Тн) > НП_ПогрешностьТн) {
             ЕСЛИ (!(ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ)) СТОП;
             ИНАЧЕ В СОСТ ПередачаСообщения;
          }
       }
    }
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_ТН_ВЫШЕ_НОРМЫ)) В СОСТ Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     ОШИБКА;
 }

}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_ТН   */



/*=====================================================*/
/*==                                                ===*/
/*== ПРОЦЕССЫ РЕГУЛИРОВАНИЯ ТЕМПЕРАТУРЫ РАСПЛАВА    ===*/
/*== Д2.45                                          ===*/
/*==                                                ===*/
/*=====================================================*/

/*==============================================*/
/*=          ВКЛЮЧНИЕ РЕГУЛЯТОРА               =*/
/*=          ТЕМПЕРАТУРЫ РАСПЛАВА              =*/
/*=          643.АЭ1610.10000 Д2.33            =*/
/*==============================================*/
/*************************************************
*  Включение Регулятора Температуры Расплава (ИПН К1)
**************************************************/
ПРОЦ ВКЛ_РЕГ_ТР{
 СОСТ Начало{
    ЕСЛИ (ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ РЕГ_РОСТА;
    ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) {
         ЕСЛИ (!(ПРОЦ РЕГ_ТР В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ РЕГ_ТР;
         СТОП;
    } ИНАЧЕ {
         СТАРТ ПРОЦ ВКЛ_РЕГ_ТН;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольЗапускаРегулятора{
    ЕСЛИ (!(ПРОЦ ВКЛ_РЕГ_ТН В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_ТН В СОСТ СТОП) {
              СТАРТ ПРОЦ РЕГ_ТР;
              СТОП;
         } ИНАЧЕ ОШИБКА;
    }
 }
}

/*==============================================*/
/*=       РЕГУЛЯТОР ТЕМПЕРАТУРЫ РАСПЛАВА       =*/
/*=       643.АЭ1610.10000 Д2.45               =*/
/*==============================================*/
ПРОЦ РЕГ_ТР{
 ИЗ ПРОЦ Инициализация
                         ФлагДТР,

                         НП_Кп_Тр,
                         НП_Кд_Тр,
                         НП_Ки_Тр,
                         НП_Пауза_Тр,

                         ЗД_Тн,
                         НП_Тн_MAX,

                         ФП_Тр,
                         ЗД_Тр;


/* добавитьдобавлено - Зюбин */


ПЛАВ ЛП_ФП_Ошибка_0_Тр           ЛОКАЛ; /* текущая */
ПЛАВ ЛП_ФП_Ошибка_1_Тр           ЛОКАЛ; /* предыдущая */
ПЛАВ ЛП_ФП_Ошибка_2_Тр           ЛОКАЛ; /* пред-предыдущая */


 СОСТ Начало{
	ЛП_ФП_Ошибка_0_Тр = 0.0; /* текущая */
    ЛП_ФП_Ошибка_1_Тр = 0.0; /* предыдущая */
    ЛП_ФП_Ошибка_2_Тр = 0.0; /* пред-предыдущая */
    СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_ТР;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЕСЛИ (ФлагДТР) {
         ЛП_ФП_Ошибка_2_Тр = ЛП_ФП_Ошибка_1_Тр; /* пред-предыдущая */
         ЛП_ФП_Ошибка_1_Тр = ЛП_ФП_Ошибка_0_Тр; /* предыдущая */
	 	 ЛП_ФП_Ошибка_0_Тр = ФП_Тр - ЗД_Тр; /* текущая */
         ЗД_Тн += ЛП_ФП_Ошибка_0_Тр * (НП_Кп_Тр + НП_Ки_Тр + НП_Кд_Тр) -
                  ЛП_ФП_Ошибка_1_Тр * (НП_Кп_Тр + 2.0 * НП_Кд_Тр) +
                  ЛП_ФП_Ошибка_2_Тр *   НП_Кд_Тр;
      
         ЗД_Тн = limitationMINMAX(ЗД_Тн, 900.0, НП_Тн_MAX); /* добавитьдобавлено - Зюбин */
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
          В СОСТ СообщениеДостоверность;
    }
 }
 СОСТ ПаузаТемпРасплава {
      ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ ПАССИВНОЕ) В СОСТ СообщениеРЕГ_ТННеактивное; /* добавлено */
      ТАЙМАУТ НП_Пауза_Тр В СОСТ ЦиклРегулирования;
 }
 СОСТ ОжиданиеГотовности{
    ЕСЛИ (ФлагДТР) В СОСТ ЦиклРегулирования;
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ СообщениеДостоверность;
 }

/*====== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ СообщениеДостоверность{
    ЕСЛИ (SendMsgPIVCode(НЕТ_ДОСТОВЕРНОСТИ_Т_РАСПЛАВА__РАБОТА_РЕГ_ТР_ПРИОСТАНОВЛЕНА))
         В СОСТ ОжиданиеГотовности;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщениеРЕГ_ТННеактивное{
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТН_ВЫКЛЮЧЕН__РАБОТА_РЕГ_ТР_НЕВОЗМОЖНА)) /* добавлено */
	ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
    В СОСТ ОжиданиеГотовности;
 }
}  /* конец ПРОЦ РЕГ_ТР   */

/*==============================================*/
/*=           КОНТРОЛЬ РЕГУЛЯТОРА              =*/
/*=           ТЕМПЕРАТУРЫ РАСПЛАВА             =*/
/*=           643.АЭ1610.10000 Д2.45           =*/
/*==============================================*/

ПРОЦ КОНТРОЛЬ_РЕГ_ТР{
 ИЗ ПРОЦ Инициализация   НП_ПогрешностьТр,
                         НП_ВремяПереходногоПроцессаТр,
                         ЗД_Тр,
                         ФП_Тр;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;

ПЛАВ ЛП_ЗД_Тр_Т1 ЛОКАЛ; /*спасенное значение ЗД_Тр на предыдущей итеррации*/

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Тр_Т1 = ЗД_Тр;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{      /*изменения заданий РЕГ_Тр  */
    ЕСЛИ (ЛП_ЗД_Тр_Т1 != ЗД_Тр) {
       ЛП_СчетчикВремени = 0;
       ЛП_ЗД_Тр_Т1 = ЗД_Тр;
    }                                                          /* добавлено */
    ЛП_СчетчикВремени ++;                                      /* добавлено */
    ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаТр) { /* добавлено */
       ЛП_СчетчикВремени --;	/* защита от переполнения */   /* добавлено */
       ЕСЛИ ((fabs(ФП_Тр - ЗД_Тр)/ЗД_Тр) > НП_ПогрешностьТр)   /* добавлено */
          В СОСТ ПередачаСообщения;                            /* добавлено */
    }                                                          /* добавено */
    ЕСЛИ (ПРОЦ РЕГ_ТР В СОСТ ПАССИВНОЕ) СТОП;                  /* добавлено */
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_ТР_ВЫШЕ_НОРМЫ)) В СОСТ Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }                                                             /* добавлено */
}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_ТР   */

/*==============================================*/
/*=       РЕГУЛЯТОР УРОВНЯ РАСПЛАВА            =*/
/*=       643.АЭ1610.10000 Д2.46               =*/
/*==============================================*/
ПРОЦ РЕГ_УР{
 ИЗ ПРОЦ Инициализация
                         НП_MIN_ДУДД_Hур,
                         НП_MAX_ДУДД_Hур,
                         НП_ПоправкаVтР_Нур,
                         НП_Кп_ДУДД_Hур,
                         НП_MIN_ДУ_Hур,
                         НП_MAX_ДУ_Hур,
                         НП_Кп_ДУ_Hур,
                         ОП_Dзеркала_расплава,
                         ФлагDкр,
                         ФлагHур,
                         ФП_Dкр,
                         ЗД_VтР,
                         ФП_VзР,
                         ЗД_Hур,
                         ФП_Hур;


ПЛАВ ЛП_ОшибкаHур ЛОКАЛ;
ПЛАВ ЛП_НормализованнаяОшибка ЛОКАЛ;

ПЛАВ ЛП_СоставляющаяHур ЛОКАЛ;
ПЛАВ ЛП_СоставляющаяDкр ЛОКАЛ;

 СОСТ ПроверкаАктивностиVтР{
    ЕСЛИ (!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ)) {
         ЗД_VтР = 0.0;
         СТАРТ ПРОЦ ТИГ_РС;
    } ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаУсловийЗапуска{
    ЛП_ОшибкаHур = ФП_Hур - ЗД_Hур;
    ЕСЛИ ((fabs(ЛП_ОшибкаHур) > МАКСИМАЛЬНОЕ_РАССОГЛАСОВАНИЕ_УРОВНЯ) &&
          (ФлагHур == ВКЛ)) В СОСТ СообщенияПИВоРассогласовании;
    ИНАЧЕ {
         СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_УР;
         В СОСТ ЦиклРегулированияУровня;
    }
 }

 СОСТ ЦиклРегулированияУровня{
    ЕСЛИ (ФлагDкр == ВКЛ) {
         ЛП_СоставляющаяDкр = КОЭФ_ПЛОТНОСТИ_ТВ_ЖД_SI * ФП_VзР *
                              (ФП_Dкр/ОП_Dзеркала_расплава) *
                              (ФП_Dкр/ОП_Dзеркала_расплава);
         ЕСЛИ (fabs(ЛП_СоставляющаяDкр) > 0.7) ЛП_СоставляющаяDкр = 0.0;
         ЕСЛИ (ФлагHур == ВКЛ) {
           ЛП_ОшибкаHур = ФП_Hур - ЗД_Hур;
           ЛП_СоставляющаяHур = НП_Кп_ДУДД_Hур *
                                limitationZeroZoneMINMAX(ЛП_ОшибкаHур,
                                          НП_MIN_ДУДД_Hур,
                                          НП_MAX_ДУДД_Hур);
         } ИНАЧЕ ЛП_СоставляющаяHур = 0.0;
    } ИНАЧЕ {
         ЛП_СоставляющаяDкр = 0.0;
         ЕСЛИ (ФлагHур == ВКЛ) {
           ЛП_ОшибкаHур = ФП_Hур - ЗД_Hур;
           ЛП_СоставляющаяHур = НП_Кп_ДУ_Hур *
                                limitationZeroZoneMINMAX(ЛП_ОшибкаHур,
                                          НП_MIN_ДУ_Hур,
                                          НП_MAX_ДУ_Hур);
         } ИНАЧЕ ЛП_СоставляющаяHур = 0.0;
    }
    ЗД_VтР = limitationMINMAX(НП_ПоправкаVтР_Нур +
                              ЛП_СоставляющаяHур +
                              ЛП_СоставляющаяDкр,
                              МИНИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР,
                              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР);
    В СОСТ ЦиклРегулированияУровня;
 }

/*=======================================*/
 СОСТ СообщенияПИВоРассогласовании{
    ЕСЛИ (SendMsgPIVCode(ПРЕВЫШ_ДОПУСТ_РАССОГЛАСОВАНИЯ__РЕГУЛ_НЕВОЗМОЖНО))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
    ОШИБКА;
 }
}  /* конец ПРОЦ РЕГ_УР   */

/*==============================================*/
/*=        КОНТРОЛЬ РЕГУЛЯТОРА УРОВНЯ          =*/
/*=        643.АЭ1610.10000 Д2.46              =*/
/*==============================================*/

ПРОЦ КОНТРОЛЬ_РЕГ_УР{
 ИЗ ПРОЦ Инициализация
                         ФлагHур,
                         ФП_Hур,
                         ЗД_Hур,
                         НП_АварийнаяОшибкаHур,
                         НП_ПредупредительныйHур;
ПЛАВ ЛП_ОшибкаHур ЛОКАЛ;
ДЦЕЛ ЛП_ТаймАут ЛОКАЛ;

 СОСТ Начало {
    ЕСЛИ (!(ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ)) СТОП;
    ИНАЧЕ {
       ЕСЛИ(!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ))
          В СОСТ ПередачаСообщенияРегVтОтключен;
       ИНАЧЕ {
          ЕСЛИ (ФлагHур == ВКЛ) {
             ЛП_ОшибкаHур = ФП_Hур - ЗД_Hур;
             ЕСЛИ (fabs(ЛП_ОшибкаHур) > НП_ПредупредительныйHур) В СЛЕДУЮЩЕЕ;
          }
       }
    }
 }
 СОСТ ПредупредительноеСообщениеОПревышенииПорога {
    ЕСЛИ (SendMsgPIVCode(ПРЕВЫШЕН_ДИАПАЗОН_Hур)) {
         ЛП_ТаймАут = ДЕСЯТЬ_МИНУТ;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольАварии {
    ЕСЛИ (!(ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ)) СТОП;
    ИНАЧЕ {
       ЕСЛИ(!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ))
          В СОСТ ПередачаСообщенияРегVтОтключен;
       ИНАЧЕ {
          ЕСЛИ (ФлагHур == ВКЛ) {
             ЛП_ОшибкаHур = ФП_Hур - ЗД_Hур;
             ЕСЛИ (ЛП_ОшибкаHур < -НП_АварийнаяОшибкаHур)
                В СОСТ АварийноеСообщениеОПроливе;
             ЕСЛИ (ЛП_ОшибкаHур > НП_АварийнаяОшибкаHур)
                В СОСТ АварийноеСообщениеОПревышенииПорога;
          }
       }
    }
    ТАЙМАУТ ЛП_ТаймАут В СОСТ Начало;
 }

/*======================*/
 СОСТ АварийноеСообщениеОПроливе {
    ЕСЛИ (SendMsgPIVCode(ПРОЛИВ_РАСПЛАВА)) {
         ОШИБКА ПРОЦ РЕГ_УР;
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ АварийноеСообщениеОПревышенииПорога {
    ЕСЛИ (SendMsgPIVCode(СКАЧОК_УРОВНЯ_РАСПЛАВА)) {
         ОШИБКА ПРОЦ РЕГ_УР;
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияРегVтОтключен{
    ЕСЛИ (SendMsgPIVCode(РЕГ_VтР_ВЫКЛЮЧЕН__РЕГУЛ_УРОВНЯ_НЕВОЗМОЖНО)) {
         ОШИБКА ПРОЦ РЕГ_УР;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_УР   */

/*==============================================*/
/*=         ВЫКЛЮЧНИЕ РЕГУЛЯТОРА УРОВНЯ        =*/
/*=         643.АЭ1610.10000 Д2.46             =*/
/*==============================================*/
ПРОЦ ВЫК_РЕГ_УР{
 СОСТ Начало{
    СТОП ПРОЦ РЕГ_УР;
    СТОП;
 }
}  /* конец ПРОЦ ВЫК_РЕГ_УР   */

/*==============================================*/
/*=       РЕГУЛЯТОР ДИАМЕТРА КРИСТАЛЛА         =*/
/*=       643.АЭ1610.10000 Д2.47               =*/
/*==============================================*/
ПРОЦ РЕГ_ДК{
 ИЗ ПРОЦ Инициализация
                         ФлагРегулятора_V_ЗР,
                         ФлагDкр,

                         НП_ДелтаVзРС_МАХ,
                         ЗД_Vроста,

                         НП_Пауза_Dкр,
                         НП_Ки_Dкр,
                         НП_Кд_Dкр,
                         НП_Кп_Dкр,
                         ЗД_VзР,
                         ФП_Dкр,
                         ЗД_Dкр;

     /* добавитьдобавлено - Зюбин */
ПЛАВ ЛП_ФП_Ошибка_0_Dкр         ЛОКАЛ; /* текущая */
ПЛАВ ЛП_ФП_Ошибка_1_Dкр         ЛОКАЛ; /* предыдущая */
ПЛАВ ЛП_ФП_Ошибка_2_Dкр         ЛОКАЛ; /* пред-предыдущая */

ПЛАВ ЛП_ОткорректированноеЗД_VзР ЛОКАЛ; /* чтобы не терять контекст */
ПЛАВ ЛП_Остаток_Обрезок          ЛОКАЛ; /* чтобы не терять контекст 
                                           при обрезании задания */


 СОСТ Начало{
    ЕСЛИ (ФлагРегулятора_V_ЗР == ВЫКЛ)  В СОСТ СообщениеВыклVзР;
    ИНАЧЕ {
	ЛП_ФП_Ошибка_0_Dкр = 0.0; /* текущая */
        ЛП_ФП_Ошибка_1_Dкр = 0.0; /* предыдущая */
        ЛП_ФП_Ошибка_2_Dкр = 0.0; /* пред-предыдущая */
        ЛП_Остаток_Обрезок = 0.0; /* чтобы исключить сбои при ограничениях */
        СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_ДК;
        В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЦиклРегулированияDкр{
    ЕСЛИ (ФлагDкр) {
          ЛП_ФП_Ошибка_2_Dкр = ЛП_ФП_Ошибка_1_Dкр; /* пред-предыдущая добавитьдобавлено - Зюбин */
          ЛП_ФП_Ошибка_1_Dкр = ЛП_ФП_Ошибка_0_Dкр; /* предыдущая */
          ЛП_ФП_Ошибка_0_Dкр = ФП_Dкр - ЗД_Dкр;    /* текущая */
          ЗД_VзР += ЛП_ФП_Ошибка_0_Dкр * (НП_Кп_Dкр + НП_Ки_Dкр + НП_Кд_Dкр) -
                    ЛП_ФП_Ошибка_1_Dкр * (НП_Кп_Dкр + 2.0 * НП_Кд_Dкр) +
                    ЛП_ФП_Ошибка_2_Dкр * НП_Кд_Dкр + 
                    ЛП_Остаток_Обрезок;   /* добавитьдобавлено Зюбин 06.02.01 */
          /* борьба с последствиями ограничений: запоминаем величину коррекции */
          ЛП_ОткорректированноеЗД_VзР = limitationMINMAX(ЗД_VзР, 0.2, ЗД_Vроста*НП_ДелтаVзРС_МАХ);
          ЛП_Остаток_Обрезок = ЗД_VзР - ЛП_ОткорректированноеЗД_VзР; /* добавитьдобавлено - Зюбин */
          ЗД_VзР = ЛП_ОткорректированноеЗД_VзР;
          В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
          В СОСТ СообщениеДостоверностьDкр;
    }
 }
 СОСТ Пауза_Dкр {
    ТАЙМАУТ НП_Пауза_Dкр В СОСТ ЦиклРегулированияDкр;
 }
 СОСТ ОжиданиеГотовности{
    ЕСЛИ (ФлагDкр) В СОСТ ЦиклРегулированияDкр;
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ СообщениеДостоверностьDкр;
 }

/*====== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ СообщениеДостоверностьDкр{
    ЕСЛИ (SendMsgPIVCode(НЕТ_ДОСТОВЕРНОСТИ_ДИАМЕТРА__РАБОТА_РЕГ_ДК_ПРИОСТАНОВЛЕНА))
         В СОСТ ОжиданиеГотовности;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязиНефатальное;
 }
 СОСТ НарушениеСвязиНефатальное{
    В СОСТ ОжиданиеГотовности;
 }
 СОСТ СообщениеВыклVзР{
    ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВЫКЛЮЧЕН__РАБОТА_РЕГ_ДК_НЕВОЗМОЖНА)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ РЕГ_ДК   */

/*==============================================*/
/*=   КОНТРОЛЬ РЕГУЛЯТОРА ДИАМЕТРА КРИСТАЛЛА   =*/
/*=   643.АЭ1610.10000 Д2.47                   =*/
/*==============================================*/
ПРОЦ КОНТРОЛЬ_РЕГ_ДК{
 ИЗ ПРОЦ Инициализация   ФлагРегулятора_V_ЗР,
                         НП_ВремяПереходногоПроцессаDкр,
                         НП_ПогрешностьDкр,
                         ЗД_Dкр,
                         ФП_Dкр;


ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;
ПЛАВ ЛП_ЗД_Dкр_Т1 ЛОКАЛ; /*спасенное значение ЗД_Dкр на предыдущей итеррации*/


 СОСТ Начало {
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Dкр_Т1 = ЗД_Dкр;
    В СОСТ ЦиклКонтроля;
 }

 СОСТ ЦиклКонтроля{      
    ЕСЛИ (ЛП_ЗД_Dкр_Т1 != ЗД_Dкр) { /* обработка изменения заданий РЕГ_Dкр */
       ЛП_СчетчикВремени = 0;
       ЛП_ЗД_Dкр_Т1 = ЗД_Dкр;
    }
    ЕСЛИ (ФлагРегулятора_V_ЗР == ВЫКЛ) В СОСТ СообщениеVзРНеактивное;
    ИНАЧЕ {
       ЛП_СчетчикВремени ++;
       ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаDкр) {
          ЛП_СчетчикВремени --;	/* защита от переполнения */
          ЕСЛИ ((fabs(ФП_Dкр - ЗД_Dкр)/ЗД_Dкр) > НП_ПогрешностьDкр) {
                В СОСТ ПередачаСообщения;
          }
       }
    }
    ЕСЛИ (ПРОЦ РЕГ_ДК В СОСТ ПАССИВНОЕ) СТОП;
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_ДК_ВЫШЕ_НОРМЫ))  В СОСТ Начало;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СообщениеVзРНеактивное{
    ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВЫКЛЮЧЕН__РАБОТА_РЕГ_ДК_НЕВОЗМОЖНА)) {
    ОШИБКА ПРОЦ РЕГ_ДК;
    СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_ДК   */


/*==============================================*/
/*=  ВЫКЛЮЧЕНИЕ РЕГУЛЯТОРА ДИАМЕТРА КРИСТАЛЛА  =*/
/*=  643.АЭ1610.10000 Д2.47                    =*/
/*==============================================*/
ПРОЦ ВЫК_РЕГ_ДК{
 СОСТ Начало{
    СТОП ПРОЦ РЕГ_ДК;
    СТОП;
 }
}  /* конец ПРОЦ ВЫК_РЕГ_ДК   */


/*=====================================================*/
/*==                                                ===*/
/*== ПРОЦЕССЫ РЕГУЛИРОВАНИЯ РОСТА КРИСТАЛЛА         ===*/
/*== Д2.48                                          ===*/
/*==                                                ===*/
/*=====================================================*/

/*==============================================*/
/*=          ВКЛЮЧНИЕ РЕГУЛЯТОРА               =*/
/*=          РОСТА КРИСТАЛЛА                   =*/
/*=          643.АЭ1610.10000 Д2.33            =*/
/*==============================================*/
/************************************************
 *  Включение Регулятора Роста (ИПН К1)
 ************************************************/
ПРОЦ ВКЛ_РЕГ_РОСТА{
 СОСТ Начало{
    ЕСЛИ (ПРОЦ РЕГ_ТР В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ РЕГ_ТР;
    ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) {
         ЕСЛИ (!(ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ РЕГ_РОСТА;
         СТОП;
    } ИНАЧЕ {
         СТАРТ ПРОЦ ВКЛ_РЕГ_ТН;   
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольЗапускаРегулятора{
    ЕСЛИ (!(ПРОЦ ВКЛ_РЕГ_ТН В СОСТ АКТИВНОЕ)) {   
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_ТН В СОСТ СТОП) {     
              СТАРТ ПРОЦ РЕГ_РОСТА;
              СТОП;
         }
         ИНАЧЕ ОШИБКА;
    }
 }
}

/*==============================================*/
/*=       РЕГУЛЯТОР РОСТА                      =*/
/*=       643.АЭ1610.10000 Д2.48               =*/
/*==============================================*/
ПРОЦ РЕГ_РОСТА{
 ИЗ ПРОЦ Инициализация   

                         НП_Пауза_РЕГ_РОСТА,
                         НП_Кп_Vроста,
                         НП_Ки_Vроста,
                         НП_Кд_Vроста,
                         НП_Кз_Vроста, /*добавитьдобавлено  - Зюбин - зона нечувствительности */

                         ЗД_Тн,
                         НП_Тн_MAX,

                         ЗД_Vроста,
                         ФП_Vроста,
                         ФлагГотовностиVроста;

 /* добавитьдобавлено - Зюбин */

ПЛАВ ЛП_ФП_Ошибка_0_Vроста           ЛОКАЛ; /* текущая */
ПЛАВ ЛП_ФП_Ошибка_1_Vроста           ЛОКАЛ; /* предыдущая */
ПЛАВ ЛП_ФП_Ошибка_2_Vроста           ЛОКАЛ; /* пред-предыдущая */


 СОСТ Начало{ /* ожидаем готовность вычисления средней Vзатравки */
    ЕСЛИ (ФлагГотовностиVроста == ВКЛ) {
		ЛП_ФП_Ошибка_0_Vроста = 0.0; /* текущая */
        ЛП_ФП_Ошибка_1_Vроста = 0.0; /* предыдущая */
        ЛП_ФП_Ошибка_2_Vроста = 0.0; /* пред-предыдущая */
        СТАРТ ПРОЦ КОНТРОЛЬ_РЕГ_РОСТА;
        В СОСТ ЦиклРегулирования;
    }
 }
 СОСТ ЦиклРегулирования{
    ЛП_ФП_Ошибка_2_Vроста = ЛП_ФП_Ошибка_1_Vроста; /* пред-предыдущая */
    ЛП_ФП_Ошибка_1_Vроста = ЛП_ФП_Ошибка_0_Vроста; /* предыдущая */
	ЛП_ФП_Ошибка_0_Vроста = ФП_Vроста - ЗД_Vроста; /* текущая */

	/* зона нечувствительности от НП_Кз_Vроста добавитьдобавлено - Зюбин */
	ЕСЛИ (fabs(ЛП_ФП_Ошибка_0_Vроста) <= НП_Кз_Vроста) ЛП_ФП_Ошибка_0_Vроста = 0.0;
/*	ИНАЧЕ {  добавить Зюбин 06.01.27
/*		ЕСЛИ (ЛП_ФП_Ошибка_0_Vроста > 0.0) ЛП_ФП_Ошибка_0_Vроста -= НП_Кз_Vроста;
/*        ИНАЧЕ ЛП_ФП_Ошибка_0_Vроста += НП_Кз_Vроста;
/*    }
*/
    ЗД_Тн += ЛП_ФП_Ошибка_0_Vроста * (НП_Кп_Vроста + НП_Ки_Vроста + НП_Кд_Vроста) -
             ЛП_ФП_Ошибка_1_Vроста * (НП_Кп_Vроста + 2.0 * НП_Кд_Vроста) +
             ЛП_ФП_Ошибка_2_Vроста * НП_Кд_Vроста;

    ЗД_Тн = limitationMINMAX(ЗД_Тн, 900.0, НП_Тн_MAX); /* добавитьдобавлено - Зюбин */
    В СОСТ ПаузаРегРоста;
 }
 СОСТ ПаузаРегРоста {
      ТАЙМАУТ НП_Пауза_РЕГ_РОСТА В СОСТ ЦиклРегулирования;
 }
}  /* конец ПРОЦ_РЕГ_РОСТА   */

/*==============================================*/
/*=       КОНТРОЛЬ РЕГУЛЯТОРА РОСТА            =*/
/*=       643.АЭ1610.10000 Д2.48               =*/
/*==============================================*/

ПРОЦ КОНТРОЛЬ_РЕГ_РОСТА{
 ИЗ ПРОЦ Инициализация   НП_ПогрешностьVроста,
                         НП_ВремяПереходногоПроцессаVроста,
                         ЗД_Vроста,
                         ФП_Vроста;

ДЦЕЛ ЛП_СчетчикВремени ЛОКАЛ;

ПЛАВ ЛП_ЗД_Vроста_Т1 ЛОКАЛ ; /*спасенное значение ЗД_Vроста на предыдущей итеррации*/

 СОСТ Начало{
    ЛП_СчетчикВремени = 0;
    ЛП_ЗД_Vроста_Т1 = ЗД_Vроста;
    В СОСТ ЦиклКонтроля;
 }
 СОСТ ЦиклКонтроля{      /*изменения заданий   */
    ЕСЛИ (!(ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ)) В СОСТ ПередачаСообщенияРЕГ_ТН;
    ЕСЛИ (!(ПРОЦ РЕГ_РОСТА В СОСТ АКТИВНОЕ)) СТОП;
    ЕСЛИ (ЛП_ЗД_Vроста_Т1 != ЗД_Vроста) {
         ЛП_СчетчикВремени = 0;
         ЛП_ЗД_Vроста_Т1 = ЗД_Vроста;
    }
    ЛП_СчетчикВремени++;
    ЕСЛИ(ЛП_СчетчикВремени >= НП_ВремяПереходногоПроцессаVроста) {
         ЛП_СчетчикВремени--; /* защита от переполнения */
         ЕСЛИ ((fabs(ФП_Vроста - ЗД_Vроста)/ЗД_Vроста) > НП_ПогрешностьVроста)
              В СОСТ ПередачаСообщенияПогрешность;
    }
 }
 СОСТ ПередачаСообщенияПогрешность{
    ЕСЛИ (SendMsgPIVCode(ПОГРЕШНОСТЬ_РЕГ_РОСТА_ВЫШЕ_НОРМЫ)) В СОСТ Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязиНефатальное;
 }
 СОСТ НарушениеСвязиНефатальное{
    В СОСТ Начало;
 }
 СОСТ ПередачаСообщенияРЕГ_ТН{
    ЕСЛИ (SendMsgPIVCode(РЕГ_ТН_ВЫКЛЮЧЕН__РАБОТА_РЕГ_РОСТА_НЕВОЗМОЖНА)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ВыключениеРегулятора{
    СТОП ПРОЦ РЕГ_РОСТА;
    СТОП;
 }
 СОСТ НарушениеСвязи{
    СТОП;
 }
}  /* конец ПРОЦ КОНТРОЛЬ_РЕГ_РОСТА   */


/*==============================================*/
/*=     ВЫКЛЮЧНИЕ РЕГУЛЯТОРА РОСТА             =*/
/*=     643.АЭ1610.10000 Д2.48                 =*/
/*==============================================*/
/*
ПРОЦ ВЫК_РЕГ_РОСТА{
 СОСТ Начало{
    СТОП ПРОЦ РЕГ_РОСТА;
    В СОСТ ПередачаСообщения;
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(РЕГ_РОСТА_ВЫКЛЮЧЕН)) СТОП;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи{
     СТОП;
 }

}  */
  /* конец ПРОЦ ВЫК_РЕГ_РОСТА   */


/*=====================================================*/
/*=====================================================*/
/*==                                                 ==*/
/*==                                                 ==*/
/*==             УПРАВЛЕНИЕ ПРИВОДАМИ                ==*/
/*==          643.АЭ1610.10000 Д2.48                 ==*/
/*==                                                 ==*/
/*=====================================================*/
/*=====================================================*/

/*================================================*/
/*=     ОПРЕДЕЛЕНИЕ КООРДИНАТЫ ЗАТРАВКИ         ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ОпределениеКоординатыЗатравки{
ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                      ФП_Xз,
                      ЗД_Hур,
                      К_КВП_З,
                      К_КНП_З,
                      ТК_РасстояниеДоРасплава_Lпп,
                      НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1,
                      НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                      НП_Lз_ОТ_КВП_ДО_КНП,
                      НП_Lз_ОТ_КВП_ДО_ДП_Lппз,
                      ФП_Lмонокристалла;
 ПЛАВ ЛП_L_ОТ_КВП_ДО_ППрогрева ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (К_КВП_З == ВКЛ)
                        КООРД_ЗАТ = ЗАТ_В_КВП;
    ИНАЧЕ ЕСЛИ (К_КНП_З == ВКЛ)
                        КООРД_ЗАТ = ЗАТ_В_КНП;
     ИНАЧЕ ЕСЛИ (ФП_Xз > ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА)
                        КООРД_ЗАТ = КООРД_ЗАТ_НЕОПРЕДЕЛЕНА;
      ИНАЧЕ ЕСЛИ (ФП_Xз > -ОБЛАСТЬ_ЗАПРЕТА_ВРАЩЕНИЯ_ЗАТРАВКИ)
                        КООРД_ЗАТ = ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ;
       ИНАЧЕ ЕСЛИ (ФП_Xз > (-НП_Lз_ОТ_КВП_ДО_ДП_Lппз + ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ЗАТ = ЗАТ_В_ОБЛАСТИ_РАЗРЕШЕНИЯ_ВРАЩЕНИЯ_ДО_ДП;
        ИНАЧЕ ЕСЛИ (ФП_Xз > (-НП_Lз_ОТ_КВП_ДО_ДП_Lппз - ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ЗАТ = ЗАТ_В_ПОЛОЖЕНИИ_ПРИВЯЗКИ;
         ИНАЧЕ {
          ЛП_L_ОТ_КВП_ДО_ППрогрева = НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +        /* добавить 06.07.20 */
                                     НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 -
                                 (ЗД_Hур + ТК_РасстояниеДоРасплава_Lпп +
                                  ФП_Lмонокристалла);
          ЕСЛИ (ФП_Xз > (-ЛП_L_ОТ_КВП_ДО_ППрогрева + ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ЗАТ = ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРИВЯЗКИ;
          ИНАЧЕ ЕСЛИ (ФП_Xз > (-ЛП_L_ОТ_КВП_ДО_ППрогрева - ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ЗАТ = ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА;
           ИНАЧЕ ЕСЛИ (ФП_Xз > (-НП_Lз_ОТ_КВП_ДО_КНП - ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ЗАТ = ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРОГРЕВА;
            ИНАЧЕ       КООРД_ЗАТ = КООРД_ЗАТ_НЕОПРЕДЕЛЕНА;
         }
    В СОСТ Начало;
 }
}

/*================================================*/
/*=        КОНТРОЛЬ КООРДИНАТЫ ЗАТРАВКИ         ==*/
/*=        643.АЭ1610.10000 Д2.31               ==*/
/*================================================*/
ПРОЦ КонтрольКоординатыЗатравки{
 ИЗ ПРОЦ Инициализация
                        ФП_Xз,
                        КООРД_ЗАТ;
 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 ЦЕЛ ЛП_Сообщение ЛОКАЛ;
 ПЛАВ ЛП_Хз ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!КООРД_ЗАТ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != КООРД_ЗАТ) {
         ЛП_Предыдущее = КООРД_ЗАТ;
         ЛП_Хз = ФП_Xз;
         РАЗБОР (ЛП_Предыдущее) {
              СЛУЧАЙ ЗАТ_В_КВП:
/*                   ЗД_VзР_ПРИВОД = -0.00001;
                   ЗД_VзУ_ПРИВОД = -0.00001;
*/ /*добавлено*/
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_КВП;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_В_ОБЛАСТИ_РАЗРЕШЕНИЯ_ВРАЩЕНИЯ_ДО_ДП:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_ОБЛАСТИ_РАЗРЕШЕНИЯ_ВРАЩЕНИЯ_ДО_ДП;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_В_ПОЛОЖЕНИИ_ПРИВЯЗКИ:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_ПОЛОЖЕНИИ_ПРИВЯЗКИ;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРИВЯЗКИ:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРИВЯЗКИ;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРОГРЕВА:
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_НИЖЕ_ПОЛОЖЕНИЯ_ПРОГРЕВА;
                   КОНЕЦ;
              СЛУЧАЙ ЗАТ_В_КНП:
/*                   ЗД_VзР_ПРИВОД = 0.00001;
                   ЗД_VзУ_ПРИВОД = 0.00001;
*//*добавлено*/
                   ЛП_Сообщение = ПК_ПИВ_ЗАТ_В_КНП;
                   КОНЕЦ;
              УМОЛЧАНИЕ:
                   ЛП_Сообщение = ПК_ПИВ_КООРД_ЗАТ_НЕОПРЕДЕЛЕНА;
                   КОНЕЦ;
         }
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ЛП_Сообщение, ЛП_Хз)) В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=     ОПРЕДЕЛЕНИЕ КООРДИНАТЫ ТИГЛЯ            ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ОпределениеКоординатыТигля{
ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                      ФлагHур ,
                      ФП_Hур,
                      ЗД_Hур,
                      ФП_Xт,
                      ФП_ГлубинаРасплава,
                      К_КВП_Т,
                      К_КНП_Т,
                      НП_Lт_ОТ_КНП_ДО_КВП,
                      НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР;

 СОСТ Начало{
    ЕСЛИ (К_КВП_Т == ВКЛ)
                        КООРД_ТИГ = ТИГ_В_КВП;
    ИНАЧЕ ЕСЛИ (К_КНП_Т == ВКЛ)
                        КООРД_ТИГ = ТИГ_В_КНП;
     ИНАЧЕ ЕСЛИ ((ФП_Xт > (НП_Lт_ОТ_КНП_ДО_КВП + ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА)) ||
                 (ФП_Xт < - ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА))
                        КООРД_ТИГ = КООРД_ТИГ_НЕОПРЕДЕЛЕНА;
      ИНАЧЕ ЕСЛИ (ФлагHур ) {
             ЕСЛИ ((ФП_Hур - ЗД_Hур) < - МАКСИМАЛЬНОЕ_РАССОГЛАСОВАНИЕ_УРОВНЯ)
                        КООРД_ТИГ = ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР;
             ИНАЧЕ ЕСЛИ ((ФП_Hур - ЗД_Hур) > МАКСИМАЛЬНОЕ_РАССОГЛАСОВАНИЕ_УРОВНЯ)
                        КООРД_ТИГ = ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР;
                   ИНАЧЕ
                        КООРД_ТИГ = ТИГ_В_ПОЛОЖЕНИИ_ПЗУР;
      } ИНАЧЕ {
         ЕСЛИ ((ФП_Xт + ФП_ГлубинаРасплава) > (НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР + ЗД_Hур)) /* 05/30/03 02:08pm */
                        КООРД_ТИГ = ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР;
         ИНАЧЕ          КООРД_ТИГ = ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР;
      }
    В СОСТ Начало;
 }
}

/*================================================*/
/*=     КОНТРОЛЬ КООРДИНАТЫ ТИГЛЯ               ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ КонтрольКоординатыТигля{
 ИЗ ПРОЦ Инициализация
                        КООРД_ТИГ;
 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 ЦЕЛ ЛП_Сообщение ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!КООРД_ТИГ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != КООРД_ТИГ) {
         ЛП_Предыдущее = КООРД_ТИГ;
         РАЗБОР (ЛП_Предыдущее) {
              СЛУЧАЙ ТИГ_В_КВП:
/*                   ЗД_VтР_ПРИВОД = -0.00001;
                   ЗД_VтУ_ПРИВОД = -0.00001;
*/ /*добавлено*/
                   ЛП_Сообщение = ПК_ПИВ_ТИГ_В_КВП;
                   КОНЕЦ;
              СЛУЧАЙ ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР:
                   ЛП_Сообщение = ПК_ПИВ_ТИГ_ВЫШЕ_ПОЛОЖЕНИЯ_ПЗУР;
                   КОНЕЦ;
              СЛУЧАЙ ТИГ_В_ПОЛОЖЕНИИ_ПЗУР:
                   ЛП_Сообщение = ПК_ПИВ_ТИГ_В_ПОЛОЖЕНИИ_ПЗУР;
                   КОНЕЦ;
              СЛУЧАЙ ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР:
                   ЛП_Сообщение = ПК_ПИВ_ТИГ_НИЖЕ_ПОЛОЖЕНИЯ_ПЗУР;
                   КОНЕЦ;
              СЛУЧАЙ ТИГ_В_КНП:
/*                   ЗД_VтР_ПРИВОД = 0.00001;
                   ЗД_VтУ_ПРИВОД = 0.00001;
*/ /*добавлено*/
                   ЛП_Сообщение = ПК_ПИВ_ТИГ_В_КНП;
                   КОНЕЦ;
              УМОЛЧАНИЕ:
                   ЛП_Сообщение = ПК_ПИВ_КООРД_ТИГ_НЕОПРЕДЕЛЕНА;
                   КОНЕЦ;
         }
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgPIVCode(ЛП_Сообщение)) В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}


/*=====================================================*/
/*==                                                 ==*/
/*==          УПРАВЛЕНИЕ ПРИВОДОМ ЗАТРАВКИ           ==*/
/*=           643.АЭ1610.10000 Д2.31                 ==*/
/*==                                                 ==*/
/*=====================================================*/

/*#####################################################*/
/*       ДВИЖЕНИЕ РАБОЧЕГО ПРИВОДА ЗАТРАВКИ            */
/*#####################################################*/

/*================================================*/
/*= ПРИХОД В КООРДИНАТУ ПО РАБОЧЕМУ ПЕРЕМЕЩЕНИЮ ==*/
/*= 643.АЭ1610.10000 Д2.31                      ==*/
/*================================================*/
ПРОЦ ЗАТ_РК{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗР,
                       ФП_Xз,
                       ЗД_Xз,
                       ЗД_VзР,
                       ЗД_VзР_ПРИВОД,
                       ФП_VзР,
                       ФлагРегулятора_V_ЗР;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    ОШИБКА ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА;
    ОШИБКА ПРОЦ РЕГ_КЗ_УР;
    ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_РС;
    ЗД_VзР = ЗД_VзР_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xз - ФП_Xз;
 /* ЗД_VзР = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VзР = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзР, ЗД_VзР,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗР, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_VзР) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗР) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗР)) {
          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
          В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеОстанова{                                  /*  */
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ ОШИБКА) ОШИБКА;
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ СТОП) СТОП;
 }
}

/*=====================================================*/
/*= РЕГУЛЯТОР РАССТОЯНИЯ ОТ КОНЦА ЗАТРАВКИ ДО УРОВНЯ ==*/
/*= 643.АЭ1610.10000 Д2.31                           ==*/
/*=====================================================*/
ПРОЦ РЕГ_КЗ_УР{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗР,
                       ФП_Xз,
                       ЗД_Xз,
                       ЗД_VзР,
                       ЗД_VзР_ПРИВОД, /*  */
                       ФП_VзР,
                       ФлагL_КЗ_УР,
                       ФП_L_КЗ_УР,
   /*                    ЗД_L_КЗ_УР,*/
                       ФлагРегулятора_V_ЗР;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    ОШИБКА ПРОЦ ЗАТ_РК;
    СТОП;
 }

 /*   ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_РС;
/*    ЗД_VзР = ЗД_VзР_ПРИВОД; /* добавитьдобавлено */
/*    В СЛЕДУЮЩЕЕ;
/* }
/* СОСТ ЦиклРегулирования{
/*    ЛП_Рассогласование = ЗД_L_КЗ_УР - ФП_L_КЗ_УР;
/* /* ЗД_VзР = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
/*    ЗД_VзР = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзР, ЗД_VзР,
/*              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР,  /* Vmax  */
/*              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
/*              НП_РАБ_УСК_ЗР, /* Amax */
/*              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */
/*
/*    ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) ОШИБКА;
/*    ЕСЛИ ((fabs(ФП_VзР) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗР) &&
/*          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗР)) {
/*         ЗД_VзР = 0.0;
/*    }
/*    ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) ОШИБКА; /* здесь концевиков быть не должно! */
/* }                                                /* поэтому останов ЗР - это ошибка */
/* */
}

/*================================================*/
/*=     ДВИЖЕНИЕ ПО РАБОЧЕЙ  СКОРОСТИ           ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ЗАТ_РС{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       ЗД_VзР_ПРИВОД,
                       ЗД_VзР,
                       К_ОТКР_ЗАТВОР_В,
                       ФлагРегулятора_V_ЗР;

 СОСТ Начало{
     СТАРТ ПРОЦ ВЫК_ЗУ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ(!(ПРОЦ ВЫК_ЗУ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ЗУ В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ВключениеПривода{
     СТАРТ ПРОЦ ВКЛ_РЕГ_VзР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_VзР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_VзР В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }


 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_VзР - ЗД_VзР_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз) /* ОТР.УСКОРЕНИЯ */
         ЗД_VзР_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
    ИНАЧЕ
         ЕСЛИ ((ЗД_VзР - ЗД_VзР_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
              ЗД_VзР_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
         ИНАЧЕ ЗД_VзР_ПРИВОД = ЗД_VзР;

/*     ЕСЛИ ((ЗД_VзР < 0.0) && (!К_ОТКР_ЗАТВОР_В)) { /*добавить 06.05.22
/*          ЗД_VзР = 0.0;
/*          В СОСТ СообщениеПИВоЗВ;
/*      } ИНАЧЕ {
*/
     ЕСЛИ (ФлагРегулятора_V_ЗР != ВКЛ) {     /* ПРОВЕРКА УСЛОВИЙ ВЫКЛЮЧЕНИЯ*/
          ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) {    /* И УСТРАНЕНИЕ БАГА ПРИВОДА */
               СТОП;
          } ИНАЧЕ {
               ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КНП) {
                    СТОП;
               } ИНАЧЕ {
                    ЗД_VзР_ПРИВОД = ЗД_VзР;
                    В СЛЕДУЮЩЕЕ;
               }
          }
     }
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗР)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*  СОСТ СообщениеПИВоЗВ{ добавить 06.05.22
/*      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗАТРАВКИ_ЗВ_ЗАКРЫТ)) {
/*          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
/*          ОШИБКА;
/*      }
/*      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/*  }
*/
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*=====================================================*/
/*= Контроль движения затравки к завтвору вакуумному ==*/
/*=       643.АЭ1610.10000 Д2.31  добавить 06.05.22  ==*/
/*=====================================================*/
ПРОЦ КонтрольПеремещенияЗатравкиВнизПриЗакрытомЗВ{
 ИЗ ПРОЦ Инициализация ЗД_VзР, ЗД_VзУ, К_ОТКР_ЗАТВОР_В;
 СОСТ Начало{
    ЕСЛИ (((ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ) && 
           (ЗД_VзР < 0.0) && 
           (!К_ОТКР_ЗАТВОР_В)
          ) || (
           (ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ) && 
           (ЗД_VзУ < 0.0) && 
           (!К_ОТКР_ЗАТВОР_В)
          )
         ) {
          В СЛЕДУЮЩЕЕ; 
    } 
 }
 СОСТ СообщениеПИВоЗВ{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДВИЖЕНИЕ_ЗАТРАВКИ_К_ЗВ)) {
         В СЛЕДУЮЩЕЕ;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ Пауза{
    ТАЙМАУТ ДВАДЦАТЬ_СЕКУНД В СОСТ Начало;
 }
}

/*#####################################################*/
/*       ДВИЖЕНИЕ УСКОРЕННОГО ПРИВОДА ЗАТРАВКИ         */
/*#####################################################*/

/*================================================*/
/*= ПРИХОД В КООРДИНАТУ ПО УСКОРЕН. ПЕРЕМЕЩЕНИЮ ==*/
/*=       643.АЭ1610.10000 Д2.31                ==*/
/*================================================*/
ПРОЦ ЗАТ_УК{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗУ,
                       ФП_Xз,
                       ЗД_Xз,
                       ЗД_VзУ,
                       ЗД_VзУ_ПРИВОД, /*  */
                       ФП_VзУ,
                       ФлагРегулятора_V_ЗУ;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    СТОП ПРОЦ ЗАТ_УК_УС;
    СТОП ПРОЦ ВКЛ_РЕГ_ЗАТ_УК;
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_УС;
    ЗД_VзУ = ЗД_VзУ_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xз - ФП_Xз;
 /* ЗД_VзУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VзУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзУ, ЗД_VзУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_VзУ) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗУ) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗУ)) {
          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
          В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеОстанова{                             /*  */
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ ОШИБКА) ОШИБКА;
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ СТОП) СТОП;
 }
}

/*================================================*/
/*= РЕГУЛИРОВАНИЕ КООРДИНАТЫ ПО УСКОРЕННОМУ     ==*/
/*=       643.АЭ1610.10000 Д2.31                ==*/
/*================================================*/
ПРОЦ ВКЛ_РЕГ_ЗАТ_УК{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗУ,
                       ФП_Xз,
                       ЗД_Xз,
                       ЗД_VзУ,
                       ЗД_VзУ_ПРИВОД, /*  */
                       ФП_VзУ,
                       ФлагРегулятора_V_ЗУ;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    СТОП ПРОЦ ЗАТ_УК;
    СТОП ПРОЦ ЗАТ_УК_УС;
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_УС;
    ЗД_VзУ = ЗД_VзУ_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xз - ФП_Xз;
 /* ЗД_VзУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VзУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзУ, ЗД_VзУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ))
         ЕСЛИ (ПРОЦ ЗАТ_УС В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПопыткаЗапускаПриСъездеС_Концевика{
    ЛП_Рассогласование = ЗД_Xз - ФП_Xз;
 /* ЗД_VзУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VзУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзУ, ЗД_VзУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */
    СТАРТ ПРОЦ ЗАТ_УС;
    В СОСТ ЦиклРегулирования;
 }
}

/*================================================*/
/*=        ДВИЖЕНИЕ В ЗАДАННУЮ КООРДИНАТУ       ==*/
/*=        С ЗАДАННОЙ СКОРОСТЬЮ                 ==*/
/*=       643.АЭ1610.10000 Д2.31                ==*/
/*================================================*/
/*****************************************************************/
/* используем функцию расчета скорости при движении              */
/* в заданную координату                                         */
/* CalculateV_for_dX (Xcur,Vcur,Xtask,Vtask,Vmax,dVmax,Amax,Tx); */
/*****************************************************************/

ПРОЦ ЗАТ_УК_УС{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗУ,
                       ТК_VзДвижения_кРасплаву_Vпп,   /*ограничение по скорости */
                       ФП_Xз,
                       ЗД_Xз,
                       ЗД_VзУ,
                       ЗД_VзУ_ПРИВОД, /*  */
                       ФП_VзУ,
                       ФлагРегулятора_V_ЗУ;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    СТОП ПРОЦ ВКЛ_РЕГ_ЗАТ_УК;
    СТОП ПРОЦ ЗАТ_УК;
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_УС;
    ЗД_VзУ = ЗД_VзУ_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЛП_Рассогласование = ЗД_Xз - ФП_Xз;
 /* ЗД_VзУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VзУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VзУ, ЗД_VзУ,
              ТК_VзДвижения_кРасплаву_Vпп,               /* ограничение по скорости  (было Vmax) */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_VзУ) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗУ) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗУ)) {
          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
          В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеОстанова{                                  /*  */
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ ОШИБКА) ОШИБКА;
    ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ СТОП) СТОП;
 }
}

/*================================================*/
/*=       ДВИЖЕНИЕ ПО УСКОРЕННОЙ СКОРОСТИ       ==*/
/*=       643.АЭ1610.10000 Д2.31                ==*/
/*================================================*/
ПРОЦ ЗАТ_УС{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       ЗД_VзУ_ПРИВОД,
                       ЗД_VзУ,
                       К_ОТКР_ЗАТВОР_В,
                       ФлагРегулятора_V_ЗУ,
                       ФлагРегулятора_V_ЗВ;

 СОСТ Начало{
     СТАРТ ПРОЦ ВЫК_ЗР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ(!(ПРОЦ ВЫК_ЗР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ЗР В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ВключениеПривода{
     СТАРТ ПРОЦ ВКЛ_РЕГ_VзУ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_VзУ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_VзУ В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_VзУ - ЗД_VзУ_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз) /* ОТР.УСКОРЕНИЯ */
         ЗД_VзУ_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
    ИНАЧЕ
         ЕСЛИ ((ЗД_VзУ - ЗД_VзУ_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
              ЗД_VзУ_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
         ИНАЧЕ ЗД_VзУ_ПРИВОД = ЗД_VзУ;

     ЕСЛИ ((КООРД_ЗАТ <= ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ) &&
             (ФлагРегулятора_V_ЗВ) && (ЗД_VзУ_ПРИВОД > 0.0)) ЗД_VзУ_ПРИВОД = 0.0; /* если вращение - двигаться нельзя */

/*      ЕСЛИ ((ЗД_VзУ < 0.0) && (!К_ОТКР_ЗАТВОР_В)) { добавить 06.05.22
/*          ЗД_VзУ = 0.0;
/*          В СОСТ СообщениеПИВоЗВ;
/*      } ИНАЧЕ {
*/
     ЕСЛИ (ФлагРегулятора_V_ЗУ != ВКЛ) {     /* ПРОВЕРКА УСЛОВИЙ ВЫКЛЮЧЕНИЯ*/
          ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) {    /* И УСТРАНЕНИЕ БАГА ПРИВОДА */
               СТОП;
          } ИНАЧЕ {
               ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КНП) {
                    СТОП;
               } ИНАЧЕ {
                    ЗД_VзУ_ПРИВОД = ЗД_VзУ;
                    В СЛЕДУЮЩЕЕ;
               }
          }
     }
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗУ)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*  СОСТ СообщениеПИВоЗВ{    добавить 06.05.22
/*      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОСТАНОВ_ДВИЖЕНИЯ_ЗАТРАВКИ_ЗВ_ЗАКРЫТ)) {
/*          СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
/*          ОШИБКА;
/*      }
/*      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/*  }
*/
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}


/*#####################################################*/
/*       ДВИЖЕНИЕ ПРИВОДА ВРАЩЕНИЯ ЗАТРАВКИ            */
/*#####################################################*/

/*=====================================================*/
/*=== ?? ПРИХОД В КООРДИНАТУ ПО РАБОЧЕМУ ПЕРЕМЕЩЕНИЮ ==*/
/*=====================================================*/
/*================================================*/
/*=            ВРАЩЕНИЕ ЗАТРАВКИ УГОЛ           ==*/
/*=            643.АЭ1610.10000 Д2.31           ==*/
/*================================================*/
ПРОЦ ЗАТ_УГОЛ{
 ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                       НП_РАБ_УСК_ЗВ,
                       ФП_Wз_УГОЛ,
                       ЗД_Wз_УГОЛ,
                       ЗД_Wз,
                       ФП_Wз;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (КООРД_ЗАТ <= ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ) В СОСТ ЗапретВращения;
    ИНАЧЕ {
         ЕСЛИ (!(ПРОЦ ЗАТ_ВР В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_ВР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Wз_УГОЛ - ФП_Wз_УГОЛ;
 /* ЗД_Wз = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_Wз = CalculateV_for_dX(ЛП_Рассогласование, ФП_Wз, ЗД_Wз,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз * 2.0, /* dVmax */
              НП_РАБ_УСК_ЗВ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ЗАТ_ВР В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_Wз) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ЗВ) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ЗВ)) {
          СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
          СТОП;
    }
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ ЗапретВращения{
/*     СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; */
     СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеПИВоЗВ{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОСТАНОВ_ВРАЩЕНИЯ_ЗАТРАВКИ_ЗАПРЕТ_ВРАЩЕНИЯ)) ОШИБКА;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*================================================*/
/*=            ВРАЩЕНИЕ ЗАТРАВКИ                ==*/
/*=            643.АЭ1610.10000 Д2.31           ==*/
/*================================================*/
ПРОЦ ЗАТ_ВР{
 ИЗ ПРОЦ Инициализация  КООРД_ЗАТ,
                        ЗД_Wз,
                        ЗД_Wз_ПРИВОД,
                        ФлагРегулятора_V_ЗВ;

 СОСТ ВключениеПривода{
    ЕСЛИ (КООРД_ЗАТ <= ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ) В СОСТ ЗапретВращения;
    ИНАЧЕ {
         ОШИБКА ПРОЦ ВЫК_ЗАТ_ВР;
         СТАРТ ПРОЦ ВКЛ_РЕГ_Wз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_Wз  В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_Wз  В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }

 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_Wз - ЗД_Wз_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз) /* ОТР.УСКОРЕНИЯ */
         ЗД_Wз_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз;
    ИНАЧЕ
         ЕСЛИ ((ЗД_Wз - ЗД_Wз_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз)
              ЗД_Wз_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз;
         ИНАЧЕ ЗД_Wз_ПРИВОД = ЗД_Wз;

     ЕСЛИ (КООРД_ЗАТ <= ЗАТ_В_ОБЛАСТИ_ЗАПРЕТА_ВРАЩЕНИЯ) В СОСТ ЗапретВращения;

     ЕСЛИ (ФлагРегулятора_V_ЗВ != ВКЛ) {
         ЗД_Wз_ПРИВОД = ЗД_Wз;
         В СЛЕДУЮЩЕЕ;
     }
 }


/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ЗВ)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапретВращения{
/*     СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ; */
     СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеПИВоЗВ{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОСТАНОВ_ВРАЩЕНИЯ_ЗАТРАВКИ_ЗАПРЕТ_ВРАЩЕНИЯ)) ОШИБКА;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*-----------------------------------------------------*/
/*=  ПРОЦЕССЫ ВЫКЛЮЧЕНИЯ ЗАТРАВКИ ====================*/
/*-----------------------------------------------------*/

/*================================================*/
/*=            ВЫКЛЮЧЕНИЯ ЗР                    ==*/
/*=            643.АЭ1610.10000 Д2.31           ==*/
/*================================================*/
ПРОЦ ВЫК_ЗР{
 ИЗ ПРОЦ Инициализация
                        ЗД_VзР_ПРИВОД,
                        ФлагРегулятора_V_ЗР;

 СОСТ Начало{
     ОШИБКА ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА;
     ОШИБКА ПРОЦ РЕГ_КЗ_УР;
     ОШИБКА ПРОЦ ЗАТ_РС;
     ОШИБКА ПРОЦ ВКЛ_РЕГ_VзР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_VзР_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
         ЗД_VзР_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
    ИНАЧЕ
         ЕСЛИ (ЗД_VзР_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
              ЗД_VзР_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
         ИНАЧЕ {
              ЗД_VзР_ПРИВОД = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
 }
 СОСТ ПередачаКомандыНаОстанов{
     ЕСЛИ (SendMsgZRCode(ПК_ЗР_ОСТАНОВ_ДВИЖЕНИЯ))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольОстанова{
     ЕСЛИ (ФлагРегулятора_V_ЗР == ВЫКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*================================================*/
/*=            ВЫКЛЮЧЕНИЯ ЗУ                    ==*/
/*=            643.АЭ1610.10000 Д2.31           ==*/
/*================================================*/
ПРОЦ ВЫК_ЗУ{
 ИЗ ПРОЦ Инициализация
                        ЗД_VзУ_ПРИВОД,
                        ФлагРегулятора_V_ЗУ;

 СОСТ Начало{
    ОШИБКА ПРОЦ ЗАТ_УС;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_ЗАТ_УК;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_VзУ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_VзУ_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
         ЗД_VзУ_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
    ИНАЧЕ
         ЕСЛИ (ЗД_VзУ_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз)
              ЗД_VзУ_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vз;
         ИНАЧЕ {
              ЗД_VзУ_ПРИВОД = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
 }
 СОСТ ПередачаКомандыНаОстанов{
     ЕСЛИ (SendMsgZUCode(ПК_ЗУ_ОСТАНОВ_ДВИЖЕНИЯ))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольОстанова{
     ЕСЛИ (ФлагРегулятора_V_ЗУ == ВЫКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ ВЫК_ЗУ   */


/*================================================*/
/*=     ВЫКЛЮЧЕНИЯ ПЕРЕМЕЩЕНИЯ ЗАТРАВКИ         ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ВЫК_ЗАТРАВКУ{
 СОСТ Начало{
    СТАРТ ПРОЦ ВЫК_ЗР;
    СТАРТ ПРОЦ ВЫК_ЗУ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ((!(ПРОЦ ВЫК_ЗР В СОСТ АКТИВНОЕ)) && (!(ПРОЦ ВЫК_ЗУ В СОСТ АКТИВНОЕ)))   {
       ЕСЛИ ((ПРОЦ ВЫК_ЗР В СОСТ СТОП) && (ПРОЦ ВЫК_ЗУ В СОСТ СТОП))  СТОП;
       ИНАЧЕ ОШИБКА;
    }
 }
}  /* конец ПРОЦ ВЫК_З   */

/*================================================*/
/*=     РЕГУЛЯТОР ВЫКЛЮЧЕНИЯ ЗАТРАВКИ           ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ВЫК_ЗАТ_ВР{
 ИЗ ПРОЦ Инициализация
                        ЗД_Wз_ПРИВОД,
                        ФлагРегулятора_V_ЗВ;

 СОСТ Начало{
    ОШИБКА ПРОЦ ЗАТ_ВР;
    ОШИБКА ПРОЦ ЗАТ_УГОЛ;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_Wз;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_Wз_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз)
         ЗД_Wз_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз;
    ИНАЧЕ {
         ЕСЛИ (ЗД_Wз_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз)
              ЗД_Wз_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Wз;
         ИНАЧЕ {
              ЗД_Wз_ПРИВОД = 0.0;
              В СОСТ ПередачаКомандыНаОстанов;
         }
    }
 }
 СОСТ ПередачаКомандыНаОстанов{
    ЕСЛИ (SendMsgZVCode(ПК_ЗВ_ОСТАНОВ_ДВИЖЕНИЯ)) В СОСТ КонтрольОстанова;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

 СОСТ КонтрольОстанова{
    ЕСЛИ (ФлагРегулятора_V_ЗВ == ВЫКЛ) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ)) {
        DisableChannel_ZV();
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязиСПриводом {
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
        DisableChannel_ZV();
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*=====================================================*/
/*==                                                 ==*/
/*==             УПРАВЛЕНИЕ ПРИВОДОМ ТИГЛЯ           ==*/
/*==                                                 ==*/
/*=====================================================*/
/*#####################################################*/
/*       ДВИЖЕНИЕ РАБОЧЕГО ПРИВОДА ТИГЛЯ               */
/*#####################################################*/
/*================================================*/
/*= ПРИХОД В КООРДИНАТУ ПО РАБОЧЕМУ ПЕРЕМЕЩЕНИЮ ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ТИГ_РК{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       НП_РАБ_УСК_ТР,
                       ФП_Xт,
                       ЗД_Xт,
                       ЗД_VтР,
                       ЗД_VтР_ПРИВОД, /*  */
                       ФП_VтР,
                       ФлагРегулятора_V_ТР;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ТИГ_РС;
    ЗД_VтР = ЗД_VтР_ПРИВОД; /*  */

    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xт - ФП_Xт;
 /* ЗД_VтР = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VтР = CalculateV_for_dX(ЛП_Рассогласование, ФП_VтР, ЗД_VтР,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт * 2.0, /* dVmax */
              НП_РАБ_УСК_ТР, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ТИГ_РС В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_VтР) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТР) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТР)) {
          СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
          В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеОстанова{                             /*  */
    ЕСЛИ (ПРОЦ ВЫК_ТИГЕЛЬ В СОСТ ОШИБКА) ОШИБКА;
    ЕСЛИ (ПРОЦ ВЫК_ТИГЕЛЬ В СОСТ СТОП) СТОП;
 }
}
/*================================================*/
/*=     ДВИЖЕНИЕ ПО РАБОЧЕЙ  СКОРОСТИ           ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ТИГ_РС{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       ЗД_VтР_ПРИВОД,
                       ЗД_VтР,
                       ФлагРегулятора_V_ТР;

 СОСТ Начало{
     СТАРТ ПРОЦ ВЫК_ТУ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ(!(ПРОЦ ВЫК_ТУ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ТУ В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ВключениеПривода{
     СТАРТ ПРОЦ ВКЛ_РЕГ_VтР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_VтР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_VтР В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_VтР - ЗД_VтР_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт) /* ОТР.УСКОРЕНИЯ */
         ЗД_VтР_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
    ИНАЧЕ {
         ЕСЛИ ((ЗД_VтР - ЗД_VтР_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
              ЗД_VтР_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
         ИНАЧЕ ЗД_VтР_ПРИВОД = ЗД_VтР;
    }

    ЕСЛИ (ФлагРегулятора_V_ТР != ВКЛ) {     /* ПРОВЕРКА УСЛОВИЙ ВЫКЛЮЧЕНИЯ*/
         ЕСЛИ (КООРД_ТИГ == ТИГ_В_КВП) {    /* И УСТРАНЕНИЕ БАГА ПРИВОДА */
/*              ЗД_VтР_ПРИВОД = -0.00001; */ /*добавлено*/
              СТОП;
         } ИНАЧЕ {
              ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) {
/*                   ЗД_VтР_ПРИВОД = 0.00001; */ /*добавлено*/
                   СТОП;
              } ИНАЧЕ {
                   ЗД_VтР_ПРИВОД = ЗД_VтР;
                   В СЛЕДУЮЩЕЕ;
              }
         }
    }
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТР)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*################################################*/
/*       ДВИЖЕНИЕ УСКОРЕННОГО ПРИВОДА ТИГЛЯ       */
/*################################################*/

/*================================================*/
/*=     ПРИХОД В КООРДИНАТУ ПО УСКОРЕННОМУ      ==*/
/*=     ПЕРЕМЕЩЕНИЮ                             ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ТИГ_УК{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       НП_РАБ_УСК_ТУ,
                       ФП_Xт,
                       ЗД_Xт,
                       ЗД_VтУ,
                       ЗД_VтУ_ПРИВОД, /*  */
                       ФП_VтУ,
                       ФлагРегулятора_V_ТУ;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    СТОП ПРОЦ ВКЛ_РЕГ_ТИГ_УК;
    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ТИГ_УС;
    ЗД_VтУ = ЗД_VтУ_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xт - ФП_Xт;
 /* ЗД_VтУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VтУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VтУ, ЗД_VтУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт * 2.0, /* dVmax */
              НП_РАБ_УСК_ТУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_VтУ) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТУ) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТУ)) {
          СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
          В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеОстанова{                             /*  */
    ЕСЛИ (ПРОЦ ВЫК_ТИГЕЛЬ В СОСТ ОШИБКА) ОШИБКА;
    ЕСЛИ (ПРОЦ ВЫК_ТИГЕЛЬ В СОСТ СТОП) СТОП;
 }
}


/*================================================*/
/*= РЕГУЛИРОВАНИЕ КООРДИНАТЫ ПО УСКОРЕННОМУ     ==*/
/*=       643.АЭ1610.10000 Д2.31                ==*/
/*================================================*/
ПРОЦ ВКЛ_РЕГ_ТИГ_УК{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       НП_РАБ_УСК_ТУ,
                       ФП_Xт,
                       ЗД_Xт,
                       ЗД_VтУ,
                       ЗД_VтУ_ПРИВОД, /*  */
                       ФП_VтУ,
                       ФлагРегулятора_V_ТУ;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    СТОП ПРОЦ ТИГ_УК;
    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ТИГ_УС;
    ЗД_VтУ = ЗД_VтУ_ПРИВОД; /*  */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Xт - ФП_Xт;
 /* ЗД_VтУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VтУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VтУ, ЗД_VтУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт * 2.0, /* dVmax */
              НП_РАБ_УСК_ТУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ))
         ЕСЛИ ((ПРОЦ ТИГ_УС В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПопыткаЗапускаПриСъездеС_Концевика{
    ЛП_Рассогласование = ЗД_Xт - ФП_Xт;
 /* ЗД_VтУ = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_VтУ = CalculateV_for_dX(ЛП_Рассогласование, ФП_VтУ, ЗД_VтУ,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт * 2.0, /* dVmax */
              НП_РАБ_УСК_ТУ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */
    СТАРТ ПРОЦ ТИГ_УС;
    В СОСТ ЦиклРегулирования;
 }
}

/*================================================*/
/*=     ДВИЖЕНИЕ ПО УСКОРЕННОЙ СКОРОСТИ         ==*/
/*=     643.АЭ1610.10000 Д2.31                  ==*/
/*================================================*/
ПРОЦ ТИГ_УС{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       ЗД_VтУ_ПРИВОД,
                       ЗД_VтУ,
                       ФлагРегулятора_V_ТУ;

 СОСТ Начало{
     СТАРТ ПРОЦ ВЫК_ТР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ(!(ПРОЦ ВЫК_ТР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ТР В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ВключениеПривода{
     СТАРТ ПРОЦ ВКЛ_РЕГ_VтУ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_VтУ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_VтУ В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_VтУ - ЗД_VтУ_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт) /* ОТР.УСКОРЕНИЯ */
         ЗД_VтУ_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
    ИНАЧЕ {
         ЕСЛИ ((ЗД_VтУ - ЗД_VтУ_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
              ЗД_VтУ_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
         ИНАЧЕ ЗД_VтУ_ПРИВОД = ЗД_VтУ;
    }

    ЕСЛИ (ФлагРегулятора_V_ТУ != ВКЛ) {     /* ПРОВЕРКА УСЛОВИЙ ВЫКЛЮЧЕНИЯ*/
         ЕСЛИ (КООРД_ТИГ == ТИГ_В_КВП) {    /* И УСТРАНЕНИЕ БАГА ПРИВОДА */
/*              ЗД_VтУ_ПРИВОД = -0.00001; */ /*добавлено*/
              СТОП;
         } ИНАЧЕ {
              ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) {
/*                   ЗД_VтУ_ПРИВОД = 0.00001; */ /*добавлено*/
                   СТОП;
              } ИНАЧЕ {
                   ЗД_VтУ_ПРИВОД = ЗД_VтУ;
                   В СЛЕДУЮЩЕЕ;
              }
         }
    }
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТУ)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*################################################*/
/*       ДВИЖЕНИЕ ПРИВОДА ВРАЩЕНИЯ ТИГЛЯ          */
/*################################################*/


/*=====================================================*/
/*=====  ПРИХОД В КООРДИНАТУ ПО РАБОЧЕМУ ПЕРЕМЕЩЕНИЮ ==*/
/*=====================================================*/
ПРОЦ ТИГ_УГОЛ{
 ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                       НП_РАБ_УСК_ТВ,
                       ФП_Wт_УГОЛ,
                       ЗД_Wт_УГОЛ,
                       ЗД_Wт,
                       ФП_Wт;

 ПЛАВ ЛП_Рассогласование ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (!(ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ТИГ_ВР;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЦиклРегулирования{
    ЛП_Рассогласование = ЗД_Wт_УГОЛ - ФП_Wт_УГОЛ;
 /* ЗД_Wт = CalculateV_for_dX(dXcur,               Vcur,   Vtask, Vmax, dVmax, Amax, Tx); */
    ЗД_Wт = CalculateV_for_dX(ЛП_Рассогласование, ФП_Wт, ЗД_Wт,
              МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт,  /* Vmax  */
              МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт * 2.0, /* dVmax */
              НП_РАБ_УСК_ТВ, /* Amax */
              ВРЕМЯ_ЗАДЕРЖКИ_НА_СВЯЗЬ); /* Tx    */

    ЕСЛИ (!(ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ)) ОШИБКА;
    ЕСЛИ ((fabs(ФП_Wт) < КОНТРОЛЬНАЯ_СКОРОСТЬ_ОСТАНОВА_ТВ) &&
          (fabs(ЛП_Рассогласование) < ПОГРЕШНОСТЬ_ПОЗИЦИОНИРОВАНИЯ_ТВ)) {
          СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
          СТОП;
    }
 }
}

/*================================================*/
/*=           ВРАЩЕНИЕ ТИГЛЯ                    ==*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ТИГ_ВР{
 ИЗ ПРОЦ Инициализация  КООРД_ТИГ,
                        ЗД_Wт_ПРИВОД,
                        ЗД_Wт,
                        ФлагРегулятора_V_ТВ;

 СОСТ ВключениеПривода{
    ОШИБКА ПРОЦ ВЫК_ТИГ_ВР;
    СТАРТ ПРОЦ ВКЛ_РЕГ_Wт;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВключенияПривода{
    ЕСЛИ(!(ПРОЦ ВКЛ_РЕГ_Wт  В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_Wт  В СОСТ СТОП) {
              В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ КонтрольДвижения{
    ЕСЛИ ((ЗД_Wт - ЗД_Wт_ПРИВОД) < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт) /* ОТР.УСКОРЕНИЯ */
         ЗД_Wт_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт;
    ИНАЧЕ
         ЕСЛИ ((ЗД_Wт - ЗД_Wт_ПРИВОД) > МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт)
              ЗД_Wт_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт;
         ИНАЧЕ ЗД_Wт_ПРИВОД = ЗД_Wт;

     ЕСЛИ (ФлагРегулятора_V_ТВ != ВКЛ) {
         ЗД_Wт_ПРИВОД = ЗД_Wт;
         В СЛЕДУЮЩЕЕ;
     }
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ СообщениеПИВоНеожиданномОстанове{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_ПРИВОДА_ТВ)) {
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}


/*-----------------------------------------------------*/
/*=  ПРОЦЕССЫ ВЫКЛЮЧЕНИЯ ТИГЛЯ   =====================*/
/*-----------------------------------------------------*/

/*================================================*/
/*============            ВЫКЛЮЧЕНИЯ ТР      =====*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ВЫК_ТР{
 ИЗ ПРОЦ Инициализация
                        ЗД_VтР_ПРИВОД,
                        ФлагРегулятора_V_ТР;
 СОСТ Начало{
     ОШИБКА ПРОЦ ТИГ_РС;
     ОШИБКА ПРОЦ ВКЛ_РЕГ_VтР;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_VтР_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
         ЗД_VтР_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
    ИНАЧЕ
         ЕСЛИ (ЗД_VтР_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
              ЗД_VтР_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
         ИНАЧЕ {
              ЗД_VтР_ПРИВОД = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
 }
 СОСТ ПередачаКомандыНаОстанов{
     ЕСЛИ (SendMsgTRCode(ПК_ТР_ОСТАНОВ_ДВИЖЕНИЯ))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольОстанова{
     ЕСЛИ (ФлагРегулятора_V_ТР == ВЫКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*================================================*/
/*============            ВЫКЛЮЧЕНИЯ ТУ      =====*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ВЫК_ТУ{
 ИЗ ПРОЦ Инициализация
                        ЗД_VтУ_ПРИВОД,
                        ФлагРегулятора_V_ТУ;

 СОСТ Начало{
     ОШИБКА ПРОЦ ТИГ_УС;
     ОШИБКА ПРОЦ ВКЛ_РЕГ_VтУ;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_VтУ_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
         ЗД_VтУ_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
    ИНАЧЕ
         ЕСЛИ (ЗД_VтУ_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт)
              ЗД_VтУ_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Vт;
         ИНАЧЕ {
              ЗД_VтУ_ПРИВОД = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
 }
 СОСТ ПередачаКомандыНаОстанов{
    ЕСЛИ (SendMsgTUCode(ПК_ТУ_ОСТАНОВ_ДВИЖЕНИЯ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольОстанова{
     ЕСЛИ (ФлагРегулятора_V_ТУ == ВЫКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ ВЫК_ТУ   */


/*================================================*/
/*============ ВЫКЛЮЧЕНИЕ ПЕРЕМЕЩЕНИЯ ТИГЛЯ  =====*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ВЫК_ТИГЕЛЬ{
 СОСТ Начало{
    СТАРТ ПРОЦ ВЫК_ТР;
    СТАРТ ПРОЦ ВЫК_ТУ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключения{
    ЕСЛИ((!(ПРОЦ ВЫК_ТР В СОСТ АКТИВНОЕ)) && (!(ПРОЦ ВЫК_ТУ В СОСТ АКТИВНОЕ)))   {
       ЕСЛИ ((ПРОЦ ВЫК_ТР В СОСТ СТОП) && (ПРОЦ ВЫК_ТУ В СОСТ СТОП))  СТОП;
       ИНАЧЕ ОШИБКА;
    }
 }
}  /* конец ПРОЦ ВЫК_Т   */

/*================================================*/
/*============  РЕГУЛЯТОР ВЫКЛЮЧЕНИЯ ТИГЛЯ    ====*/
/*=           643.АЭ1610.10000 Д2.31            ==*/
/*================================================*/
ПРОЦ ВЫК_ТИГ_ВР{
 ИЗ ПРОЦ Инициализация
                        ЗД_Wт_ПРИВОД,
                        ФлагРегулятора_V_ТВ;

 СОСТ Начало{
    ОШИБКА ПРОЦ ТИГ_ВР;
    ОШИБКА ПРОЦ ТИГ_УГОЛ;
    ОШИБКА ПРОЦ ВКЛ_РЕГ_Wт;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОтработкаОстанова {
    ЕСЛИ (ЗД_Wт_ПРИВОД < -МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт)
         ЗД_Wт_ПРИВОД += МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт;
    ИНАЧЕ
         ЕСЛИ (ЗД_Wт_ПРИВОД > МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт)
              ЗД_Wт_ПРИВОД -= МАКСИМАЛЬНАЯ_ПОПРАВКА_Wт;
         ИНАЧЕ {
              ЗД_Wт_ПРИВОД = 0.0;
              В СЛЕДУЮЩЕЕ;
         }
 }

 СОСТ ПередачаКомандыНаОстанов{
    ЕСЛИ (SendMsgTVCode(ПК_ТВ_ОСТАНОВ_ДВИЖЕНИЯ)) В СОСТ КонтрольОстанова;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }

 СОСТ КонтрольОстанова{
    ЕСЛИ (ФлагРегулятора_V_ТВ == ВЫКЛ) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ)) {
        DisableChannel_TV();
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязиСПриводом {
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
        DisableChannel_TV();
        ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}


/*=====================================================*/
/*=====================================================*/
/*=====================================================*/
/*=          НИЗКОУРОВНЕВЫЕ РЕГУЛЯТОРЫ ЛИТВИНЦЕВА     =*/
/*=          643.АЭ1610.10000 Д2.31~+                 =*/
/*=====================================================*/
/*=====================================================*/
/*=====================================================*/

/*=====================================================*/
/*=             РЕГУЛЯТОР VзР                         =*/
/*=          643.АЭ1610.10000 Д2.31                   =*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_VзР{
 ИЗ ПРОЦ Инициализация   ЗД_VзР_ПРИВОД, ЗД_VзР,
                         ФлагРегулятора_V_ЗР;

 СОСТ Начало{
     ЕСЛИ (fabs(ЗД_VзР_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VзР >= 0.0) ЗД_VзР_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VзР_ПРИВОД = -0.00001; 
     }
     ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_VзР_ПРИВОД)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ЗР == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) {
         DisableChannel_ZR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     ОШИБКА;
 }

}  /* конец ПРОЦ РЕГ_VзР   */

/*=====================================================*/
/*============  РЕГУЛЯТОР ВКЛЮЧЕНИЯ VзУ      =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_VзУ{
 ИЗ ПРОЦ Инициализация   ЗД_VзУ_ПРИВОД, ЗД_VзУ,
                         ФлагРегулятора_V_ЗУ;

 СОСТ Начало{
     ЕСЛИ (fabs(ЗД_VзУ_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VзУ >= 0.0) ЗД_VзУ_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VзУ_ПРИВОД = -0.00001; 
     }
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_VзУ_ПРИВОД))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ЗУ == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) {
         DisableChannel_ZU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ РЕГ_VзУ   */

/*=====================================================*/
/*============  РЕГУЛЯТОР Wз                 =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_Wз{
 ИЗ ПРОЦ Инициализация   ЗД_Wз_ПРИВОД,
                         ФлагРегулятора_V_ЗВ;
 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_Wз_ПРИВОД)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ЗВ == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) {
         DisableChannel_ZV();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }

}  /* конец ПРОЦ РЕГ_Wз   */

/*=====================================================*/
/*============  РЕГУЛЯТОР VтР                 =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_VтР{
 ИЗ ПРОЦ Инициализация   ЗД_VтР_ПРИВОД, ЗД_VтР,
                         ФлагРегулятора_V_ТР;

 СОСТ Начало{
     ЕСЛИ (fabs(ЗД_VтР_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VтР >= 0.0) ЗД_VтР_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VтР_ПРИВОД = -0.00001; 
     }
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_VтР_ПРИВОД)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ТР == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НарушениеСвязи {
     ОШИБКА;
 }

}  /* конец ПРОЦ РЕГ_VтР   */


/*=====================================================*/
/*=====  РЕГУЛЯТОР ХтР                        =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_XтР{
 ИЗ ПРОЦ Инициализация   ЗД_Xт,
                         ФлагРегулятора_X_ТР;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_НАЧАЛО_ДВИЖЕНИЯ_X, ЗД_Xт))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_X_ТР == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) {
         DisableChannel_TR();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ РЕГ_XтР   */


/*=====================================================*/
/*============  РЕГУЛЯТОР ВКЛЮЧЕНИЯ VтУ      =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_VтУ{
 ИЗ ПРОЦ Инициализация   ЗД_VтУ_ПРИВОД, ЗД_VтУ,
                         ФлагРегулятора_V_ТУ;

 СОСТ Начало{
     ЕСЛИ (fabs(ЗД_VтУ_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VтУ >= 0.0) ЗД_VтУ_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VтУ_ПРИВОД = -0.00001; 
     }
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_VтУ_ПРИВОД))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ТУ == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ РЕГ_VтУ   */


/*=====================================================*/
/*=====  РЕГУЛЯТОР ВКЛЮЧЕНИЯ ХтУ              =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_XтУ{
 ИЗ ПРОЦ Инициализация   ЗД_Xт,
                         ФлагРегулятора_X_ТУ;
 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_НАЧАЛО_ДВИЖЕНИЯ_X, ЗД_Xт))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_X_ТУ == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ В СОСТ НарушениеРаботыСПриводом;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) {
         DisableChannel_TU();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}  /* конец ПРОЦ РЕГ_XтУ   */


/*=====================================================*/
/*============  РЕГУЛЯТОР Wт                 =========*/
/*=====================================================*/
ПРОЦ ВКЛ_РЕГ_Wт{
 ИЗ ПРОЦ Инициализация   ЗД_Wт_ПРИВОД,
                         ФлагРегулятора_V_ТВ;
 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_НАЧАЛО_ДВИЖЕНИЯ_V, ЗД_Wт_ПРИВОД)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ КонтрольВключенияПривода{
     ЕСЛИ (ФлагРегулятора_V_ТВ == ВКЛ) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ В СОСТ НарушениеРаботыСПриводом;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеРаботыСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_ОТРАБОТКУ_КОМАНДЫ_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
СОСТ НарушениеСвязиСПриводом {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) {
         DisableChannel_TV();
         ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }

}  /* конец ПРОЦ РЕГ_Wт   */



/*====================================================*/
/*==                                                ==*/
/*==       УПРАВЛЕНИЕ ПЕРЕМЕЩЕНИЕМ ЗАТРАВКИ         ==*/
/*==                                                ==*/
/*====================================================*/
/*====================================================*/
/*==    ТАРИРОВКА ЗАТРАВКИ ПО ДАТЧИКУ ПРИВЯЗКИ      ==*/
/*==                  Д2.31                         ==*/
/*==                  03/27/03 06:14pm              ==*/
/*====================================================*/
ПРОЦ ЗАТ_ДП{
ИЗ ПРОЦ Инициализация
                      ФП_Ммонокристалла,
                      ФлагLмонокристалла,
                      ФП_Lмонокристалла,
                      ЗД_VзР,
                      НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1,
                      НП_Lз_ОТ_КВП_ДО_ДП_Lппз,
                      НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                      КООРД_ЗАТ,
                      У_ЛАЗЕРА_ДП,
                      К_ДП,
                      ФП_Xз,
                      ЗД_Xз,
                      ЗД_VзУ;
ПЛАВ ЛП_ТаймАут ЛОКАЛ;
 СОСТ Начало {     /* Останов конкурирующих процессов  */
    ЕСЛИ (ПРОЦ ЗАТ_КВП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_КВП;
    ЕСЛИ (ПРОЦ ЗАТ_КНП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_КНП;
    В СОСТ АнализПоложенияЗатравки;
 }

 СОСТ АнализПоложенияЗатравки {
    ЕСЛИ (КООРД_ЗАТ != КООРД_ЗАТ_НЕОПРЕДЕЛЕНА) {          /* коорд-та затравки определена */
         ЕСЛИ (ФП_Ммонокристалла > МАКСИМАЛЬНАЯ_МАССА_ЗАТРАВКИ_ДП) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_БОЛЬШАЯ_МАССА_ЗАТР_ТАРИРОВКА_ПО_ДП_НЕДОПУСТИМА))
                   ОШИБКА;
         } ИНАЧЕ {
              ЗД_Xз = - НП_Lз_ОТ_КВП_ДО_ДП_Lппз - 5.0;   /* 5 мм - для верности перекрытия луча */
              СТАРТ ПРОЦ ЗАТ_УК;
              В СЛЕДУЮЩЕЕ;
         }
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ЗАТР_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ))
              ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеГрубогоПрихода{
    ЕСЛИ (!(ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАТ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВключениеЛазераДатчикаПривязки{
    У_ЛАЗЕРА_ДП = ВКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПерекрытияЛучаДП{
    ЕСЛИ (К_ДП != ВКЛ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Сообщение_ДП_НеСработалПриПерекрытииЗатравкодержателем;
 }
 СОСТ ВычислениеЗаданияVз{
    ЗД_VзУ = ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ;    /* идем вверх */
    ЛП_ТаймАут = (2.0 * ОДНА_МИНУТА * МАКСИМАЛЬНЫЙ_ВЫЛЕТ_ЗАТРАВКИ)/ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ;
    СТАРТ ПРОЦ ЗАТ_УС;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеСрабатыванияДП_НаПоявлениеЛуча {
    ЕСЛИ (К_ДП == ВКЛ) { /* сработал ДП - идем вниз по РС */
         ЗД_VзР =  - ТОЧНАЯ_СКОРОСТЬ_ЗАТРАВКИ; /* идем вниз */
         ЛП_ТаймАут = (2.0 * ОДНА_СЕКУНДА * ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ)/ТОЧНАЯ_СКОРОСТЬ_ЗАТРАВКИ;
         СТАРТ ПРОЦ ЗАТ_РС;
         В СЛЕДУЮЩЕЕ;
    }
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ))
         В СОСТ СообщениеОНеожиданномОстановеЗатравки;
    ТАЙМАУТ ЛП_ТаймАут В СОСТ ОтказДП_ПриПодъемеЗатравки;
 }
 СОСТ ОжиданиеСрабатыванияДП_ПоРабочейСкорости {
    ЕСЛИ (К_ДП != ВКЛ) {
         У_ЛАЗЕРА_ДП = ВЫКЛ;
         СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
         В СЛЕДУЮЩЕЕ;
    }
    ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ))
         В СОСТ СообщениеОНеожиданномОстановеЗатравки;
    ТАЙМАУТ ЛП_ТаймАут В СОСТ ОтказДП_ПриОпусканииЗатравки;
 }

 СОСТ КонтрольОстановаЗатравки{
    ЕСЛИ (!(ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ЗАТРАВКУ В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВычислениеОпределяемыхПараметров {
    ФлагLмонокристалла = ВКЛ;
    ФП_Lмонокристалла  = НП_Lз_ОТ_КВП_ДО_ДП_Lппз + ФП_Xз;
    В СОСТ ПередачаСообКоордЗатрОттарирована;
 }

 СОСТ ПередачаСообКоордЗатрОттарирована{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КООРДИНАТА_ЗАТРАВКИ_ПО_ДП_ОТТАРИРОВАНА))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаКоординатыДП{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ДЛИНА_ЗАТРАВОЧНОГО_МОНОКРИСТАЛЛА, ФП_Lмонокристалла))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Сообщение_ДП_НеСработалПриПерекрытииЗатравкодержателем{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ПЕРЕКРЫТИИ_ЗАТРАВКОДЕРЖАТЕЛЕМ))
         В СОСТ АварийноеВыключениеДП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОтказДП_ПриПодъемеЗатравки{
    СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Сообщение_ДП_НеСработалПриПодъемеЗатравки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ПОДЪЕМЕ_ЗАТРАВКИ))
         В СОСТ АварийноеВыключениеДП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщениеОНеожиданномОстановеЗатравки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕОЖИДАННЫЙ_ОСТАНОВ_ЗАТРАВКИ_В_РЕЖИМЕ_ПРИВЯЗКИ))
         В СОСТ АварийноеВыключениеДП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОтказДП_ПриОпусканииЗатравки{
    СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Сообщение_ДП_НеСработалПриОпусканииЗатравки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДП_НЕ_СРАБОТАЛ_ПРИ_ОПУСКАНИИ_ЗАТРАВКИ))
         В СОСТ АварийноеВыключениеДП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ АварийноеВыключениеДП {
    У_ЛАЗЕРА_ДП = ВЫКЛ;
    ОШИБКА;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }

}  /* конец ПРОЦ ЗАТ_ДП   */


/*=====================================================*/
/*==   РАСЧЕТ РАССТОЯНИЯ ОТ ЗАТРАВКИ ДО РАСПЛАВА     ==*/
/*==                  Д2.31                          ==*/
/*=====================================================*/
/* запускается в процессе ИНИЦИАЦИЯ ЦУКа   */
ПРОЦ РасчетРасстоянияЗатравка_Расплав{
ИЗ ПРОЦ Инициализация КООРД_ЗАТ,
                      КООРД_ТИГ,
                      К_ДАТЧИКА_КАСАНИЯ,
                      ФП_Xз,
                      ФлагLмонокристалла,
                      ФП_Lмонокристалла,
                      ФлагHур_ДУ,
                      ФП_Hур,
                      ЗД_Hур,
                      ФлагL_КЗ_УР,
                      ФП_L_КЗ_УР,
                      НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                      НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1;

 СОСТ Начало {
    ЕСЛИ ((КООРД_ЗАТ == КООРД_ЗАТ_НЕОПРЕДЕЛЕНА) ||
         (КООРД_ТИГ == КООРД_ТИГ_НЕОПРЕДЕЛЕНА)) {
              ФлагLмонокристалла = ВЫКЛ;
              ФлагL_КЗ_УР = ВЫКЛ;
    } ИНАЧЕ {
         ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ == ВКЛ) && (fabs(ФП_Xз) > 360.0)) {
              ФлагL_КЗ_УР = ВКЛ;
              ФП_L_КЗ_УР = 0.0;
              ЕСЛИ (ФлагHур_ДУ == ВКЛ) {

                   ФлагLмонокристалла = ВКЛ;
                   ФП_Lмонокристалла = НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +
                                       НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 +
                                       ФП_Xз -
                                       ЗД_Hур; /* добавлено - было ФП_Нур */
              } ИНАЧЕ {
                   ФлагLмонокристалла = ВКЛ;
                   ФП_Lмонокристалла = НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +
                                       НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 +
                                       ФП_Xз -
                                       ЗД_Hур;
              }
         } ИНАЧЕ {
              ЕСЛИ (ФлагHур_ДУ) {
                   ФлагL_КЗ_УР = ВКЛ;
                   ФП_L_КЗ_УР = НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +
                                НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 +
                                ФП_Xз -
                                ФП_Lмонокристалла -
                                ЗД_Hур; /* добавлено - было ФП_Нур */
              } ИНАЧЕ {
                   ФлагL_КЗ_УР = ВЫКЛ;
                   ФП_L_КЗ_УР = НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +
                                НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 +
                                ФП_Xз -
                                ФП_Lмонокристалла -
                                ЗД_Hур;
              }
         }
    }
    В СОСТ Начало;
 }
}  /* конец ПРОЦ РасчетРасстоянияЗатравка_Расплав   */

/*=====================================================*/
/*==             ЗАТРАВКУ В КВП                      ==*/
/*==                  Д2.31                          ==*/
/*=====================================================*/
ПРОЦ ЗАТ_КВП{
ИЗ ПРОЦ Инициализация 
                      ФП_Xз,
                      КООРД_ЗАТ,
                      ЗД_Xз,
                      ЗД_VзУ;
ПЛАВ ЛП_ТаймАут ЛОКАЛ;
 СОСТ Начало {
/* Останов конкурирующих процессов  */
     ЕСЛИ (ПРОЦ ЗАТ_КНП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_КНП;
     ЕСЛИ (ПРОЦ ЗАТ_ДП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_ДП; 
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ НеВ_КВП_лиЗатравка{
   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП)  СТОП;
   ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализПоложенияЗатравки {
    ЕСЛИ (КООРД_ЗАТ != КООРД_ЗАТ_НЕОПРЕДЕЛЕНА) {          /* коорд-та затравки определена */
         ЗД_Xз = -ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА;  /*  ицииализирована  = 5мм */
         СТАРТ ПРОЦ ЗАТ_УК;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТЕРЯ_КООРД_ЗАТР_ПРИ_ДВИЖЕНИИ_К_КВП)) {
              ЛП_ТаймАут = 27 * ОДНА_МИНУТА;
              В СОСТ НаездНаКВП_поГрубомуЗаданиюVз;
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеГрубогоПрихода{
    ЕСЛИ (!(ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАТ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              ЛП_ТаймАут = 15 * ОДНА_СЕКУНДА;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ НаездНаКВП_поГрубомуЗаданиюVз {
   ЗД_VзУ = ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ;
   СТАРТ ПРОЦ ЗАТ_УС;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПриходаЗатравкиВ_КВП{
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ЛП_ТаймАут В СОСТ СообщениеКонцевикаНет;
 }
 СОСТ АнализКоординаты{
    ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) {
    /*     ФП_Xз = 0.0; */
         СТОП;
    }
    ИНАЧЕ ОШИБКА;
 }

 СОСТ СообщениеКонцевикаНет{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЦЕВИК_ЗАТ_КВП_НЕ_ОБНАРУЖЕН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }

}  /* конец ПРОЦ ЗАТ_КВП   */

/*=====================================================*/
/*==             ЗАТРАВКУ В КНП                      ==*/
/*==                  Д2.31                          ==*/
/*=====================================================*/
ПРОЦ ЗАТ_КНП{
ИЗ ПРОЦ Инициализация 
                      КООРД_ЗАТ,
                      ЗД_Xз,
                      НП_Lз_ОТ_КВП_ДО_КНП,
                      ЗД_VзУ;

ПЛАВ ЛП_ТаймАут ЛОКАЛ;
 СОСТ Начало {
/* Останов конкурирующих процессов  */
     ЕСЛИ (ПРОЦ ЗАТ_КВП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_КВП;
     ЕСЛИ (ПРОЦ ЗАТ_ДП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ЗАТ_ДП; 
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ НеВ_КНП_лиЗатравка{
   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КНП)  СТОП;
   ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализПоложенияЗатравки {
    ЕСЛИ (КООРД_ЗАТ != КООРД_ЗАТ_НЕОПРЕДЕЛЕНА) {          /* коорд-та затравки определена */
         ЗД_Xз = - НП_Lз_ОТ_КВП_ДО_КНП + ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА;
         СТАРТ ПРОЦ ЗАТ_УК;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТЕРЯ_КООРД_ЗАТР_ПРИ_ДВИЖЕНИИ_К_КНП))
              ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеГрубогоПрихода{
    ЕСЛИ (!(ПРОЦ ЗАТ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАТ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              ЛП_ТаймАут = 15 * ОДНА_СЕКУНДА;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ НаездНаКВП_поГрубомуЗаданиюVз {
   ЗД_VзУ = -ГРУБАЯ_СКОРОСТЬ_ЗАТРАВКИ;
   СТАРТ ПРОЦ ЗАТ_УС;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПриходаЗатравкиВ_КНП{
    ЕСЛИ (!(ПРОЦ ЗАТ_УС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ЛП_ТаймАут В СОСТ СообщениеКонцевикаНет;
 }
 СОСТ АнализКоординаты{
    ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КНП) СТОП;
    ИНАЧЕ ОШИБКА;
 }
 СОСТ СообщениеКонцевикаНет{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЦЕВИК_ЗАТ_КНП_НЕ_ОБНАРУЖЕН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}  /* конец ПРОЦ ЗАТ_КНП   */

/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ЗАТРАВКИ{
ИЗ ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ
                             УстановочнаяКоординатаЗатравки;
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИНИЦИАЛИЗИРОВАТЬ_КООРДИНАТУ, УстановочнаяКоординатаЗатравки))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_ZU();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ ДВИЖЕНИЕ_ЗАТРАВКИ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ{
 ИЗ ПРОЦ Инициализация
                        НП_Номинальный_Коэф_V_ЗР,
                        НП_Номинальный_Коэф_X_ЗР,
                        НП_Номинальный_Коэф_V_ЗУ,
                        НП_Номинальный_Коэф_X_ЗУ,
                        НП_Коэф_V_ЗР,
                        НП_Коэф_X_ЗР,
                        НП_Коэф_V_ЗУ,
                        НП_Коэф_X_ЗУ;

 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (SendMsgZUCode(ПК_ЗУ_ДВИЖЕНИЕ_ПО_НОМИНАЛЬНЫМ_КОЭФФИЦИЕНТАМ)) {
         НП_Коэф_V_ЗР = НП_Номинальный_Коэф_V_ЗР;
         НП_Коэф_X_ЗР = НП_Номинальный_Коэф_X_ЗР;
         НП_Коэф_V_ЗУ = НП_Номинальный_Коэф_V_ЗУ;
         НП_Коэф_X_ЗУ = НП_Номинальный_Коэф_X_ЗУ;
         В СЛЕДУЮЩЕЕ;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 СОСТ СообщПИВ_1{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_V_ЗР, НП_Коэф_V_ЗР))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщПИВ_2{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_X_ЗР, НП_Коэф_X_ЗР))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщПИВ_3{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_V_ЗУ, НП_Коэф_V_ЗУ))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщПИВ_4{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_X_ЗУ, НП_Коэф_X_ЗУ))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_ZU();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ РАССЧИТАТЬ_РЕАЛЬНЫЕ_КОЭФФИЦИЕНТЫ_ЗАТРАВКИ {
 ИЗ ПРОЦ Инициализация
                        Реальная_Xз_Измеренная_Оператором,
                        НП_Номинальный_Коэф_V_ЗР,
                        НП_Номинальный_Коэф_X_ЗР,
                        НП_Номинальный_Коэф_V_ЗУ,
                        НП_Номинальный_Коэф_X_ЗУ,
                        НП_Коэф_V_ЗР,
                        НП_Коэф_X_ЗР,
                        НП_Коэф_V_ЗУ,
                        НП_Коэф_X_ЗУ,
                        ФП_Xз;
 ПЛАВ ЛП_Коэффициент ЛОКАЛ;
 СОСТ РасчетЗначений{
    ЛП_Коэффициент = -Реальная_Xз_Измеренная_Оператором/ФП_Xз;
    НП_Коэф_V_ЗР = ЛП_Коэффициент * НП_Номинальный_Коэф_V_ЗР;
    НП_Коэф_X_ЗР = ЛП_Коэффициент * НП_Номинальный_Коэф_X_ЗР;
    НП_Коэф_V_ЗУ = ЛП_Коэффициент * НП_Номинальный_Коэф_V_ЗУ;
    НП_Коэф_X_ЗУ = ЛП_Коэффициент * НП_Номинальный_Коэф_X_ЗУ;
    СТАРТ ПРОЦ ПередачаНП_Коэф_V_ЗР;
    СТАРТ ПРОЦ ПередачаНП_Коэф_X_ЗР;
    СТАРТ ПРОЦ ПередачаНП_Коэф_V_ЗУ;
    СТАРТ ПРОЦ ПередачаНП_Коэф_X_ЗУ;
    СТАРТ ПРОЦ ПередачаПИВ_Коэф_VX_ЗР_У;

    СТОП;
 }
}

/*==============================================*/
/*=     Передача НП_Коэф_VХ_ЗРУ в ПИВ          =*/
/*=     643.АЭ1610.10000 Д2.0                  =*/
/*==============================================*/
ПРОЦ ПередачаПИВ_Коэф_VX_ЗР_У{
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ЗР;
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ЗР;
 ИЗ ПРОЦ Инициализация  НП_Коэф_V_ЗУ;
 ИЗ ПРОЦ Инициализация  НП_Коэф_X_ЗУ;

 СОСТ Начало{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_V_ЗР, НП_Коэф_V_ЗР))
	В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаНП_Коэф_X_ЗР{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_X_ЗР, НП_Коэф_X_ЗР))
	В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаНП_Коэф_V_ЗУ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_V_ЗУ, НП_Коэф_V_ЗУ))
	В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаНП_Коэф_X_ЗУ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_КОЭФ_X_ЗУ, НП_Коэф_X_ЗУ))
	СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_ДП{
 ИЗ ПРОЦ Инициализация
                        НП_Lз_ОТ_КВП_ДО_ДП_Lппз,
                        ФП_Xз;

 СОСТ Начало{
    НП_Lз_ОТ_КВП_ДО_ДП_Lппз = fabs(ФП_Xз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаВ_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Lз_ОТ_КВП_ДО_ДП_Lппз, НП_Lз_ОТ_КВП_ДО_ДП_Lппз)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ ПРИНЯТЬ_ФП_Xз_ЗА_РАССТОЯНИЕ_ОТ_КВП_ЗАТРАВКИ_ДО_СТЫКА_НК{
 ИЗ ПРОЦ Инициализация
                        НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                        ФП_Xз;

 СОСТ Начало{
    НП_Lз_ОТ_КВП_ДО_СТЫКА_НК = fabs(ФП_Xз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаВ_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Lз_ОТ_КВП_ДО_СТЫКА_НК, НП_Lз_ОТ_КВП_ДО_СТЫКА_НК)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}

/*====================================================*/
/*==    ТИГЕЛЬ В ПОЛОЖЕНИЕ ВЫРАЩИВАНИЯ КРИСТАЛЛА    ==*/
/*==    643.АЭ1610.10000 Д2.31                      ==*/
/*====================================================*/
ПРОЦ ТИГ_ПВК{
ИЗ ПРОЦ Инициализация КООРД_ТИГ,
                      ЗД_Xт,
                      ЗД_Hур,
                      ФП_ГлубинаРасплава,
                      НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,
                      ФлагHур;

 СОСТ Начало {
/* Останов конкурирующих процессов  */
     ЕСЛИ (ПРОЦ ТИГ_КНП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ТИГ_КНП;
     ЕСЛИ (ПРОЦ ТИГ_КВП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ТИГ_КВП;
      В СОСТ АнализПоложенияТигля;
 }
 СОСТ АнализПоложенияТигля {
    ЕСЛИ (КООРД_ТИГ == ТИГ_В_ПОЛОЖЕНИИ_ПЗУР) СТОП;
    ИНАЧЕ {
         ЕСЛИ (КООРД_ТИГ == КООРД_ТИГ_НЕОПРЕДЕЛЕНА) В СОСТ ПередачаСообщенияНетКоордТиг;
         ИНАЧЕ {
              ЕСЛИ (ФлагHур == ВЫКЛ) В СОСТ ПередачаСообщенияНетУровняРасплава;
              ИНАЧЕ {
                   ЗД_Xт = НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР -
                           ФП_ГлубинаРасплава +
                           ЗД_Hур;
                   СТАРТ ПРОЦ ТИГ_УК;
                   В СЛЕДУЮЩЕЕ;
              }
         }
    }
 }
 СОСТ АнализВыполненияПеремещенияТиг{
    ЕСЛИ (!(ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ТИГ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }

/* ============*/
 СОСТ ПередачаСообщенияНетКоордТиг {
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_КООРДИНАТЫ))  ОШИБКА;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПередачаСообщенияНетУровняРасплава {
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕМЕЩЕНИЕ_ТИГ_НЕВОЗМОЖНО_НЕТ_УРОВНЯ_РАСПЛАВА))  ОШИБКА;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}  /* конец ПРОЦ ТИГ_ПВК   */

/*=====================================================*/
/*==             ТИГЕЛЬ В КНП                        ==*/
/*==             643.АЭ1610.10000 Д2.31              ==*/
/*=====================================================*/
ПРОЦ ТИГ_КНП{
ИЗ ПРОЦ Инициализация  ФлагРегулятора_X_ТУ,
                       ФлагРегулятора_V_ТУ,
                       ЗД_Xт,
                       ЗД_VтУ,
                       ФП_Xт,
                       КООРД_ТИГ;
 ПЛАВ ЛП_ТаймАут ЛОКАЛ;
 СОСТ Начало {
/* Останов конкурирующих процессов  */
     ЕСЛИ (ПРОЦ ТИГ_КВП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ТИГ_КВП;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ НеВ_КНП_лиТигель{
   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП)  СТОП;
   ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализПоложенияТигля {
    ЕСЛИ (КООРД_ТИГ != КООРД_ТИГ_НЕОПРЕДЕЛЕНА) {   /* определена */
         ЗД_Xт = ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА;    /* пока не иницииализирована  = 5мм? */
         СТАРТ ПРОЦ ТИГ_УК;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТЕРЯ_КООРД_ТИГ_ПРИ_ДВИЖЕНИИ_К_КНП)) {
              ЛП_ТаймАут = 8*ОДНА_МИНУТА;
              В СОСТ НаездНаКНП_поГрубомуЗаданиюVт;
         }
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ОжиданиеГрубогоПрихода{
    ЕСЛИ (!(ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ТИГ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              ЛП_ТаймАут = 15 * ОДНА_СЕКУНДА;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ НаездНаКНП_поГрубомуЗаданиюVт {
   ЗД_VтУ = - ГРУБАЯ_СКОРОСТЬ_ТИГЛЯ;     /* -50 мм/мин */
   СТАРТ ПРОЦ ТИГ_УС;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПриходаТигляВ_КНП{
    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ЛП_ТаймАут В СОСТ СообщениеКонцевикаНет;
 }
 СОСТ АнализКоординаты{
    ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) СТОП;
    ИНАЧЕ ОШИБКА;
 }
 СОСТ СообщениеКонцевикаНет{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЦЕВИК_ТИГ_КНП_НЕ_ОБНАРУЖЕН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}

/*=====================================================*/
/*==             ТИГЕЛЬ В КВП                        ==*/
/*==             643.АЭ1610.10000 Д2.31              ==*/
/*=====================================================*/

ПРОЦ ТИГ_КВП{
ИЗ ПРОЦ Инициализация  ФлагРегулятора_X_ТУ,
                       ФлагРегулятора_V_ТУ,
                       НП_Lт_ОТ_КНП_ДО_КВП,
                       ЗД_Xт,
                       ЗД_VтУ,
                       ФП_Xт,
                       КООРД_ТИГ;
 ПЛАВ ЛП_ТаймАут ЛОКАЛ;
 СОСТ Начало {
/* Останов конкурирующих процессов  */
     ЕСЛИ (ПРОЦ ТИГ_КНП В СОСТ АКТИВНОЕ)  ОШИБКА ПРОЦ ТИГ_КНП;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ НеВ_КВП_лиТигель{
   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КВП)  СТОП;
   ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализПоложенияТигля {
    ЕСЛИ (КООРД_ТИГ != КООРД_ТИГ_НЕОПРЕДЕЛЕНА) {   /* определена */
         ЗД_Xт = НП_Lт_ОТ_КНП_ДО_КВП - ГРУБАЯ_ОКРЕСТНОСТЬ_КОНЦЕВИКА;    /* пока не иницииализирована  = 5мм? */
         СТАРТ ПРОЦ ТИГ_УК;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТЕРЯ_КООРД_ТИГ_ПРИ_ДВИЖЕНИИ_К_КВП)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ОжиданиеГрубогоПрихода{
    ЕСЛИ (!(ПРОЦ ТИГ_УК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ТИГ_УК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              ЛП_ТаймАут = 15 * ОДНА_СЕКУНДА;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }

 СОСТ НаездНаКВП_поГрубомуЗаданиюVт {
   ЗД_VтУ = ГРУБАЯ_СКОРОСТЬ_ТИГЛЯ;     /* -50 мм/мин */
   СТАРТ ПРОЦ ТИГ_УС;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольПриходаТигляВ_КВП{
    ЕСЛИ (!(ПРОЦ ТИГ_УС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (КООРД_ТИГ == ТИГ_В_КВП) СТОП;
         ИНАЧЕ ОШИБКА;
    }
    ТАЙМАУТ ЛП_ТаймАут В СОСТ СообщениеКонцевикаНет;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ СообщениеКонцевикаНет{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЦЕВИК_ТИГ_КВП_НЕ_ОБНАРУЖЕН)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;

 }
 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}

/*====================================================*/
/*==      643.АЭ1610.10000 Д2.31                    ==*/
/*====================================================*/
ПРОЦ УСТАНОВИТЬ_КООРДИНАТУ_ТИГЛЯ{
ИЗ ПРОЦ ОбработкаКоординатнойКоманды_от_ПИВ
                             УстановочнаяКоординатаТигля;
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИНИЦИАЛИЗИРОВАТЬ_КООРДИНАТУ, УстановочнаяКоординатаТигля))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_TU();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*====================================================*/
/*==    643.АЭ1610.10000  Д2.31                     ==*/
/*====================================================*/
ПРОЦ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_КНП_ТИГЛЯ_ДО_КВП{
 ИЗ ПРОЦ Инициализация
                        НП_Lт_ОТ_КНП_ДО_КВП,
                        ФП_Xт;

 СОСТ Начало{
    НП_Lт_ОТ_КНП_ДО_КВП = fabs(ФП_Xт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаВ_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Lт_ОТ_КНП_ДО_КВП, НП_Lт_ОТ_КНП_ДО_КВП)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
       ОШИБКА;
 }
}


/*====================================================*/
/*==                  Д2.31                         ==*/
/*====================================================*/
ПРОЦ ПРИНЯТЬ_ФП_Xт_ЗА_РАССТОЯНИЕ_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР{
 ИЗ ПРОЦ Инициализация
                        НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,
                        ФП_Xт;

 СОСТ Начало{
    НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР = fabs(ФП_Xт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаВ_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР, НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
       ОШИБКА;
 }
}

/*======================================================*/
/*==                                                  ==*/
/*==         ПРОЦЕССЫ УПРАВЛЕНИЯ ДАТЧИКАМИ            ==*/
/*==         643.АЭ1610.10000 Д2.37                   ==*/
/*======================================================*/
/*==                  ТДД                             ==*/

/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ ЗапускТестаОЗУ_ТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ТЕСТ_ОЗУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ РЕЖИМ_ИЗМЕРЕНИЯ_ТДД_МП{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_МП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ РЕЖИМ_ИЗМЕРЕНИЯ_ТДД_БП{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_РЕЖИМ_ИЗМЕРЕНИЯ_БП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ ПереключитьВидеовыходНаКамеруБольшогоПоля{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_БП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ РЕЖИМ_АТТЕСТАЦИИ_БП_ТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_БП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ ЗапускТеста_БП_ТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ТЕСТ_БП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ НачатьКалибровкуБольшогоПоля{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ НачатьКалибровкуБольшогоПоля_ПЛЮС{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_БП_ПЛЮС)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ ПереключитьВидеовыходНаКамеруМалогоПоля{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ВИДЕОВЫХОД_НА_КАМЕРУ_МП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ РЕЖИМ_АТТЕСТАЦИИ_МП_ТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_РЕЖИМ_АТТЕСТАЦИИ_МП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ ЗапускТеста_МП_ТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ТЕСТ_МП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ НачатьКалибровкуМалогоПоля{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ НачатьКалибровкуМалогоПоля_ПЛЮС{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_НАЧАЛО_КАЛИБРОВКИ_МП_ПЛЮС)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*====================================================*/
/*==                  Д2.37                         ==*/
/*====================================================*/
ПРОЦ КонецРаботыТДД{
 СОСТ Начало {
     ЕСЛИ (SendMsgTDDCode(ПК_ТДД_КОНЕЦ_РАБОТЫ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*==================================*/
/*          Д2.37                   */
/*                                  */
/*==================================*/
ПРОЦ СнятиеКоэффициентовКалибровкиИзТДД{
/* ЗАПРОС НА ЧТЕНИЕ */
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТДД_НАЧАЛО_СНЯТИЯ_КОЭФФИЦИЕНТОВ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Начало1{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGZERO_CTG_НАЧАЛО_ПЕРЕДАЧИ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало2{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGZERO_KY)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало3{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGZERO_X)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало4{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGZERO_TG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало5{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGPLUS_CTG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало6{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGPLUS_KY)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало7{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGPLUS_X)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало8{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_BIGPLUS_TG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

/*=============================*/
 СОСТ Начало9{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLZERO_CTG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало10{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLZERO_KY)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало11{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLZERO_X)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало12{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLZERO_TG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало13{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLPLUS_CTG)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало14{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLPLUS_KY)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало15{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLPLUS_X)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Начало16{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ИЗМН_НП_SMALLPLUS_TG_ПОСЛЕДНИЙ_ПАРАМЕТР)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

 СОСТ Пауза_1мин{
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ КоэффициентовТарировкиТДДНет;
 }
 СОСТ КоэффициентовТарировкиТДДНет {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТДД_ТАЙМАУТ_СНЯТИЯ_КОЭФФИЦИЕНТОВ_ИСТЕК))
        ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*==============================================*/
/*==   Передача сообщения в ТДД для сброса    ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.37          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ТДД{
 СОСТ Начало{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_ГОТОВ_К_РАБОТЕ)){
         СТАРТ ПРОЦ КонтрольИзмененияФП_Wз_дляТДД;
         СТАРТ ПРОЦ КонтрольИзмененияФП_Wт_дляТДД;
         СТАРТ ПРОЦ КонтрольИзмененияФП_Hур_дляТДД;
         СТАРТ ПРОЦ КонтрольИзмененияЗД_Hур_дляТДД;
         СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*==============================================*/
/*==   Сброс внутренней ошибки в ТДД          ==*/
/*==          643.АЭ1610.10000 Д2.37 добавлено==*/
/*==============================================*/
ПРОЦ СбросОшибкиВ_ТДД{
 СОСТ Начало{
    ЕСЛИ (SendMsgTDDCode(ПК_ТДД_СБРОС_ОШИБКИ_ВНУТРЕННЕЙ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
}

/*================================================*/
/*==        ПРОЦЕССЫ КОНТРОЛЯ ИЗМЕНЕНИЯ         ==*/
/*==        ПАРАМЕТРОВ И ПЕРЕДАЧИ ИХ В ТДД      ==*/
/*=         643.АЭ1610.10000 Д2.37               =*/
/*================================================*/

ПРОЦ КонтрольИзмененияФП_Wз_дляТДД{
ИЗ ПРОЦ Инициализация ФП_Wз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wз) {
         ЛП_Предыдущее = ФП_Wз;
         В СЛЕДУЮЩЕЕ;
    }
 }
  СОСТ СообщОбИзмененииДляТДД {
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ФП_Wз, ФП_Wз)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }

 СОСТ Пауза{
      ТАЙМАУТ ТАЙМАУТ_НА_ПЕРЕДАЧУ_ДАННЫХ_В_ТДД В СОСТ КонтрольИзменения;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/

ПРОЦ КонтрольИзмененияФП_Wт_дляТДД{
ИЗ ПРОЦ Инициализация ФП_Wт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wт) {
         ЛП_Предыдущее = ФП_Wт;
         В СЛЕДУЮЩЕЕ;
    }
 }
  СОСТ СообщОбИзмененииДляТДД {
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ФП_Wт, ФП_Wт)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Пауза{
      ТАЙМАУТ ТАЙМАУТ_НА_ПЕРЕДАЧУ_ДАННЫХ_В_ТДД В СОСТ КонтрольИзменения;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ КонтрольИзмененияФП_Hур_дляТДД{
ИЗ ПРОЦ Инициализация ФП_Hур;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Hур);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Hур) {
         ЛП_Предыдущее = ФП_Hур;
         В СЛЕДУЮЩЕЕ;
    }
 }
  СОСТ СообщОбИзмененииДляТДД {
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ФП_Hур, ФП_Hур)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Пауза{
      ТАЙМАУТ ТАЙМАУТ_НА_ПЕРЕДАЧУ_ДАННЫХ_В_ТДД В СОСТ КонтрольИзменения;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ КонтрольИзмененияЗД_Hур_дляТДД{
ИЗ ПРОЦ Инициализация ЗД_Hур;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Hур);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Hур) {
         ЛП_Предыдущее = ЗД_Hур;
         В СЛЕДУЮЩЕЕ;
    }
 }
  СОСТ СообщОбИзмененииДляТДД {
     ЕСЛИ (SendMsgFloatParamTDD(ПК_ТДД_ЗД_Hур, ЗД_Hур)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД В СОСТ НарушениеСвязиС_ТДД;
 }
 СОСТ Пауза{
      ТАЙМАУТ ТАЙМАУТ_НА_ПЕРЕДАЧУ_ДАННЫХ_В_ТДД В СОСТ КонтрольИзменения;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/

СОСТ НарушениеСвязиС_ТДД {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ТДД)) {
         DisableChannel_TDD();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/********************************************************/
/*  ДУ                                                  */
/********************************************************/
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ НачалоАдаптацииЛазера_0_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_0)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ НачалоАдаптацииЛазера_1_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_НАЧАЛО_АДАПТАЦИИ_ЛАЗЕРА_1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ПрерватьАдаптацию_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ПРЕРВАТЬ_АДАРПТАЦИЮ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВклВычислениеТемновогоСигнала_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВКЛ_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВыкВычислениеТемновогоСигнала_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВЫК_ВЫЧИСЛЕНИЕ_ТЕМНОВОГО_СИГНАЛА)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ НачалоКалибровки_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_НАЧАЛО_КАЛИБРОВКИ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ПрерватьКалибровку_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ПРЕРВАТЬ_КАЛИБРОВКУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ КалибровкаПоТочкеСНомеромДля_ДУ{
ИЗ ПРОЦ Инициализация ФП_ТочкиДля_ДУ;
 СОСТ Начало {
     ЕСЛИ (SendMsgFloatParamDU(ПК_ДУ_КАЛИБРОВКА_ПО_ТОЧКЕ,ФП_ТочкиДля_ДУ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ НачалоРежимаОтладкиДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_НАЧАЛО_РЕЖИМА_ОТЛАДКИ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ КонецРежимаОтладкиДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_КОНЕЦ_РЕЖИМА_ОТЛАДКИ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВключитьЛазер0_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_0)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВключитьЛазер1_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВКЛЮЧИТЬ_ЛАЗЕР_1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВыключитьЛазер0_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_0)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ВыключитьЛазер1_ДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ВЫКЛЮЧИТЬ_ЛАЗЕР_1)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ ЗапускТестаДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_ЗАПУСК_ТЕСТА)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*======================================================*/
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ КонецРаботыДУ{
 СОСТ Начало {
     ЕСЛИ (SendMsgDUCode(ПК_ДУ_КОНЕЦ_РАБОТЫ)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ СнятиеКоэффициентовКалибровкиИзДУ{
/* ЗАПРОС НА ЧТЕНИЕ */
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_НАЧАЛО_СНЯТИЯ_КОЭФФИЦИЕНТОВ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Начало1{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ИЗМН_НП_AH_НАЧАЛО_ПЕРЕДАЧИ)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
 СОСТ Начало2{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ИЗМН_НП_BH)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
 СОСТ Начало3{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ИЗМН_НП_CH_ПОСЛЕДНИЙ_ПАРАМЕТР)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }

 СОСТ Пауза_1мин{
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ КоэффициентовТарировкиДУНет;
 }
 СОСТ КоэффициентовТарировкиДУНет {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_КОЭФФИЦИЕНТОВ_ИСТЕК))
        ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
/*=============================*/
ПРОЦ СнятиеВремениЭкспозицииЛазера0{
/* ЗАПРОС НА ЧТЕНИЕ */
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_НАЧАЛО_СНЯТИЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Начало1{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME0)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ1;
 }
 СОСТ Пауза_1мин{
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ ВремениЭкспозицииЛазДУНет;
 }
 СОСТ ВремениЭкспозицииЛазДУНет {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗ_ЛАЗ_ИСТЕК))
        ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_ДУ1{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗ_ЛАЗ_ИСТЕК)) {
	В СЛЕДУЮЩЕЕ;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*=============================*/
/*=========================================*/
/*=         643.АЭ1610.10000 Д2.37        =*/
/*=========================================*/
ПРОЦ СнятиеВремениЭкспозицииЛазера1{
/* ЗАПРОС НА ЧТЕНИЕ */
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_НАЧАЛО_СНЯТИЯ_ЭКСПОЗИЦИИ_ЛАЗЕРА)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Начало1{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ИЗМН_НП_EXPOSURE_TIME1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ1;
 }
 СОСТ Пауза_1мин{
        ТАЙМАУТ ОДНА_МИНУТА В СОСТ ВремениЭкспозицииЛазДУНет;
 }
 СОСТ ВремениЭкспозицииЛазДУНет {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗ_ЛАЗ_ИСТЕК))
        ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязиС_ДУ1{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДУ_ТАЙМАУТ_СНЯТИЯ_ВРЕМЕНИ_ЭКСПОЗ_ЛАЗ_ИСТЕК)) {
	В СЛЕДУЮЩЕЕ;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*==============================================*/
/*==   Передача сообщения в ДУ для сброса    ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.37          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ДУ{
 СОСТ Начало{
    ЕСЛИ (SendMsgDUCode(ПК_ДУ_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ В СОСТ НарушениеСвязиС_ДУ;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ДУ {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДУ)) {
         DisableChannel_DU();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}




/********************************************************/
/*  ДТН                                                 */
/********************************************************/

/*==============================================*/
/*==   Передача сообщения в ДТН для сброса    ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.37          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ДТН{
 СОСТ Начало{
    ЕСЛИ (SendMsgDTNCode(ПК_ДТН_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН)) {
         DisableChannel_DTN();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*======================================================*/
ПРОЦ ЗапускТестаДТН{
 СОСТ Начало {
     ЕСЛИ (SendMsgDTNCode(ПК_ДТН_ЗАПУСК_ТЕСТА)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТН)) {
         DisableChannel_DTN();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*======================================================*/
ПРОЦ РассчитатьТсм_ДТН{
ИЗ ПРОЦ Инициализация
                        НП_Тсм_ДТН,
                        ФлагДТН,
                        ФП_Тдтн,
                        ФП_Тн;

 СОСТ Начало {
    ЕСЛИ (ФлагДТН) {
         НП_Тсм_ДТН = Т_БАЗОВОЕ_ДТН - ФП_Тдтн;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ В СОСТ НетИсходного;
 }
 СОСТ ПодтверждениеРассчетаНП{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Тсм_ДТН, НП_Тсм_ДТН)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НетИсходного{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_Т_СМЕЩЕНИЯ_НЕ_РАССЧИТАНА_НЕТ_ИСХОДНОГО_ДТН)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}


/********************************************************/
/*  ДТР                                                 */
/********************************************************/
/*==============================================*/
/*==   Передача сообщения в ДТР для сброса    ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.37          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ДТР{
 СОСТ Начало{
    ЕСЛИ (SendMsgDTRCode(ПК_ДТР_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР В СОСТ НарушениеСвязиС_Датчиком;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР)) {
         DisableChannel_DTR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}


/*======================================================*/
ПРОЦ ЗапускТестаДТР{
 СОСТ Начало {
     ЕСЛИ (SendMsgDTRCode(ПК_ДТР_ЗАПУСК_ТЕСТА)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР В СОСТ НарушениеСвязиС_Датчиком;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_Датчиком {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ДТР)) {
         DisableChannel_DTR();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*======================================================*/
ПРОЦ РассчитатьТсм_ДТР{
ИЗ ПРОЦ Инициализация
                        НП_Тсм_ДТР,
                        ФлагДТР,
                        ФП_Тдтр,
                        ФП_Тр;

 СОСТ Начало {
    ЕСЛИ (ФлагДТР) {
         НП_Тсм_ДТР = Т_БАЗОВОЕ_ДТР - ФП_Тдтр;
         В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ В СОСТ НетИсходного;
 }
 СОСТ ПодтверждениеРассчетаНП{
    ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_НП_Тсм_ДТР, НП_Тсм_ДТР)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НетИсходного{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_Т_СМЕЩЕНИЯ_НЕ_РАССЧИТАНА_НЕТ_ИСХОДНОГО_ДТР)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*==============================================*/
/*==   Передача сообщения в ИП  для сброса    ==*/
/*==   бита инициализации                     ==*/
/*==          643.АЭ1610.10000 Д2.37          ==*/
/*==============================================*/
ПРОЦ СбросБитаИнициализацииВ_ИП2К_К1{
 СОСТ Начало{
    ЕСЛИ (SendMsgIP2K_K1Code(ПК_ИП2К_К1_ГОТОВ_К_РАБОТЕ)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
СОСТ НарушениеСвязиС_ИП {
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) {
         DisableChannel_IP2K_K1();
			ОШИБКА;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*===                                               ====*/
/*===       ПРОЦЕССЫ КОНТРОЛЯ ОХЛАЖДЕНИЯ            ====*/
/*===                                               ====*/
/*======================================================*/
/*======================================================*/

/*======================================================*/
/*==   КонтрольТемпературыВодыОхлажденияВК            ==*/
/*==         643.АЭ1610.10121  Д2.33                  ==*/
/*======================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияВК{
 ИЗ ПРОЦ Инициализация  ФП_Твк1;

 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк1 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк1 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк1 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ВК))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк1 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ВК))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк1 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк1 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ВК))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк1 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыОхлажденияВК */

/*======================================================*/
/*==  КонтрольТемпературыВодыОхлажденияКрышкиНК       ==*/
/*==          643.АЭ1610.10121  Д2.33                 ==*/
/*======================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияКрышкиНК{
 ИЗ ПРОЦ Инициализация  ФП_Твк2;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк2 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк2 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк2 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КРЫШКИ_НК))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк2 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КРЫШКИ_НК))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк2 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк2 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_КРЫШКИ_НК))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк2 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыОхлажденияКрышкиНК */

/*======================================================*/
/*==        КонтрольТемпературыВодыОхлажденияНК       ==*/
/*==              643.АЭ1610.10121  Д2.33             ==*/
/*======================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияНК{
 ИЗ ПРОЦ Инициализация  ФП_Твк3;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк3 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк3 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк3 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_НК))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк3 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_НК))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк3 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк3 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_НК))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк3 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыОхлажденияНК */
/*============================================================*/
/*==    КонтрольТемпературыВодыОхлажденияБазовойПлиты       ==*/
/*==              643.АЭ1610.10121  Д2.33                   ==*/
/*============================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияБазовойПлиты{
 ИЗ ПРОЦ Инициализация  ФП_Твк4;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк4 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк4 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк4 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк4 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк4 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк4 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк4 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыБазовойПлиты */



/*======================================================*/
/*== КонтрольТемпературыВодыОхлажденияКоллектораВакуумного  ==*/
/*==          643.АЭ1610.10121  Д2.33                 ==*/
/*======================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияКоллектораВакуумного{
 ИЗ ПРОЦ Инициализация  ФП_Твк5;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк5 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк5 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк5 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк5 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк5 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк5 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк5 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыОхлажденияКоллектораВакуумного */

/*===========================================================*/
/*==     КонтрольТемпературыВодыОхлажденияШтокаТигля       ==*/
/*==               643.АЭ1610.10121  Д2.33                 ==*/
/*===========================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияШтокаТигля{
 ИЗ ПРОЦ Инициализация  ФП_Твк6;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк6 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк6 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк6 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ШТОКА_ТИГЛЯ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк6 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ШТОКА_ТИГЛЯ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк6 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк6 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ШТОКА_ТИГЛЯ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк6 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыШтокаТигля */

/*=====================================================*/
/*==   КонтрольТемпературыВодыОхлажденияТоковводов   ==*/
/*=           643.АЭ1610.10121  Д2.33                ==*/
/*=====================================================*/
ПРОЦ КонтрольТемпературыВодыОхлажденияТоковводов{
 ИЗ ПРОЦ Инициализация  ФП_Твк7;
 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_Твк7 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_Твк7 <= ТЕМПЕРАТУРА_ВК_70)) В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_Твк7 > ТЕМПЕРАТУРА_ВК_70) В СОСТ Авария;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ТОКОВВОДОВ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк7 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_В_МАГИСТРАЛИ_ОХЛ_ТОКОВВОДОВ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_Твк7 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_Твк7 > ТЕМПЕРАТУРА_ВК_70)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ПЕРЕГРЕВ_ВОДЫ_ОХЛ_ТОКОВВОДОВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_Твк7 <= ТЕМПЕРАТУРА_ВК_70) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыТоковводов */

/*=============================================*/
/*==    КонтрольТемпературыВодыНаВходе       ==*/
/*==          643.АЭ1610.10121  Д2.33        ==*/
/*=============================================*/
ПРОЦ КонтрольТемпературыВодыНаВходе{
 ИЗ ПРОЦ Инициализация  ФП_Твк8;

 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ (ФП_Твк8 > ТЕМПЕРАТУРА_ВК_30) В СОСТ Перегрев;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ТЕМПЕРАТУРЫ_ВОДЫ_НА_ВХОДЕ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_Твк8 > ТЕМПЕРАТУРА_ВК_30) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПЕРЕГРЕВ_ВОДЫ_НА_ВХОДЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ (ФП_Твк8 <= (ТЕМПЕРАТУРА_ВК_30 - 1.0)) В СОСТ Начало; /*добавитьдобавлено (гистерезис)*/
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}   /* конец процесса КонтрольТемпературыВодыНаВходе */


/*+++++++++++++++++++++++++*/

/*=================================================*/
/*==           КонтрольСостоянияМН               ==*/
/*==     запускается  при инициации системы      ==*/
/*==          643.АЭ1610.10121  Д2.0             ==*/
/*=================================================*/

ПРОЦ КонтрольСостоянияМН{
 ИЗ ПРОЦ Инициализация
                        К_МНмах,
                        К_МНмин;
 СОСТ Начало{
    ЕСЛИ ((!К_МНмах) && (К_МНмин)) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_В_НОРМЕ))  В СОСТ СменаСобытияСред;
    } ИНАЧЕ {
         ЕСЛИ ((!К_МНмах)&&(!К_МНмин)) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_НИЖЕ_НОРМЫ))  В СОСТ СменаСобытияНижеНормы;
         } ИНАЧЕ {
              ЕСЛИ ((К_МНмах)&&(К_МНмин)) {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ДАВЛЕНИЕ_ВОДЫ_ВЫШЕ_НОРМЫ))  В СОСТ СменаСобытияВышеНормы;
              } ИНАЧЕ {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКАЗ_МН))  В СОСТ СменаСобытияОшибка;
              }
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСобытияСред{
    ЕСЛИ (К_МНмах || (!К_МНмин))  В СОСТ Начало;
 }

 СОСТ СменаСобытияНижеНормы{
    ЕСЛИ (К_МНмах || (К_МНмин))  В СОСТ Начало;
 }

 СОСТ СменаСобытияВышеНормы{
    ЕСЛИ ((!К_МНмах) || (!К_МНмин))  В СОСТ Начало;
 }

 СОСТ СменаСобытияОшибка{
    ЕСЛИ ((!К_МНмах) || (К_МНмин))   В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*=================================================*/
/*==             КонтрольАварииМН                ==*/
/*==     запускается  при инициации системы      ==*/
/*==         643.АЭ1610.10121  Д2.0              ==*/
/*=================================================*/

ПРОЦ КонтрольАварииМН{
 ИЗ ПРОЦ Инициализация
                        К_МНмах,
                        К_МНмин;
 СОСТ Начало{
    ЕСЛИ ((!К_МНмах) && (К_МНмин)) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СНЯТЬ_ОШИБКУ__МН_В_НОРМЕ))  В СОСТ СменаСобытияСред;
    } ИНАЧЕ {
         ЕСЛИ ((!К_МНмах)&&(!К_МНмин)) {
              ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ДАВЛЕНИЕ_ВОДЫ_НИЖЕ_НОРМЫ)) {
                    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
                    В СОСТ СменаСобытияНижеНормы;
              }
         } ИНАЧЕ {
              ЕСЛИ ((К_МНмах)&&(К_МНмин)) {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ДАВЛЕНИЕ_ВОДЫ_ВЫШЕ_НОРМЫ)) {
                        ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
                        В СОСТ СменаСобытияВышеНормы;
                   }
              } ИНАЧЕ {
                   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__ОТКАЗ_МН)) {
                       ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
                       В СОСТ СменаСобытияОшибка;
                   }
              }
         }
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСобытияСред{
    ЕСЛИ (К_МНмах || (!К_МНмин)) В СОСТ Начало;
 }

 СОСТ СменаСобытияНижеНормы{
    ЕСЛИ (К_МНмах || (К_МНмин))  В СОСТ Начало;
 }

 СОСТ СменаСобытияВышеНормы{
    ЕСЛИ ((!К_МНмах) || (!К_МНмин))  В СОСТ Начало;
 }

 СОСТ СменаСобытияОшибка{
    ЕСЛИ ((!К_МНмах) || (К_МНмин))  В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}

/*===================================================*/
/*==       КонтрольАварииОхлажденияВК_РП1          ==*/
/*==         запускается  при инициации системы    ==*/
/*==             643.АЭ1610.10121  Д2.0            ==*/
/*===================================================*/

ПРОЦ КонтрольАварииОхлажденияВК_РП1{
 ИЗ ПРОЦ Инициализация  К_РП1;
 СОСТ Начало {
     ЕСЛИ (К_РП1 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
     ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ВК))   В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
     ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
     ЕСЛИ (К_РП1 == ЕСТЬ_ВОДА)  В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_ВК))    В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
     ЕСЛИ (К_РП1 == НЕТ_ВОДЫ)  В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияВК_РП1   */

/*===================================================*/
/*==  КонтрольАварииОхлажденияКрышкиВК_РП2         ==*/
/*==   запускается  при инициации системы          ==*/
/*==       643.АЭ1610.10121  Д2.0                  ==*/
/*===================================================*/
ПРОЦ КонтрольАварииОхлажденияКрышкиВК_РП2{
 ИЗ ПРОЦ Инициализация  К_РП2;
 СОСТ Начало {
    ЕСЛИ (К_РП2 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_КРЫШКИ_НК))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
    ЕСЛИ (К_РП2 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_КРЫШКИ_НК))    В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
      ЕСЛИ (К_РП2 == НЕТ_ВОДЫ) В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияКрышкиВК_РП2   */

/*===================================================*/
/*==        КонтрольАварииОхлажденияНК_РП3         ==*/
/*==         запускается  при инициации системы    ==*/
/*==             643.АЭ1610.10121    Д2.0          ==*/
/*===================================================*/
ПРОЦ КонтрольАварииОхлажденияНК_РП3{
 ИЗ ПРОЦ Инициализация  К_РП3;
 СОСТ Начало {
    ЕСЛИ (К_РП3 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_НК))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
   ЕСЛИ (К_РП3 == ЕСТЬ_ВОДА)  В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_НК))    В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
   ЕСЛИ (К_РП3 == НЕТ_ВОДЫ)  В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияНК_РП3   */
/*==================================================*/
/*==   КонтрольАварииОхлажденияБазовойПлиты_РП4   ==*/
/*==     запускается  при инициации системы       ==*/
/*==         643.АЭ1610.10121    Д2.0             ==*/
/*==================================================*/
ПРОЦ КонтрольАварииОхлажденияБазовойПлиты_РП4{
 ИЗ ПРОЦ Инициализация  К_РП4;
 СОСТ Начало {
    ЕСЛИ (К_РП4 == НЕТ_ВОДЫ)  В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
    ЕСЛИ (К_РП4 == ЕСТЬ_ВОДА)  В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_БАЗОВОЙ_ПЛИТЫ))    В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
    ЕСЛИ (К_РП4 == НЕТ_ВОДЫ)  В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияБазовойПлиты_РП4   */


/*===================================================*/
/*== КонтрольАварииОхлажденияКоллектораВакуумного_РП5    ==*/
/*==   запускается  при инициации системы          ==*/
/*==         643.АЭ1610.10121  Д2.0                ==*/
/*===================================================*/
ПРОЦ КонтрольАварииОхлажденияКоллектораВакуумного_РП5{
 ИЗ ПРОЦ Инициализация  К_РП5;
 СОСТ Начало {
    ЕСЛИ (К_РП5 == НЕТ_ВОДЫ)  В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
    ЕСЛИ (К_РП5 == ЕСТЬ_ВОДА)  В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))    В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
    ЕСЛИ (К_РП5 == НЕТ_ВОДЫ)  В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияКоллектораВакуумного_РП5   */

/*=====================================================*/
/*==  КонтрольАварииОхлажденияШтокаПриводаТигля_РП6  ==*/
/*==      запускается  при инициации системы         ==*/
/*==           643.АЭ1610.10121    Д2.0              ==*/
/*=====================================================*/
ПРОЦ КонтрольАварииОхлажденияШтокаПриводаТигля_РП6{
 ИЗ ПРОЦ Инициализация  К_РП6;
 СОСТ Начало {
    ЕСЛИ (К_РП6 == НЕТ_ВОДЫ)  В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
    ЕСЛИ (К_РП6 == ЕСТЬ_ВОДА)  В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ))    В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
    ЕСЛИ (К_РП6 == НЕТ_ВОДЫ)  В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияШтокаПриводаТигля_РП6   */

/*==================================================*/
/*==    КонтрольАварииОхлажденияТоковводов_РП7    ==*/
/*==      запускается  при инициации системы      ==*/
/*==          643.АЭ1610.10121    Д2.0            ==*/
/*==================================================*/
ПРОЦ КонтрольАварииОхлажденияТоковводов_РП7{
 ИЗ ПРОЦ Инициализация  К_РП7;
 СОСТ Начало {
    ЕСЛИ (К_РП7 == НЕТ_ВОДЫ)  В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ Норма;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__НЕТ_ОХЛ_ТОКОВВОДОВ))   В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеИсчезновенияАварии{
    ЕСЛИ (К_РП7 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_ТОКОВВОДОВ))    В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеАварии {
    ЕСЛИ (К_РП7 == НЕТ_ВОДЫ) В СОСТ Авария;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольАварииОхлажденияТоковводов_РП7   */

/*==================================================*/
/*==     КонтрольАварииОхлажденияАВД_РП8          ==*/
/*==   запускается  при инициации системы         ==*/
/*==        643.АЭ1610.10121    Д2.0              ==*/
/*==================================================*/

ПРОЦ Контроль_К_РП8_ПриВключенииАВД{
 ИЗ ПРОЦ Инициализация  К_РП8;
 СОСТ Начало {
      ЕСЛИ (К_РП8 == НЕТ_ВОДЫ) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРЕДУПРЕЖДЕНИЕ__НЕТ_ОХЛ_АВД)) СТОП;
      } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМА_ОХЛ_АВД)) СТОП;
      }
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}


/*========================================================*/
/*==       КонтрольРелеПротокаОхлажденияВК_РП1          ==*/
/*==         запускается  при инициации системы         ==*/
/*==              643.АЭ1610.10121  Д2.0                ==*/
/*========================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияВК_РП1{
 ИЗ ПРОЦ Инициализация  К_РП1;
 СОСТ Начало {
      ЕСЛИ (К_РП1 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_ВК))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП1 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_ВК))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП1 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияВК_РП1   */

/*======================================================*/
/*==  КонтрольРелеПротокаОхлажденияКрышкиНК_РП2       ==*/
/*==         запускается  при инициации системы       ==*/
/*==              643.АЭ1610.10121  Д2.0              ==*/
/*======================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияКрышкиНК_РП2{
 ИЗ ПРОЦ Инициализация  К_РП2;
 СОСТ Начало {
      ЕСЛИ (К_РП2 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_КРЫШКИ_НК))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП2 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_КРЫШКИ_НК))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП2 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияКрышкиНК_РП2   */
/*====================================================*/
/*==    КонтрольРелеПротокаОхлажденияНК_РП3         ==*/
/*==     запускается  при инициации системы         ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияНК_РП3{
 ИЗ ПРОЦ Инициализация  К_РП3;
 СОСТ Начало {
      ЕСЛИ (К_РП3 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_НК))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП3 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_НК))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП3 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияНК_РП3   */

/*====================================================*/
/*== КонтрольРелеПротокаОхлажденияБазовойПлиты_РП4  ==*/
/*==    запускается  при инициации системы          ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияБазовойПлиты_РП4{
 ИЗ ПРОЦ Инициализация  К_РП4;
 СОСТ Начало {
      ЕСЛИ (К_РП4 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП4 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_БАЗОВОЙ_ПЛИТЫ))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП4 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияБазовойПлиты_РП4   */



/*=======================================================*/
/*== КонтрольРелеПротокаОхлажденияКоллектораВакуумного_РП5   ==*/
/*==       запускается  при инициации системы          ==*/
/*==              643.АЭ1610.10121  Д2.0               ==*/
/*=======================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияКоллектораВакуумного_РП5{
 ИЗ ПРОЦ Инициализация  К_РП5;
 СОСТ Начало {
      ЕСЛИ (К_РП5 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП5 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_КОЛЛЕКТОРА_ВАКУУМНОГО))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП5 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияКоллектораВакуумного_РП5   */

/*========================================================*/
/*== КонтрольРелеПротокаОхлажденияШтокаПриводаТигля_РП6 ==*/
/*==      запускается  при инициации системы            ==*/
/*==           643.АЭ1610.10121  Д2.0                   ==*/
/*========================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияШтокаПриводаТигля_РП6{
 ИЗ ПРОЦ Инициализация  К_РП6;
 СОСТ Начало {
      ЕСЛИ (К_РП6 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП6 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_ШТОКА_ПРИВОДА_ТИГЛЯ))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП6 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияШтокаПриводаТигля_РП6   */

/*=================================================*/
/*== КонтрольРелеПротокаОхлажденияТоковводов_РП7 ==*/
/*==    запускается  при инициации системы       ==*/
/*==         643.АЭ1610.10121  Д2.0              ==*/
/*=================================================*/
ПРОЦ КонтрольРелеПротокаОхлажденияТоковводов_РП7{
 ИЗ ПРОЦ Инициализация  К_РП7;
 СОСТ Начало {
      ЕСЛИ (К_РП7 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_ТОКОВВОДОВ))  В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП7 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_ТОКОВВОДОВ))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП7 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольРелеПротокаОхлажденияТоковводов_РП7   */

/*==============================================*/
/*==       КонтрольОхлажденияАВД_РП8          ==*/
/*==   запускается  при инициации системы     ==*/
/*==         643.АЭ1610.10121  Д2.0           ==*/
/*==============================================*/

ПРОЦ КонтрольРелеПротокаОхлажденияАВД_РП8{
 ИЗ ПРОЦ Инициализация  К_РП8;
 СОСТ Начало {
      ЕСЛИ (К_РП8 == ЕСТЬ_ВОДА) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ                В СОСТ НетОхлаждения;
 }
 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ОХЛ_АВД))    В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеИсчезновенияВоды {
      ЕСЛИ (К_РП8 == НЕТ_ВОДЫ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ НетОхлаждения{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ОХЛ_АВД))   В СЛЕДУЮЩЕЕ;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеПоявленияВоды{
      ЕСЛИ (К_РП8 == ЕСТЬ_ВОДА) В СОСТ Норма;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольОхлажденияАВД_РП8   */

/*========================================================*/
/*==        КонтрольСостояния_К_V1                      ==*/
/*==        запускается  при инициации системы          ==*/
/*==        643.АЭ1610.10121  Д2.0                      ==*/
/*========================================================*/
ПРОЦ КонтрольСостояния_К_V1{
 ИЗ ПРОЦ Инициализация  К_V1;

 СОСТ Начало {
      ЕСЛИ (К_V1 == ВКЛ) В СОСТ Норма;
      ИНАЧЕ             В СОСТ КлапанСработал;
 }

 СОСТ Норма{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН_В_НОРМЕ))
         В СОСТ Переключение1_0;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КлапанСработал{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СРАБОТАЛ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН))
         В СОСТ Переключение0_1;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Переключение0_1 {
      ЕСЛИ (К_V1) В СОСТ Норма;
 }
 СОСТ Переключение1_0{
      ЕСЛИ (!К_V1) В СОСТ КлапанСработал;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСостояния_К_V1   */

/*====================================================*/
/*==          КонтрольАварии_К_V1                  ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольАварии_К_V1{
 ИЗ ПРОЦ Инициализация  К_V1;

 СОСТ Начало {
      ЕСЛИ (!К_V1) В СОСТ ПередачаСообщения;
      ИНАЧЕ В СОСТ Начало;
 }

 СОСТ ПередачаСообщения{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_АВАРИЯ__СРАБОТАЛ_ПРЕДОХРАНИТЕЛЬНЫЙ_КЛАПАН))
        В СОСТ ПроверкаАктивностиДоОтмены2мин;

     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаАктивностиДоОтмены2мин{    /**************/
   ЕСЛИ (ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ) В СОСТ Таймаут2мин;
    ИНАЧЕ {
            СТАРТ ПРОЦ ДоОтмены2мин;
            В СОСТ Таймаут2мин;
        }
 }

 СОСТ Таймаут2мин {
      ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
    В СОСТ Таймаут2мин;
 }
}   /* конец процесса КонтрольАварии_К_V1 */

/*===============================================================*/
/*==  Контроль потока Охлаждающей жидкости источника питания   ==*/
/*==         запускается  при включении ИП                     ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ */
ПРОЦ КонтрольПотокаОхлаждЖидкости_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_УставкаПотокаОхлЖидкости_ИП2К_К1,
                        ФП_ПотокОхлаждВоды_ИП2К_К1;
 СОСТ Начало {
   В СОСТ Норма;
   ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 < НП_УставкаПотокаОхлЖидкости_ИП2К_К1)
     В СОСТ НижеНормы;
   ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 > ВРХ_ГРАН_ПОТОКА_ОХЛ_ЖИДК_ИП)
     В СОСТ ВышеНормы;
 }

 СОСТ Норма{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_В_НОРМЕ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ОжиданиеИсчезновенияДиапазона {
   ЕСЛИ ((ФП_ПотокОхлаждВоды_ИП2К_К1 < НП_УставкаПотокаОхлЖидкости_ИП2К_К1) ||
         (ФП_ПотокОхлаждВоды_ИП2К_К1 > ВРХ_ГРАН_ПОТОКА_ОХЛ_ЖИДК_ИП)) 
        В СОСТ Начало;
 }

 СОСТ НижеНормы{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_НИЖЕ_НОРМЫ_АВАРИЯ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (ПРОЦ ДоОтмены2мин В СОСТ ПАССИВНОЕ) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПовышенияПотока{
   ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 >= НП_УставкаПотокаОхлЖидкости_ИП2К_К1) 
       В СОСТ Начало;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
 СОСТ ВышеНормы{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПОТОК_ОХЛАЖДЕНИЯ_ВОДЫ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПониженияПотока{
   ЕСЛИ (ФП_ПотокОхлаждВоды_ИП2К_К1 <= ВРХ_ГРАН_ПОТОКА_ОХЛ_ЖИДК_ИП) В СОСТ Начало;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}



/*===============================================================*/
/*== Контроль Охлаждающей жидкости на входе источника питания  ==*/
/*==         запускается  при включении ИП                     ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ = ПО КУРОЧКИНУ */

ПРОЦ КонтрольОхлаждЖидкостиНаВходе_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1,
                        ФП_ТемператураОхлНаВходе_ИП2К_К1;

 СОСТ Начало {
   В СОСТ Норма;
   ЕСЛИ (ФП_ТемператураОхлНаВходе_ИП2К_К1 >= НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1)
     В СОСТ АварияВышеНормы;
 }
 СОСТ Норма{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВХОДЕ_ИП2К_К1_В_НОРМЕ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Ожидание1 {
   ЕСЛИ (ФП_ТемператураОхлНаВходе_ИП2К_К1 > НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1)
   	В СОСТ Начало;
 }
 СОСТ АварияВышеНормы{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВХОДЕ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Ожидание4 {
   ЕСЛИ (ФП_ТемператураОхлНаВходе_ИП2К_К1 < (НП_УставкаТемпОхлЖидкостиНаВходе_ИП2К_К1 - 1.0)) /*  (гистрезис)*/
     	В СОСТ Начало;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}


/*===============================================================*/
/*== Контроль Охлаждающей жидкости на Выходе источника питания  ==*/
/*==         запускается  при включении ИП                     ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ = ПО КУРОЧКИНУ */

ПРОЦ КонтрольОхлаждЖидкостиНаВыходе_ИП2К_К1{     /* */
 ИЗ ПРОЦ Инициализация  НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1,
                        ФП_ТемператураОхлНаВыходе_ИП2К_К1;

 СОСТ Начало {
    В СЛЕДУЮЩЕЕ;
    ЕСЛИ ((ФП_ТемператураОхлНаВыходе_ИП2К_К1 > ТЕМПЕРАТУРА_ВК_50) &&
          (ФП_ТемператураОхлНаВыходе_ИП2К_К1 <= НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1))
          В СОСТ Перегрев;
    ИНАЧЕ
       ЕСЛИ (ФП_ТемператураОхлНаВыходе_ИП2К_К1 > НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1)
          В СОСТ Авария;
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемператураОхлНаВыходе_ИП2К_К1 >= ТЕМПЕРАТУРА_ВК_50) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемператураОхлНаВыходе_ИП2К_К1 <= ТЕМПЕРАТУРА_ВК_50) ||
          (ФП_ТемператураОхлНаВыходе_ИП2К_К1 > НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1))
          В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_НА_ВЫХОДЕ_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемператураОхлНаВыходе_ИП2К_К1 <= НП_УставкаТемпОхлЖидкостиНаВыходе_ИП2К_К1) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ НарушениеСвязи {
     В СОСТ Начало;
 }
}


/*===============================================================*/
/*== Контроль сопротивления нагревателя источника питания      ==*/
/*==         запускается  при включении ИП                     ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ */
ПРОЦ КонтрольСопротивленияНагревателя_ИП2К_К1{                   /* */
 ИЗ ПРОЦ Инициализация  НП_НижняяГраницаRн_ИП2К_К1,
                        НП_ВерхняяГраницаRн_ИП2К_К1,
                        ФП_Rипн_К1,
                        ФП_Iипн_К1;
 СОСТ Начало {
   ЕСЛИ (ФП_Iипн_К1 > 50.0) В СЛЕДУЮЩЕЕ;  /* борьба с Литвинцевым */
 }
 СОСТ КонтрольУсловий {
   ЕСЛИ (ФП_Iипн_К1 < 50.0) В СОСТ Начало;
   ТАЙМАУТ ДВЕ_СЕКУНДЫ В СЛЕДУЮЩЕЕ;
 }
 СОСТ Проверка {
   ЕСЛИ ((ФП_Rипн_К1 >= НП_НижняяГраницаRн_ИП2К_К1) &&
         (ФП_Rипн_К1 <= НП_ВерхняяГраницаRн_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ                                              В СОСТ НетДиапазона;
 }
 СОСТ Норма {
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОПРОТИВЛЕНИЕ_НАГР_ИП2К_К1_В_НОРМЕ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ОжиданиеИсчезновенияДиапазона {
   ЕСЛИ ((ФП_Rипн_К1 < НП_НижняяГраницаRн_ИП2К_К1 ) ||
         (ФП_Rипн_К1 > НП_ВерхняяГраницаRн_ИП2К_К1)) В СОСТ Начало; /* добавлено */
 }
 СОСТ НетДиапазона{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОПРОТИВЛЕНИЕ_НАГР_ИП2К_К1_ВНЕ_ДИАПАЗОНА)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПоявленияДиапазона{
   ЕСЛИ ((ФП_Rипн_К1 >= НП_НижняяГраницаRн_ИП2К_К1) &&
         (ФП_Rипн_К1 <= НП_ВерхняяГраницаRн_ИП2К_К1)) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}


/*===============================================================*/
/*== Контроль сопротивления изоляции источника питания         ==*/
/*==         запускается  при включении ИП                     ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ */
ПРОЦ КонтрольСопротивленияИзоляции_ИП2К_К1{                   /* */
 ИЗ ПРОЦ Инициализация  
                        НП_НижняяГраницаRиз_ИП2К_К1,
                        ФП_Rиз_ИП2К_К1,
			ФП_Iипн_К1;
  
  
 СОСТ Начало {
   В СОСТ Норма;
   ЕСЛИ (ФП_Rиз_ИП2К_К1 < НП_НижняяГраницаRиз_ИП2К_К1) В СОСТ НижеНормы;
   ЕСЛИ (ФП_Rиз_ИП2К_К1 > ВРХ_ГРАН_R_ИЗОЛЯЦИИ) В СОСТ ВышеНормы;
   ЕСЛИ (ФП_Iипн_К1 < 10.0) В СОСТ ОжиданиеЗаданияТока; /* добавлено */
 }
 СОСТ ОжиданиеЗаданияТока {
   ЕСЛИ (ФП_Iипн_К1 >= 10.0) В СОСТ Начало; 
 }
 СОСТ Норма{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_В_НОРМЕ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ОжиданиеИсчезновенияДиапазона {
   ЕСЛИ ((ФП_Rиз_ИП2К_К1 < НП_НижняяГраницаRиз_ИП2К_К1) &&
         (ФП_Rиз_ИП2К_К1 > ВРХ_ГРАН_R_ИЗОЛЯЦИИ)) В СОСТ Начало;
 }
 СОСТ НижеНормы{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_НИЖЕ_НОРМЫ_АВАРИЯ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПовышенияСопротивления{
   ЕСЛИ (ФП_Rиз_ИП2К_К1 >= НП_НижняяГраницаRиз_ИП2К_К1) В СОСТ Начало;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

 СОСТ ВышеНормы{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОПРОТИВЛЕНИЕ_ИЗОЛ_ИП2К_К1_ВЫШЕ_НОРМЫ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
/* СОСТ ЗапускДоОтмены2мин{
/*    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
/*    В СЛЕДУЮЩЕЕ;
/* }
*/
 СОСТ ОжиданиеПониженияСопротивления{
   ЕСЛИ (ФП_Rиз_ИП2К_К1 <= ВРХ_ГРАН_R_ИЗОЛЯЦИИ) В СОСТ Начало;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}

/*===============================================================*/
/*== Контроль количества модулей источника питания             ==*/
/*==         запускается при включении ЦУКМ                    ==*/
/*==              643.АЭ1610.10121  Д2.0                       ==*/
/*===============================================================*/
/* ИП_ЛИТ */
ПРОЦ КонтрольКоличестваМодулей_ИП2К_К1{                   /* */
 ИЗ ПРОЦ Инициализация  НП_МинимальноеКоличествоМодулей_ИП2К_К1,
                        Флаг_НаличияМодуля0_ИП2К_К1,
                        Флаг_НаличияМодуля1_ИП2К_К1,
                        Флаг_НаличияМодуля2_ИП2К_К1,
                        Флаг_НаличияМодуля3_ИП2К_К1,
                        Флаг_НаличияМодуля4_ИП2К_К1,
                        Флаг_НаличияМодуля5_ИП2К_К1;
 СОСТ Начало {
   ЕСЛИ (НП_МинимальноеКоличествоМодулей_ИП2К_К1 >=
                        (Флаг_НаличияМодуля0_ИП2К_К1+
                        Флаг_НаличияМодуля1_ИП2К_К1+
                        Флаг_НаличияМодуля2_ИП2К_К1+
                        Флаг_НаличияМодуля3_ИП2К_К1+
                        Флаг_НаличияМодуля4_ИП2К_К1+
                        Флаг_НаличияМодуля5_ИП2К_К1))
      В СЛЕДУЮЩЕЕ;
   ИНАЧЕ                                  В СОСТ НедостаточноМодулей;
 }
 СОСТ Норма{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_В_ИП2К_МОДУЛЕЙ_ДОСТАТОЧНО)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ОжиданиеИсчезновенияМодулей {
   ЕСЛИ (НП_МинимальноеКоличествоМодулей_ИП2К_К1 <
                        (Флаг_НаличияМодуля0_ИП2К_К1+
                        Флаг_НаличияМодуля1_ИП2К_К1+
                        Флаг_НаличияМодуля2_ИП2К_К1+
                        Флаг_НаличияМодуля3_ИП2К_К1+
                        Флаг_НаличияМодуля4_ИП2К_К1+
                        Флаг_НаличияМодуля5_ИП2К_К1))
   	В СЛЕДУЮЩЕЕ;
 }
 СОСТ НедостаточноМодулей{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_В_ИП2К_НЕ_ХВАТАЕТ_МОДУЛЕЙ)) В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СЛЕДУЮЩЕЕ;
 }
/* СОСТ ЗапускДоОтмены2мин{
/*    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
/*    В СЛЕДУЮЩЕЕ;
/* }
*/
 СОСТ ОжиданиеПоявленияМодулей{
   ЕСЛИ (НП_МинимальноеКоличествоМодулей_ИП2К_К1 >=
                        (Флаг_НаличияМодуля0_ИП2К_К1+
                        Флаг_НаличияМодуля1_ИП2К_К1+
                        Флаг_НаличияМодуля2_ИП2К_К1+
                        Флаг_НаличияМодуля3_ИП2К_К1+
                        Флаг_НаличияМодуля4_ИП2К_К1+
                        Флаг_НаличияМодуля5_ИП2К_К1))
   	В СОСТ Норма;
   ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}


/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля0_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля0_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля0_ИП2К_К1,
                        ФП_ТокМодуля0_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля0_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля0_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_0_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля0_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_0_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля0_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}


/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля1_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля1_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля1_ИП2К_К1,
                        ФП_ТокМодуля1_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля1_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля1_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_1_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля1_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_1_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля1_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}

/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля2_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля2_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля2_ИП2К_К1,
                        ФП_ТокМодуля2_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля2_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля2_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_2_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля2_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_2_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля2_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}

/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля3_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля3_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля3_ИП2К_К1,
                        ФП_ТокМодуля3_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля3_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля3_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_3_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля3_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_3_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля3_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}

/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля4_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля4_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля4_ИП2К_К1,
                        ФП_ТокМодуля4_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля4_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля4_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_4_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля4_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_4_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля4_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}

/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТокаМодуля5_ИП2К_К1            ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТокаМодуля5_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  
                        НП_ТокЗащитыМодуля_ИП2К_К1,
                        Флаг_НаличияМодуля5_ИП2К_К1,
                        ФП_ТокМодуля5_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля5_ИП2К_К1) {
        ЕСЛИ (ФП_ТокМодуля5_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1) 
           В СОСТ Авария;
        ИНАЧЕ 
           В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_5_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТокМодуля5_ИП2К_К1 > НП_ТокЗащитыМодуля_ИП2К_К1)
       В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТОК_МОДУЛЯ_5_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТокМодуля5_ИП2К_К1 <= НП_ТокЗащитыМодуля_ИП2К_К1)
         В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}



/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля0_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля0_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля0_ИП2К_К1,
                        ФП_ТемпМодуля0_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля0_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля0_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /* добавлено*/
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля0_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля0_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
     В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля0_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля0_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ))
           В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_0_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля0_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)
     В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}


/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля1_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля1_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля1_ИП2К_К1,
                        ФП_ТемпМодуля1_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля1_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля1_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /*  добалено */
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля1_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля1_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля1_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля1_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_1_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля1_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}
/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля2_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля2_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля2_ИП2К_К1,
                        ФП_ТемпМодуля2_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля2_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля2_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /*  добавлено */
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля2_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля2_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля2_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля2_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_2_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля2_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}
/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля3_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля3_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля3_ИП2К_К1,
                        ФП_ТемпМодуля3_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля3_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля3_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /* добавлено*/
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля3_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }                          
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля3_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля3_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля3_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_3_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля3_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}
/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля4_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля4_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля4_ИП2К_К1,
                        ФП_ТемпМодуля4_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля4_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля4_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /* добавлено */
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля4_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля4_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля4_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля4_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_4_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля4_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}
/*====================================================*/
/*==                                                ==*/
/*==         КонтрольТемпературыМодуля5_ИП2К_К1     ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольТемпературыМодуля5_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ,
                        НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ,
                        Флаг_НаличияМодуля5_ИП2К_К1,
                        ФП_ТемпМодуля5_ИП2К_К1;

 СОСТ Начало {
    ЕСЛИ (Флаг_НаличияМодуля5_ИП2К_К1) {
        ЕСЛИ (ФП_ТемпМодуля5_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) /*  добавлено*/
           В СОСТ Авария;
        ИНАЧЕ 
           ЕСЛИ (ФП_ТемпМодуля5_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ)
              В СОСТ Перегрев;
           ИНАЧЕ 
              В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ Норма{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_В_НОРМЕ))
              В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаЗаНорму{
    ЕСЛИ (ФП_ТемпМодуля5_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) В СОСТ Начало;
 }
 СОСТ Перегрев{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_ПРЕДУПР_ВЫШЕ_НОРМЫ))
              В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ КонтрольВыходаИзПерегрева{
    ЕСЛИ ((ФП_ТемпМодуля5_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_ПРЕДУПРЕЖДЕНИЕ) ||
          (ФП_ТемпМодуля5_ИП2К_К1 > НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ)) В СОСТ Начало;
 }
 СОСТ Авария{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ТЕМПЕРАТУРА_МОДУЛЯ_5_ИП2К_К1_АВАРИЯ_ВЫШЕ_НОРМЫ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ЗапускДоОтмены2мин{
    ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ДоОтмены2мин;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыходаИзАварии{
    ЕСЛИ (ФП_ТемпМодуля5_ИП2К_К1 <= НП_ГраничнаяТемпВнутри_ИП2К_К1_АВАРИЯ) В СОСТ Начало;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }
}



/*====================================================*/
/*==                                                ==*/
/*==         КонтрольПитанияСистемыИБП              ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/

ПРОЦ КонтрольПитанияСистемыИБП{
 ИЗ ПРОЦ Инициализация  К_220_НА_ВХОДЕ_ИБП;
 ИЗ ПРОЦ Инициализация  К_ИБП_РАЗРЯЖЕН;
 СОСТ Начало {
      ЕСЛИ ((К_220_НА_ВХОДЕ_ИБП == ВЫКЛ) &&
            (К_ИБП_РАЗРЯЖЕН == ВКЛ)) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ЗапускПроцессовОтключения{
      /* !!!!! ЗАПУСК Процессов */
      СТАРТ ПРОЦ КонецРаботы;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_ОВыключении{
     ЕСЛИ (SendMsgPIVCode(ОТКЛЮЧЕНИЕ_СИСТЕМЫ_ПО_ПИТАНИЮ)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
	   ОШИБКА;
 }
}

/*====================================================*/
/*==           Контроль220_наВходе_ИБП              ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/

ПРОЦ Контроль220наВходеИБП{
 ИЗ ПРОЦ Инициализация  К_220_НА_ВХОДЕ_ИБП;

 СОСТ Начало {
      ЕСЛИ (К_220_НА_ВХОДЕ_ИБП == ВКЛ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_ИБП_НЕТ_220;
 }
 СОСТ СообК_ПИВ_ИБП_ЕСТЬ_220 {
     ЕСЛИ (SendMsgPIVCode(ЕСТЬ_220В_НА_ВХОДЕ_ИБП)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_220_НА_ВХОДЕ_ИБП == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_ИБП_НЕТ_220 {
     ЕСЛИ (SendMsgPIVCode(НЕТ_220В_НА_ВХОДЕ_ИБП)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_220_НА_ВХОДЕ_ИБП == ВКЛ) В СОСТ СообК_ПИВ_ИБП_ЕСТЬ_220;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
	   В СОСТ Начало;
 }
}

/*====================================================*/
/*==           КОНТРОЛЬ РЕСУРСОВ ИБП                ==*/
/*==          643.АЭ1610.10121  Д2.0                ==*/
/*====================================================*/
ПРОЦ КонтрольРесурсовИБП{
 ИЗ ПРОЦ Инициализация  К_ИБП_РАЗРЯЖЕН;

 СОСТ Начало {
      ЕСЛИ (К_ИБП_РАЗРЯЖЕН == ВКЛ) В СЛЕДУЮЩЕЕ;
      ИНАЧЕ В СОСТ СообК_ПИВ_ИБП_В_НОРМЕ;
 }
 СОСТ СообК_ПИВ_ИБП_РАЗРЯЖЕН {
     ЕСЛИ (SendMsgPIVCode(ИБП_РАЗРЯЖЕН)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВыключения {
      ЕСЛИ (К_ИБП_РАЗРЯЖЕН == ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообК_ПИВ_ИБП_В_НОРМЕ {
     ЕСЛИ (SendMsgPIVCode(ИБП_В_НОРМЕ)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеВключения {
      ЕСЛИ (К_ИБП_РАЗРЯЖЕН == ВКЛ) В СОСТ СообК_ПИВ_ИБП_РАЗРЯЖЕН;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
	   В СОСТ Начало;
 }
}

/*====================================================*/
/*==           Блокировка ВК/НК                     ==*/
/*==          643.АЭ1610.10121 Д2.?                 ==*/
/*====================================================*/
ПРОЦ Блокировка_ВК_НК{
ИЗ ПРОЦ Инициализация
                        У_РАЗБЛОКИРОВКА_ВК_НК,
                        ТекущийРежим,
                        ФП_Pвк,
                        К_ЗАКР_ЗАТВОР_В;
 СОСТ Начало {
    ЕСЛИ ( (К_ЗАКР_ЗАТВОР_В == ВКЛ) ||
         (ТекущийРежим != РЕЖИМ_РР) ||
         (ФП_Pвк < АТМОСФЕРА)) У_РАЗБЛОКИРОВКА_ВК_НК = ВЫКЛ; /* заблокировать */
    ИНАЧЕ У_РАЗБЛОКИРОВКА_ВК_НК = ВКЛ;     /* разблокировать */
    В СОСТ Начало;
 }
}

/*=================================================*/
/*== КонтрольНормальных условий функционирования ==*/
/*== термосистемы. Запускается  при инициации    ==*/
/*==                системы                      ==*/
/*  643.АЭ1610.10000 Д2.0                        ==*/
/*=================================================*/
ПРОЦ КонтрольУсловийРаботыИПН{
 ИЗ ПРОЦ Инициализация НП_ТипИПН;

 СОСТ КонтрольВключенияРегуляторовИПН{
  ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ ||
        ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СтартПроцессовКонтроля{
   СТАРТ ПРОЦ КонтрольАварииМН;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияВК_РП1;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияКрышкиВК_РП2;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияНК_РП3;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияБазовойПлиты_РП4;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияКоллектораВакуумного_РП5;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияШтокаПриводаТигля_РП6;
   СТАРТ ПРОЦ КонтрольАварииОхлажденияТоковводов_РП7;
   СТАРТ ПРОЦ КонтрольАварии_К_V1;
   СТАРТ ПРОЦ КОН_ДАВЛЕНИЯ_НК; /* контроль давления */
   СТАРТ ПРОЦ КОН_НАРУШЕНИЯ_ГЕРМЕТИЧНОСТИ_НК; /* контроль нарушения герметичности ч/з насосы */
   ЕСЛИ (НП_ТипИПН == ИПН_ПТД) {
       СТАРТ ПРОЦ КОН_ЗСИ;  /*контроль защиты и сопрот-ия изоляции */
       СТОП ПРОЦ КонтрольПотокаОхлаждЖидкости_ИП2К_К1;
       СТОП ПРОЦ КонтрольОхлаждЖидкостиНаВходе_ИП2К_К1;
       СТОП ПРОЦ КонтрольОхлаждЖидкостиНаВыходе_ИП2К_К1;
       СТОП ПРОЦ КонтрольСопротивленияНагревателя_ИП2К_К1;
       СТОП ПРОЦ КонтрольСопротивленияИзоляции_ИП2К_К1;

       СТОП ПРОЦ КонтрольТокаМодуля0_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТокаМодуля1_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТокаМодуля2_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТокаМодуля3_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТокаМодуля4_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТокаМодуля5_ИП2К_К1; 

       СТОП ПРОЦ КонтрольТемпературыМодуля0_ИП2К_К1; 
       СТОП ПРОЦ КонтрольТемпературыМодуля1_ИП2К_К1;
       СТОП ПРОЦ КонтрольТемпературыМодуля2_ИП2К_К1;
       СТОП ПРОЦ КонтрольТемпературыМодуля3_ИП2К_К1;
       СТОП ПРОЦ КонтрольТемпературыМодуля4_ИП2К_К1;
       СТОП ПРОЦ КонтрольТемпературыМодуля5_ИП2К_К1;
   } ИНАЧЕ {
       СТОП ПРОЦ КОН_ЗСИ;  /*контроль защиты и сопрот-ия изоляции */
       СТАРТ ПРОЦ КонтрольПотокаОхлаждЖидкости_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольОхлаждЖидкостиНаВходе_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольОхлаждЖидкостиНаВыходе_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольСопротивленияНагревателя_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольСопротивленияИзоляции_ИП2К_К1;

       СТАРТ ПРОЦ КонтрольТокаМодуля0_ИП2К_К1; 
       СТАРТ ПРОЦ КонтрольТокаМодуля1_ИП2К_К1; 
       СТАРТ ПРОЦ КонтрольТокаМодуля2_ИП2К_К1; 
       СТАРТ ПРОЦ КонтрольТокаМодуля3_ИП2К_К1; 
       СТАРТ ПРОЦ КонтрольТокаМодуля4_ИП2К_К1; 
       СТАРТ ПРОЦ КонтрольТокаМодуля5_ИП2К_К1; 

       СТАРТ ПРОЦ КонтрольТемпературыМодуля0_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольТемпературыМодуля1_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольТемпературыМодуля2_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольТемпературыМодуля3_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольТемпературыМодуля4_ИП2К_К1;
       СТАРТ ПРОЦ КонтрольТемпературыМодуля5_ИП2К_К1;
   }
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыключенияРегуляторовИПН{
  ЕСЛИ ((!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) &&
        (!(ПРОЦ РЕГ_W_ИПН_К2 В СОСТ АКТИВНОЕ))) В СЛЕДУЮЩЕЕ;
 }
 СОСТ СтопПроцессовКонтроля{
   СТОП ПРОЦ КонтрольАварииМН;
   СТОП ПРОЦ КонтрольАварииОхлажденияВК_РП1;
   СТОП ПРОЦ КонтрольАварииОхлажденияКрышкиВК_РП2;
   СТОП ПРОЦ КонтрольАварииОхлажденияНК_РП3;
   СТОП ПРОЦ КонтрольАварииОхлажденияБазовойПлиты_РП4;
   СТОП ПРОЦ КонтрольАварииОхлажденияКоллектораВакуумного_РП5;
   СТОП ПРОЦ КонтрольАварииОхлажденияШтокаПриводаТигля_РП6;
   СТОП ПРОЦ КонтрольАварииОхлажденияТоковводов_РП7;
   СТОП ПРОЦ КонтрольАварии_К_V1;
   СТОП ПРОЦ КОН_ДАВЛЕНИЯ_НК; /* контроль давления */
   СТОП ПРОЦ КОН_НАРУШЕНИЯ_ГЕРМЕТИЧНОСТИ_НК; /* контроль нарушения герметичности ч/з насосы */
   СТОП ПРОЦ КОН_ЗСИ;  /*контроль защиты и сопрот-ия изоляции */
   СТОП ПРОЦ КонтрольПотокаОхлаждЖидкости_ИП2К_К1;
   СТОП ПРОЦ КонтрольОхлаждЖидкостиНаВходе_ИП2К_К1;
   СТОП ПРОЦ КонтрольОхлаждЖидкостиНаВыходе_ИП2К_К1;
   СТОП ПРОЦ КонтрольСопротивленияНагревателя_ИП2К_К1;
   СТОП ПРОЦ КонтрольСопротивленияИзоляции_ИП2К_К1;

   СТОП ПРОЦ КонтрольТемпературыМодуля0_ИП2К_К1; 
   СТОП ПРОЦ КонтрольТемпературыМодуля1_ИП2К_К1;
   СТОП ПРОЦ КонтрольТемпературыМодуля2_ИП2К_К1;
   СТОП ПРОЦ КонтрольТемпературыМодуля3_ИП2К_К1;
   СТОП ПРОЦ КонтрольТемпературыМодуля4_ИП2К_К1;
   СТОП ПРОЦ КонтрольТемпературыМодуля5_ИП2К_К1;

   В СЛЕДУЮЩЕЕ;
 }
 СОСТ СнятиеАварии{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СНЯТЬ_ОШИБКУ__ВСЕХ_РП_И_МН)) {
          В СОСТ КонтрольВключенияРегуляторовИПН;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Контроль Защиты и Сопротивления Изоляции
 *  643.АЭ1610.10000 Д2.33
 **************************************************/
ПРОЦ КОН_ЗСИ{
 ИЗ ПРОЦ Инициализация  НП_ТипИПН,
                        К_ЗАЩИТА_ПТД,
                        К_ИЗОЛ_ПТД;


 СОСТ Начало{
    ЕСЛИ (НП_ТипИПН == ИПН_ПТД) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ СТОП;
 }
 СОСТ КонтрольУстановкиЗащиты{
    ЕСЛИ (К_ЗАЩИТА_ПТД) В СОСТ Защита;
 }
 СОСТ Защита{
    ЕСЛИ (SendMsgPIVCode(СРАБОТАЛА_ЗАЩИТА_ПТД)) {
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ДоОтмены2мин;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ КонтрольСбросаЗащиты{
    ЕСЛИ (!К_ЗАЩИТА_ПТД) В СОСТ НеЗащита;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Защита;
 }
 СОСТ НеЗащита{
    ЕСЛИ (SendMsgPIVCode(ЗАЩИТА_В_НОРМЕ)) {
         В СОСТ КонтрольУстановкиЗащиты;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*
 СОСТ Сопротивление{
    ЕСЛИ (SendMsgPIVCode(СОПРОТИВЛЕНИЕ_ИЗОЛЯЦИИ_ПТД_НИЖЕ_НОРМЫ)) {
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ДоОтмены2мин;
         ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 */

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }

}

/*************************************************
 *  Контроль Давления в Нижней камере
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
ПРОЦ КОН_ДАВЛЕНИЯ_НК{
 ИЗ ПРОЦ Инициализация
                        ФП_Pнк;
 СОСТ Начало{
    ЕСЛИ (ФП_Pнк >= ДАВЛЕНИЕ_40ММРТСТ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ Предупреждение{
    ЕСЛИ (SendMsgPIVCode(ПРЕДУПРЕЖДЕНИЕ__ДАВЛЕНИЕ_НК_40))
         В СЛЕДУЮЩЕЕ; /* контроль взрыва или нормализации давления */
                      /* но(!) генерации сообщений нету, решение 10.97 */
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольВзрыва{
    ЕСЛИ (ФП_Pнк <= ДАВЛЕНИЕ_35ММРТСТ) В СОСТ Начало;
    ЕСЛИ (ФП_Pнк >= ДАВЛЕНИЕ_45ММРТСТ) В СОСТ Взрыв;
 }
 СОСТ Взрыв{
    ЕСЛИ (SendMsgPIVCode(АВАРИЯ__ДАВЛЕНИЕ_НК_БОЛЬШЕ_45))
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ДоОтмены2мин;
         В СЛЕДУЮЩЕЕ; /* контроль нормализации давления */
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ КонтрольНормализацииДавления{
    ЕСЛИ (ФП_Pнк <= ДАВЛЕНИЕ_40ММРТСТ) В СОСТ Предупреждение;
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ КонтрольВзрыва;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*************************************************
 *  Контроль Нарушения Герметичности в Нижней камере
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
ПРОЦ КОН_НАРУШЕНИЯ_ГЕРМЕТИЧНОСТИ_НК{
 ИЗ ПРОЦ Инициализация
                        К_VE1,
                        К_VE2,
                        К_VE3,
                        К_VE4,
                        К_VE5,
                        К_VE6,
                        К_VE7,
                        К_ЗАКР_VM14,
                        К_ЗАКР_ЗАТВОР_В;

 СОСТ Начало{
    ЕСЛИ (К_VE1 && (К_VE5 || (К_VE3 && (К_VE7 || !К_ЗАКР_VM14)))) В СЛЕДУЮЩЕЕ;
    ЕСЛИ (К_VE2 && (К_VE6 || (К_VE4 && (К_VE7 || !К_ЗАКР_VM14))))
         В СОСТ НарушениеГерметичностиПоКаналуНВР2;
    /* вставить блокировку - "если камера открыта и затвор вакуумный открыт" ??? */
 }
 СОСТ НарушениеГерметичностиПоКаналуНВР1{
    ЕСЛИ (SendMsgPIVCode(АВАРИЯ__НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД1))
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ДоОтмены2мин;
         В СОСТ Пауза;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеГерметичностиПоКаналуНВР2{
    ЕСЛИ (SendMsgPIVCode(АВАРИЯ__НАРУШЕНИЕ_ГЕРМЕТИЧНОСТИ_АВД2))
         ЕСЛИ (!(ПРОЦ ДоОтмены2мин В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ДоОтмены2мин;
         В СОСТ Пауза;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Пауза{
    ТАЙМАУТ ДВЕ_МИНУТЫ В СОСТ Начало;
 }

/*==== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ========*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}


/*================================================*/
/*=   КОНТРОЛЬ ИЗМЕНЕНИЯ ФАКТИЧЕСКИХ ПАРАМЕТРОВ  =*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ ЗапускПроцессовКонтроляИзмененияФактПараметров{

 СОСТ Начало{

    СТАРТ ПРОЦ КонтрольИзменения_ФП_Qгаза;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ИПН_К1_WIUR;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_PSW_ИП2К_К1;  /* добавить */

    СТАРТ ПРОЦ КонтрольИзменения_ФП_Тн;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Тдтн;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Тр;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Тдтр;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_PSWдтн;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_PSWдтр;


    СТАРТ ПРОЦ КонтрольИзменения_L_КЗ_УР;        
    СТАРТ ПРОЦ КонтрольИзменения_Lмонокристалла; 
    СТАРТ ПРОЦ КонтрольИзменения_ВремениТекущегоЭтапа;
    СТАРТ ПРОЦ КонтрольИзменения_Lтек_части_монокристалла;

    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаЗатравливания;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаЗатравка_Шейка;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаШейки;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаШейка_Конус;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаКонуса;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаКонус_Цилиндр;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаСтабилизацииЦилиндра;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаЦилиндра;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаЦилиндр_ОбрКонус;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_ДлинаОбратногоКонуса;

    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаЗатравливания;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаПереходаЗатравка_Шейка;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаШейки;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаПереходаШейка_Конус;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаКонуса;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаПереходаКонус_Цилиндр;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаСтабилизацииЦилиндра;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаЦилиндра;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаПереходаЦилиндр_ОбрКонус;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_МассаОбратногоКонуса;

    СТАРТ ПРОЦ КонтрольИзменения_Hур;
    СТАРТ ПРОЦ КонтрольИзменения_Hур_ДУ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_STAT;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_PEAKW;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_PEAKC;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_RANGE;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_DISP;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_MEAN;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_LASER;

    СТАРТ ПРОЦ КонтрольИзменения_Hур_ДВ;

    СТАРТ ПРОЦ КонтрольИзменения_ФП_Vроста;

    СТАРТ ПРОЦ КонтрольИзменения_Dкр;
    СТАРТ ПРОЦ КонтрольИзменения_Dкр_ТДД;
    СТАРТ ПРОЦ КонтрольИзменения_Dкр_ДВ;


    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк1;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк2;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк3;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк4;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк5;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк6;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк7;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Твк8;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Uдк;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Pнк;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Pвк;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Pавд1;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Pавд2;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Ммонокристалла;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ЗР;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ЗУ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ЗВ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ТР;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ТУ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_I_ТВ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_VзР;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_VзУ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Vз;
    СТАРТ ПРОЦ КонтрольИзменения_ЗД_Vз;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Xз;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Wз;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Wз_УГОЛ;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_VтР;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_VтУ;
    СТАРТ ПРОЦ КонтрольИзменения_ЗД_Vт;

    СТАРТ ПРОЦ КонтрольИзменения_ФП_Vт;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Xт;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Wт;
    СТАРТ ПРОЦ КонтрольИзменения_ФП_Wт_УГОЛ;
    СТАРТ ПРОЦ КонтрольИзмененияФП_Wз_дляТДД;
    СТАРТ ПРОЦ КонтрольИзмененияФП_Wт_дляТДД;
    СТАРТ ПРОЦ КонтрольИзмененияФП_Hур_дляТДД;
    СТАРТ ПРОЦ КонтрольИзмененияЗД_Hур_дляТДД;


    СТАРТ ПРОЦ КонтрольДостоверностиДТН;
    СТАРТ ПРОЦ КонтрольДостоверностиДТР;


    СТОП;
 }
} /* Конец процесса ЗапускПроцессовКонтроляИзмененияФактПараметров  */
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Qгаза{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
			 ФП_Qгаза;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Qгаза);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Qгаза) {
         ЛП_Предыдущее = ФП_Qгаза;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Qгаза, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_PSW_ИП2К_К1{                    /*  добавить */
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;
 ЦЕЛ ЛП_Текущее ЛОКАЛ;
 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{ /* для первой передачи значения в сл. состоянии: */
    ЛП_Текущее = GetFP_PSW_IP2K_K1() | 2; /* бит 1 игнорируется */
    ЛП_Предыдущее = (~ЛП_Текущее);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЛП_Текущее = GetFP_PSW_IP2K_K1();   
    ЕСЛИ (ЛП_Предыдущее != (ЛП_Текущее | 2)) { /* бит 1 игнорируется (всегда в 1) */
         ЛП_Предыдущее = ЛП_Текущее | 2;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_PSW_ИП2К_К1, ЛП_Текущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}


/*************************************************
 *  Контроль Изменения ФП ИПН К1 WIUR
 *  рассчитывает в унифицированном виде ФП ИПН
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
ПРОЦ КонтрольИзменения_ФП_ИПН_К1_WIUR{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Iипн_К1,
                        ФП_Uипн_К1,
                        ФП_Wипн_К1,
                        ФП_Rипн_К1;

 ПЛАВ ЛП_ФП_Iипн_К1    ЛОКАЛ;
 ПЛАВ ЛП_ФП_Uипн_К1    ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_Iипн_К1 = !ФП_Iипн_К1;
    ЛП_ФП_Uипн_К1 = !ФП_Uипн_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаИзменения_ПТД{
    ЕСЛИ ((ЛП_ФП_Iипн_К1 != ФП_Iипн_К1) ||
          (ЛП_ФП_Uипн_К1 != ФП_Uипн_К1)) {
         ЛП_ФП_Iипн_К1 = ФП_Iипн_К1;
         ЛП_ФП_Uипн_К1 = ФП_Uипн_К1;
         В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ ПередачаИзменения_ПИВ_I{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Iипн_К1, ФП_Iипн_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза1{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ ПередачаИзменения_ПИВ_U;
 }
 СОСТ ПередачаИзменения_ПИВ_U{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Uипн_К1, ФП_Uипн_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза2{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ ПередачаИзменения_ПИВ_W;
 }
 СОСТ ПередачаИзменения_ПИВ_W{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Wипн_К1, ФП_Wипн_К1/1000.0)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза3{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ ПередачаИзменения_ПИВ_R;
 }
 СОСТ ПередачаИзменения_ПИВ_R{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Rипн_К1, ФП_Rипн_К1*1000.0)) В СОСТ Начало;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ПотокОхлаждВоды_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ПотокОхлаждВоды_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ПотокОхлаждВоды_ИП2К_К1;

 ПЛАВ ЛП_ФП_ПотокОхлаждВоды_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ПотокОхлаждВоды_ИП2К_К1 = !ФП_ПотокОхлаждВоды_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ПотокОхлаждВоды_ИП2К_К1 != ФП_ПотокОхлаждВоды_ИП2К_К1) {
       ЛП_ФП_ПотокОхлаждВоды_ИП2К_К1 = ФП_ПотокОхлаждВоды_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ПотокОхлаждВоды_ИП2К_К1, ФП_ПотокОхлаждВоды_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемператураОхлНаВходе_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВходе_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемператураОхлНаВходе_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемператураОхлНаВходе_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемператураОхлНаВходе_ИП2К_К1 = !ФП_ТемператураОхлНаВходе_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемператураОхлНаВходе_ИП2К_К1 != ФП_ТемператураОхлНаВходе_ИП2К_К1) {
       ЛП_ФП_ТемператураОхлНаВходе_ИП2К_К1 = ФП_ТемператураОхлНаВходе_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемператураОхлНаВходе_ИП2К_К1, ФП_ТемператураОхлНаВходе_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемператураОхлНаВыходе_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемператураОхлНаВыходе_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемператураОхлНаВыходе_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемператураОхлНаВыходе_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемператураОхлНаВыходе_ИП2К_К1 = !ФП_ТемператураОхлНаВыходе_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемператураОхлНаВыходе_ИП2К_К1 != ФП_ТемператураОхлНаВыходе_ИП2К_К1) {
       ЛП_ФП_ТемператураОхлНаВыходе_ИП2К_К1 = ФП_ТемператураОхлНаВыходе_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемператураОхлНаВыходе_ИП2К_К1, ФП_ТемператураОхлНаВыходе_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_Rиз_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_Rиз_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Rиз_ИП2К_К1;

 ПЛАВ ЛП_ФП_Rиз_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_Rиз_ИП2К_К1 = !ФП_Rиз_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_Rиз_ИП2К_К1 != ФП_Rиз_ИП2К_К1) {
       ЛП_ФП_Rиз_ИП2К_К1 = ФП_Rиз_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Rиз_ИП2К_К1, ФП_Rиз_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*************************************************
 *  Контроль Изменения ФП_ТокМодуля0_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля0_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля0_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля0_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля0_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля0_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля0_ИП2К_К1, ФП_ТокМодуля0_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}


/*************************************************
 *  Контроль Изменения ФП_ТокМодуля1_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля1_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля1_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля1_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля1_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля1_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля1_ИП2К_К1, ФП_ТокМодуля1_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*************************************************
 *  Контроль Изменения ФП_ТокМодуля2_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля2_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля2_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля2_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля2_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля2_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля2_ИП2К_К1, ФП_ТокМодуля2_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*************************************************
 *  Контроль Изменения ФП_ТокМодуля3_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля3_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля3_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля3_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля3_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля3_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля3_ИП2К_К1, ФП_ТокМодуля3_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*************************************************
 *  Контроль Изменения ФП_ТокМодуля4_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля4_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля4_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля4_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля4_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля4_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля4_ИП2К_К1, ФП_ТокМодуля4_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*************************************************
 *  Контроль Изменения ФП_ТокМодуля5_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0                          
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТокМодуля5_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТокМодуля5_ИП2К_К1;

 ПЛАВ ЛП_Предыдущее     ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = !ФП_ТокМодуля5_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ТокМодуля5_ИП2К_К1) {
       ЛП_Предыдущее = ФП_ТокМодуля5_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТокМодуля5_ИП2К_К1, ФП_ТокМодуля5_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}


/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля0_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля0_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля0_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля0_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля0_ИП2К_К1 = !ФП_ТемпМодуля0_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля0_ИП2К_К1 != ФП_ТемпМодуля0_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля0_ИП2К_К1 = ФП_ТемпМодуля0_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля0_ИП2К_К1, ФП_ТемпМодуля0_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля1_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля1_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля1_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля1_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля1_ИП2К_К1 = !ФП_ТемпМодуля1_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля1_ИП2К_К1 != ФП_ТемпМодуля1_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля1_ИП2К_К1 = ФП_ТемпМодуля1_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля1_ИП2К_К1, ФП_ТемпМодуля1_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля2_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля2_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля2_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля2_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля2_ИП2К_К1 = !ФП_ТемпМодуля2_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля2_ИП2К_К1 != ФП_ТемпМодуля2_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля2_ИП2К_К1 = ФП_ТемпМодуля2_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля2_ИП2К_К1, ФП_ТемпМодуля2_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля3_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля3_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля3_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля3_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля3_ИП2К_К1 = !ФП_ТемпМодуля3_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля3_ИП2К_К1 != ФП_ТемпМодуля3_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля3_ИП2К_К1 = ФП_ТемпМодуля3_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля3_ИП2К_К1, ФП_ТемпМодуля3_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля4_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля4_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля4_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля4_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля4_ИП2К_К1 = !ФП_ТемпМодуля4_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля4_ИП2К_К1 != ФП_ТемпМодуля4_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля4_ИП2К_К1 = ФП_ТемпМодуля4_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля4_ИП2К_К1, ФП_ТемпМодуля4_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_ТемпМодуля5_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_ТемпМодуля5_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ТемпМодуля5_ИП2К_К1;

 ПЛАВ ЛП_ФП_ТемпМодуля5_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_ТемпМодуля5_ИП2К_К1 = !ФП_ТемпМодуля5_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_ТемпМодуля5_ИП2К_К1 != ФП_ТемпМодуля5_ИП2К_К1) {
       ЛП_ФП_ТемпМодуля5_ИП2К_К1 = ФП_ТемпМодуля5_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ТемпМодуля5_ИП2К_К1, ФП_ТемпМодуля5_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_СостояниеМодуля_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_СостояниеМодуля_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_СостояниеМодуля_ИП2К_К1;

 ДЦЕЛ ЛП_ФП_СостояниеМодуля_ИП2К_К1  ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_СостояниеМодуля_ИП2К_К1 = !ФП_СостояниеМодуля_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_СостояниеМодуля_ИП2К_К1 != ФП_СостояниеМодуля_ИП2К_К1) {
       ЛП_ФП_СостояниеМодуля_ИП2К_К1 = ФП_СостояниеМодуля_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_СостояниеМодуля_ИП2К_К1, ФП_СостояниеМодуля_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*************************************************
 *  Контроль Изменения ФП_U380_ИП2К_К1
 *  643.АЭ1610.10000 Д2.0
 **************************************************/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзменения_ФП_U380_ИП2К_К1{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_U380_ИП2К_К1;

 ПЛАВ ЛП_ФП_U380_ИП2К_К1         ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_U380_ИП2К_К1 = !ФП_U380_ИП2К_К1;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_ФП_U380_ИП2К_К1 != ФП_U380_ИП2К_К1) {
       ЛП_ФП_U380_ИП2К_К1 = ФП_U380_ИП2К_К1;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаИзм_ПИВ{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_U380_ИП2К_К1, ФП_U380_ИП2К_К1)) В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Тн{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Тн;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Тн);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Тн) {
         ЛП_Предыдущее = ФП_Тн;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Тн, ФП_Тн))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Тдтн{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Тдтн;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Тдтн);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Тдтн) {
         ЛП_Предыдущее = ФП_Тдтн;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Тдтн, ФП_Тдтн))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Тр{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Тр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Тр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Тр) {
         ЛП_Предыдущее = ФП_Тр;
         В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Тр, ФП_Тр))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }


/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Тдтр{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Тдтр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Тдтр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Тдтр) {
         ЛП_Предыдущее = ФП_Тдтр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзмененииТдатчика{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Тдтр, ФП_Тдтр))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_PSWдтр{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_PSWдтр;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_PSWдтр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_PSWдтр) {
         ЛП_Предыдущее = ФП_PSWдтр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_PSWдтр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_PSWдтн{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_PSWдтн;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_PSWдтн);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_PSWдтн) {
         ЛП_Предыдущее = ФП_PSWдтн;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_PSWдтн, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_L_КЗ_УР{
 ИЗ ПРОЦ Инициализация ФлагL_КЗ_УР,
                       ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_L_КЗ_УР;

 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагL_КЗ_УР);
    ЛП_Предыдущее = (!ФП_L_КЗ_УР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагL_КЗ_УР) {
         ЕСЛИ (ФлагL_КЗ_УР == ВКЛ) {
              ЛП_Предыдущее = ФП_L_КЗ_УР;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_L_КЗ_УР) {
              ЛП_Предыдущее = ФП_L_КЗ_УР;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_L_КЗ_УР, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_L_КЗ_УР, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_L_КЗ_УР)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_L_КЗ_УР)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Lмонокристалла{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФлагLмонокристалла,
                       ФП_Lмонокристалла;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагLмонокристалла);
    ЛП_Предыдущее = (!ФП_Lмонокристалла);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагLмонокристалла) {
         ЕСЛИ (ФлагLмонокристалла == ВКЛ) {
              ЛП_Предыдущее = ФП_Lмонокристалла;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Lмонокристалла) {
              ЛП_Предыдущее = ФП_Lмонокристалла;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Lмонокристалла, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Lмонокристалла, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Lмонокристалла)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Lмонокристалла)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0  добавить            =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Lтек_части_монокристалла{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ТекущийЭтап,
                        ФП_Lначала_текущей_части_монокристалла,
                        ФП_Lмонокристалла,
                        ОП_Lсумм_Цилиндров;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 ПЛАВ ЛП_ТекущаяДлина ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!(ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла));
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЛП_ТекущаяДлина = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
    ЕСЛИ (ЛП_Предыдущее != ЛП_ТекущаяДлина) {
         ЛП_Предыдущее = ЛП_ТекущаяДлина;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) {
         ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Lтекущей_части_монокристалла, 
                                    (ЛП_Предыдущее + ОП_Lсумм_Цилиндров)))
            В СЛЕДУЮЩЕЕ;
     } ИНАЧЕ {
         ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Lтекущей_части_монокристалла, ЛП_Предыдущее))
            В СЛЕДУЮЩЕЕ;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаЗатравливания{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаЗатравливания;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаЗатравливания);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаЗатравливания) {
         ЛП_Предыдущее = ФП_ДлинаЗатравливания;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаЗатравливания, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаЗатравка_Шейка{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаПереходаЗатравка_Шейка;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаПереходаЗатравка_Шейка);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаПереходаЗатравка_Шейка) {
         ЛП_Предыдущее = ФП_ДлинаПереходаЗатравка_Шейка;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаПереходаЗатравка_Шейка, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаШейки{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаШейки;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаШейки);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаШейки) {
         ЛП_Предыдущее = ФП_ДлинаШейки;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаШейки, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаШейка_Конус{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаПереходаШейка_Конус;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаПереходаШейка_Конус);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаПереходаШейка_Конус) {
         ЛП_Предыдущее = ФП_ДлинаПереходаШейка_Конус;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаПереходаШейка_Конус, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаКонуса{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаКонуса;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаКонуса);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаКонуса) {
         ЛП_Предыдущее = ФП_ДлинаКонуса;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаКонуса, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаКонус_Цилиндр{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаПереходаКонус_Цилиндр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаПереходаКонус_Цилиндр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаПереходаКонус_Цилиндр) {
         ЛП_Предыдущее = ФП_ДлинаПереходаКонус_Цилиндр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаПереходаКонус_Цилиндр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаСтабилизацииЦилиндра{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаСтабилизацииЦилиндра;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаСтабилизацииЦилиндра);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаСтабилизацииЦилиндра) {
         ЛП_Предыдущее = ФП_ДлинаСтабилизацииЦилиндра;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаСтабилизацииЦилиндра, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаЦилиндра{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаЦилиндра;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаЦилиндра);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаЦилиндра) {
         ЛП_Предыдущее = ФП_ДлинаЦилиндра;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаЦилиндра, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаПереходаЦилиндр_ОбрКонус{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаПереходаЦилиндр_ОбрКонус;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаПереходаЦилиндр_ОбрКонус);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаПереходаЦилиндр_ОбрКонус) {
         ЛП_Предыдущее = ФП_ДлинаПереходаЦилиндр_ОбрКонус;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаПереходаЦилиндр_ОбрКонус, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_ДлинаОбратногоКонуса{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ДлинаОбратногоКонуса;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ДлинаОбратногоКонуса);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ДлинаОбратногоКонуса) {
         ЛП_Предыдущее = ФП_ДлинаОбратногоКонуса;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ДлинаОбратногоКонуса, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}



/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаЗатравливания{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаЗатравливания;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаЗатравливания);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаЗатравливания) {
         ЛП_Предыдущее = ФП_МассаЗатравливания;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаЗатравливания, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаПереходаЗатравка_Шейка{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаПереходаЗатравка_Шейка;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаПереходаЗатравка_Шейка);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаПереходаЗатравка_Шейка) {
         ЛП_Предыдущее = ФП_МассаПереходаЗатравка_Шейка;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаПереходаЗатравка_Шейка, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаШейки{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаШейки;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаШейки);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаШейки) {
         ЛП_Предыдущее = ФП_МассаШейки;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаШейки, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаПереходаШейка_Конус{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаПереходаШейка_Конус;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаПереходаШейка_Конус);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаПереходаШейка_Конус) {
         ЛП_Предыдущее = ФП_МассаПереходаШейка_Конус;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаПереходаШейка_Конус, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаКонуса{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаКонуса;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаКонуса);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаКонуса) {
         ЛП_Предыдущее = ФП_МассаКонуса;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаКонуса, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаПереходаКонус_Цилиндр{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаПереходаКонус_Цилиндр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаПереходаКонус_Цилиндр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаПереходаКонус_Цилиндр) {
         ЛП_Предыдущее = ФП_МассаПереходаКонус_Цилиндр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаПереходаКонус_Цилиндр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаСтабилизацииЦилиндра{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаСтабилизацииЦилиндра;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаСтабилизацииЦилиндра);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаСтабилизацииЦилиндра) {
         ЛП_Предыдущее = ФП_МассаСтабилизацииЦилиндра;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаСтабилизацииЦилиндра, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаЦилиндра{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаЦилиндра;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаЦилиндра);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаЦилиндра) {
         ЛП_Предыдущее = ФП_МассаЦилиндра;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаЦилиндра, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаПереходаЦилиндр_ОбрКонус{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаПереходаЦилиндр_ОбрКонус;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаПереходаЦилиндр_ОбрКонус);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаПереходаЦилиндр_ОбрКонус) {
         ЛП_Предыдущее = ФП_МассаПереходаЦилиндр_ОбрКонус;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаПереходаЦилиндр_ОбрКонус, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_МассаОбратногоКонуса{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_МассаОбратногоКонуса;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_МассаОбратногоКонуса);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_МассаОбратногоКонуса) {
         ЛП_Предыдущее = ФП_МассаОбратногоКонуса;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_МассаОбратногоКонуса, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}


/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ВремениТекущегоЭтапа{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_ВремяТекущегоЭтапа;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ВремяТекущегоЭтапа);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_ВремяТекущегоЭтапа) {
         ЛП_Предыдущее = ФП_ВремяТекущегоЭтапа;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_ВремяТекущегоЭтапа, ФП_ВремяТекущегоЭтапа))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}


/*================================================*/
/*=   643.АЭ1610.10000 Д2.0 добавить                     =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ОП_Тсумм_Цилиндров{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ТекущийЭтап,
                        ОП_Тсумм_Цилиндров,
                        ФП_ВремяТекущегоЭтапа;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_ВремяТекущегоЭтапа);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) {
      ЕСЛИ (ЛП_Предыдущее != ФП_ВремяТекущегоЭтапа) {
         ЛП_Предыдущее = ФП_ВремяТекущегоЭтапа;
         В СЛЕДУЮЩЕЕ;
      }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ИЗМН_ОП_Тсумм_Цилиндров, 
                               ОП_Тсумм_Цилиндров + ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0 добавить             =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ОП_Lсумм_Цилиндров{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ТекущийЭтап,
                        ОП_Lсумм_Цилиндров,
                        ФП_Lмонокристалла,
                        ФП_Lначала_текущей_части_монокристалла;

 ПЛАВ ЛП_Текущее ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Текущее = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
    ЛП_Предыдущее = (!ЛП_Текущее);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) {
      ЛП_Текущее = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
      ЕСЛИ (ЛП_Предыдущее != ЛП_Текущее) {
         ЛП_Предыдущее = ЛП_Текущее;
         В СЛЕДУЮЩЕЕ;
      }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ОП_Lсумм_Цилиндров, 
           ОП_Lсумм_Цилиндров + ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0 добавить             =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ОП_Мсумм_Цилиндров{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ТекущийЭтап,
                        ОП_Мсумм_Цилиндров,
                        ФП_Ммонокристалла,
                        ФП_Мначала_текущей_части_монокристалла;

 ПЛАВ ЛП_Текущее ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Текущее = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
    ЛП_Предыдущее = (!ЛП_Текущее);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ТекущийЭтап == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) {
      ЛП_Текущее = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
      ЕСЛИ (ЛП_Предыдущее != ЛП_Текущее) {
         ЛП_Предыдущее = ЛП_Текущее;
         В СЛЕДУЮЩЕЕ;
      }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ОП_Мсумм_Цилиндров, 
           ОП_Мсумм_Цилиндров + ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ КонтрольИзменения;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0  УНИЧТОЖИТЬ после коррекции Д2 2006.04.28  =*/
/*================================================*/
/*=ПРОЦ СчетВремениТекущегоЭтапа{ 
/*= ИЗ ПРОЦ Инициализация
/*=                        ФП_ДлинаЦилиндра,
/*=                        ФП_МассаЦилиндра,
/*=                        ФП_Lмонокристалла                          ,
/*=                        ФП_Ммонокристалла                          ,
/*=                        ФП_Lначала_текущей_части_монокристалла     ,
/*=                        ФП_Мначала_текущей_части_монокристалла     ,
/*=                        ТекущийЭтап,
/*=                        ФП_ВремяТекущегоЭтапа;
/*= ЦЕЛ ЛП_Предыдущее ЛОКАЛ;
/*=
/*= СОСТ Начало{
/*=    ЛП_Предыдущее = !ТекущийЭтап;
/*=    В СЛЕДУЮЩЕЕ;
/*= }
/*= СОСТ Счет{
/*=    ЕСЛИ (ЛП_Предыдущее != ТекущийЭтап) {
/*=         ЛП_Предыдущее = ТекущийЭтап;
/*=         ФП_Lначала_текущей_части_монокристалла = ФП_Lмонокристалла;
/*=         ФП_Мначала_текущей_части_монокристалла = ФП_Ммонокристалла;
/*=         ФП_ВремяТекущегоЭтапа = 0;
/*=    }
/*=    ФП_ВремяТекущегоЭтапа++;
/*=    В СОСТ Счет;
/*= }
/*=}
*/ /*добавить*/


/*================================================*/
/*=       КОНТРОЛЬ МАСС И ДЛИН КРИСТАЛЛА         =*/
/*=       643.АЭ1610.10000 Д2                    =*/
/*================================================*/
ПРОЦ КонтрольМассИ_Длин{
ИЗ ПРОЦ Инициализация
                        ФП_ВремяТекущегоЭтапа,

                        ОП_Lсумм_Цилиндров,
                        ОП_Мсумм_Цилиндров,
                        ОП_Тсумм_Цилиндров,

                        ОП_Мзатравки,
                        НП_Мзатравкодержателя,

                        ОП_Lзатравки,
                        ОП_КоординатаТекЧастиМонокристалла,
                        ОП_КоординатаНачалаЗатравливания,
                        ОП_КоординатаНачалаПереходаЗатравка_Шейка,
                        ОП_КоординатаНачалаШейки,
                        ОП_КоординатаНачалаПереходаШейка_Конус,
                        ОП_КоординатаНачалаКонуса,
                        ОП_КоординатаНачалаПереходаКонус_Цилиндр,
                        ОП_КоординатаНачалаСтабилизацииЦилиндра,
                        ОП_КоординатаНачалаЦилиндра,
                        ОП_КоординатаНачалаПереходаЦилиндр_ОбрКонус,
                        ОП_КоординатаНачалаОбратногоКонуса,

                        ФП_Xз,
                        ФП_Ммонокристалла,
                        ФП_Lмонокристалла,
                        ФП_Lначала_текущей_части_монокристалла ,
                        ФП_Мначала_текущей_части_монокристалла ,

                        ФП_ДлинаЗатравливания                  ,
                        ФП_ДлинаПереходаЗатравка_Шейка         ,
                        ФП_ДлинаШейки                          ,
                        ФП_ДлинаПереходаШейка_Конус            ,
                        ФП_ДлинаКонуса                         ,
                        ФП_ДлинаПереходаКонус_Цилиндр          ,
                        ФП_ДлинаСтабилизацииЦилиндра            ,
                        ФП_ДлинаЦилиндра                       ,
                        ФП_ДлинаПереходаЦилиндр_ОбрКонус       ,
                        ФП_ДлинаОбратногоКонуса                ,

                        ФП_МассаЗатравливания                  ,
                        ФП_МассаПереходаЗатравка_Шейка         ,
                        ФП_МассаШейки                          ,
                        ФП_МассаПереходаШейка_Конус            ,
                        ФП_МассаКонуса                         ,
                        ФП_МассаПереходаКонус_Цилиндр          ,
                        ФП_МассаСтабилизацииЦилиндра            ,
                        ФП_МассаЦилиндра                       ,
                        ФП_МассаПереходаЦилиндр_ОбрКонус       ,
                        ФП_МассаОбратногоКонуса                ,
                        ТекущийЭтап;


 ЦЕЛ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ТекущийЭтап);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ФП_ВремяТекущегоЭтапа++;
    ЕСЛИ (ЛП_Предыдущее != ТекущийЭтап) { 
         ЕСЛИ (ЛП_Предыдущее == ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА) { /* добавить */
            ЕСЛИ (ФП_ДлинаЦилиндра > 0.0) ОП_Lсумм_Цилиндров += ФП_ДлинаЦилиндра; /* добавить 06.07.03 */
            ЕСЛИ (ФП_МассаЦилиндра > 0.0) ОП_Мсумм_Цилиндров += ФП_МассаЦилиндра;
            ОП_Тсумм_Цилиндров += ФП_ВремяТекущегоЭтапа;
	        СТАРТ ПРОЦ КонтрольИзменения_Lтек_части_монокристалла; /* немедленная передача перед запуском ТП добавить 06.05.22 */
         }
         ЛП_Предыдущее = ТекущийЭтап;
         ФП_Мначала_текущей_части_монокристалла = ФП_Ммонокристалла;
         ФП_Lначала_текущей_части_монокристалла = ФП_Lмонокристалла;
         ФП_ВремяТекущегоЭтапа = 0;

         РАЗБОР (ЛП_Предыдущее) {
            СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
                 ОП_Мзатравки = ФП_Ммонокристалла;
                 ФП_МассаЗатравливания             = 0.0;
                 ФП_МассаПереходаЗатравка_Шейка    = 0.0;
                 ФП_МассаШейки                     = 0.0;
                 ФП_МассаПереходаШейка_Конус       = 0.0;
                 ФП_МассаКонуса                    = 0.0;
                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра      = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ОП_Lзатравки = ФП_Lмонокристалла;
                 ФП_ДлинаЗатравливания             = 0.0;
                 ФП_ДлинаПереходаЗатравка_Шейка    = 0.0;
                 ФП_ДлинаШейки                     = 0.0;
                 ФП_ДлинаПереходаШейка_Конус       = 0.0;
                 ФП_ДлинаКонуса                    = 0.0;
                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра      = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 СТАРТ ПРОЦ Передача_ОП_Мзатравки;
                 СТАРТ ПРОЦ Передача_ОП_Lзатравки;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
                 ФП_МассаЗатравливания             = ФП_Ммонокристалла -
                                                     ОП_Мзатравки;
                 ФП_МассаПереходаЗатравка_Шейка    = 0.0;
                 ФП_МассаШейки                     = 0.0;
                 ФП_МассаПереходаШейка_Конус       = 0.0;
                 ФП_МассаКонуса                    = 0.0;
                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра       = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаЗатравливания             = ФП_Lмонокристалла -
                                                     ОП_Lзатравки;
                 ФП_ДлинаПереходаЗатравка_Шейка    = 0.0;
                 ФП_ДлинаШейки                     = 0.0;
                 ФП_ДлинаПереходаШейка_Конус       = 0.0;
                 ФП_ДлинаКонуса                    = 0.0;
                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра       = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
                 ФП_МассаПереходаЗатравка_Шейка    = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания);

                 ФП_МассаШейки                     = 0.0;
                 ФП_МассаПереходаШейка_Конус       = 0.0;
                 ФП_МассаКонуса                    = 0.0;
                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра       = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаПереходаЗатравка_Шейка    = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания);

                 ФП_ДлинаШейки                     = 0.0;
                 ФП_ДлинаПереходаШейка_Конус       = 0.0;
                 ФП_ДлинаКонуса                    = 0.0;
                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра       = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
                 ФП_МассаШейки                     = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка);

                 ФП_МассаПереходаШейка_Конус       = 0.0;
                 ФП_МассаКонуса                    = 0.0;
                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра      = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаШейки                     = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка);

                 ФП_ДлинаПереходаШейка_Конус       = 0.0;
                 ФП_ДлинаКонуса                    = 0.0;
                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра      = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
                 ФП_МассаПереходаШейка_Конус       = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки);

                 ФП_МассаКонуса                    = 0.0;
                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра       = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаПереходаШейка_Конус       = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки);

                 ФП_ДлинаКонуса                    = 0.0;
                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра       = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
                 ФП_МассаКонуса                    = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус);

                 ФП_МассаПереходаКонус_Цилиндр     = 0.0;
                 ФП_МассаСтабилизацииЦилиндра       = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаКонуса                    = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус);

                 ФП_ДлинаПереходаКонус_Цилиндр     = 0.0;
                 ФП_ДлинаСтабилизацииЦилиндра       = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
                 ФП_МассаПереходаКонус_Цилиндр     = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус +
                                                     ФП_МассаКонуса);

                 ФП_МассаСтабилизацииЦилиндра       = 0.0;
                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаПереходаКонус_Цилиндр     = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус +
                                                     ФП_ДлинаКонуса);

                 ФП_ДлинаСтабилизацииЦилиндра       = 0.0;
                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
                 ФП_МассаСтабилизацииЦилиндра       = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус +
                                                     ФП_МассаКонуса +
                                                     ФП_МассаПереходаКонус_Цилиндр);

                 ФП_МассаЦилиндра                  = 0.0;
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаСтабилизацииЦилиндра       = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус +
                                                     ФП_ДлинаКонуса +
                                                     ФП_ДлинаПереходаКонус_Цилиндр);

                 ФП_ДлинаЦилиндра                  = 0.0;
                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
                 ФП_МассаЦилиндра                  = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус +
                                                     ФП_МассаКонуса +
                                                     ФП_МассаПереходаКонус_Цилиндр +
                                                     ФП_МассаСтабилизацииЦилиндра);

                 ФП_МассаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаЦилиндра                  = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус +
                                                     ФП_ДлинаКонуса +
                                                     ФП_ДлинаПереходаКонус_Цилиндр +
                                                     ФП_ДлинаСтабилизацииЦилиндра);

                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = 0.0;
                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
                 ФП_МассаПереходаЦилиндр_ОбрКонус  = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус +
                                                     ФП_МассаКонуса +
                                                     ФП_МассаПереходаКонус_Цилиндр +
                                                     ФП_МассаСтабилизацииЦилиндра +
                                                     ФП_МассаЦилиндра);

                 ФП_МассаОбратногоКонуса           = 0.0;

                 ФП_ДлинаПереходаЦилиндр_ОбрКонус  = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус +
                                                     ФП_ДлинаКонуса +
                                                     ФП_ДлинаПереходаКонус_Цилиндр +
                                                     ФП_ДлинаСтабилизацииЦилиндра +
                                                     ФП_ДлинаЦилиндра);

                 ФП_ДлинаОбратногоКонуса           = 0.0;
                 КОНЕЦ;
            СЛУЧАЙ ЭТАП_ОТРЫВ_КРИСТАЛЛА:
                 ФП_МассаОбратногоКонуса           = ФП_Ммонокристалла -
                                                     (ОП_Мзатравки +
                                                     ФП_МассаЗатравливания +
                                                     ФП_МассаПереходаЗатравка_Шейка +
                                                     ФП_МассаШейки +
                                                     ФП_МассаПереходаШейка_Конус +
                                                     ФП_МассаКонуса +
                                                     ФП_МассаПереходаКонус_Цилиндр +
                                                     ФП_МассаСтабилизацииЦилиндра +
                                                     ФП_МассаЦилиндра +
                                                     ФП_МассаПереходаЦилиндр_ОбрКонус);

                 ФП_ДлинаОбратногоКонуса           = ФП_Lмонокристалла -
                                                     (ОП_Lзатравки +
                                                     ФП_ДлинаЗатравливания +
                                                     ФП_ДлинаПереходаЗатравка_Шейка +
                                                     ФП_ДлинаШейки +
                                                     ФП_ДлинаПереходаШейка_Конус +
                                                     ФП_ДлинаКонуса +
                                                     ФП_ДлинаПереходаКонус_Цилиндр +
                                                     ФП_ДлинаСтабилизацииЦилиндра +
                                                     ФП_ДлинаЦилиндра +
                                                     ФП_ДлинаПереходаЦилиндр_ОбрКонус);
                 КОНЕЦ;
         }
    }  /* Обработка по изменению этапа */


    РАЗБОР (ЛП_Предыдущее) {           /* Штатный расчет длин и масс */
       СЛУЧАЙ ЭТАП_ЗАТРАВЛИВАНИЕ:
            ФП_МассаЗатравливания             = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаЗатравливания             = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЗАТР_ШЕЙКА:
            ФП_МассаПереходаЗатравка_Шейка    = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаПереходаЗатравка_Шейка    = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ:
            ФП_МассаШейки                     = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаШейки                     = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ШЕЙКА_КОНУС:
            ФП_МассаПереходаШейка_Конус = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаПереходаШейка_Конус = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА:
            ФП_МассаКонуса                    = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаКонуса                    = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ПЕРЕХОД_КОНУС_ЦИЛИНДР:
            ФП_МассаПереходаКонус_Цилиндр     = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаПереходаКонус_Цилиндр     = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_СТАБИЛИЗАЦИЯ_ЦИЛИНДРА:
            ФП_МассаСтабилизацииЦилиндра       = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаСтабилизацииЦилиндра       = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА:
            ФП_МассаЦилиндра                  = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаЦилиндра                  = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ПЕРЕХОД_ЦИЛ_ОБРАТ_КОНУС:
            ФП_МассаПереходаЦилиндр_ОбрКонус  = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаПереходаЦилиндр_ОбрКонус  = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
       СЛУЧАЙ ЭТАП_ТП_ВЫРАЩИВАНИЕ_ОБРАТ_КОНУСА:
            ФП_МассаОбратногоКонуса           = ФП_Ммонокристалла - ФП_Мначала_текущей_части_монокристалла;
            ФП_ДлинаОбратногоКонуса           = ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла;
            КОНЕЦ;
    }
    В СОСТ КонтрольИзменения;
 }
}


/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ОП_Мзатравки{
 ИЗ ПРОЦ Инициализация
                        ОП_Мзатравки;
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ОП_Мзатравки, ОП_Мзатравки)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ОП_Lзатравки{
 ИЗ ПРОЦ Инициализация
                        ОП_Lзатравки;
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ОП_Lзатравки, ОП_Lзатравки)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}


/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Hур{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФлагHур, ФП_Hур;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагHур);
    ЛП_Предыдущее = (!ФП_Hур);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагHур) {
         ЕСЛИ (ФлагHур == ВКЛ) {
              ЛП_Предыдущее = ФП_Hур;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Hур) {
              ЛП_Предыдущее = ФП_Hур;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Hур_ДУ{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФлагHур_ДУ, ФП_Hур_ДУ;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагHур_ДУ);
    ЛП_Предыдущее = (!ФП_Hур_ДУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагHур_ДУ) {
         ЕСЛИ (ФлагHур_ДУ == ВКЛ) {
              ЛП_Предыдущее = ФП_Hур_ДУ;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Hур_ДУ) {
              ЛП_Предыдущее = ФП_Hур_ДУ;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур_ДУ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур_ДУ, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур_ДУ)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур_ДУ)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }


/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_STAT{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_STAT;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_STAT);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_STAT) {
         ЛП_Предыдущее = ФП_STAT;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_STAT, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_PEAKW{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_PEAKW;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_PEAKW);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_PEAKW) {
         ЛП_Предыдущее = ФП_PEAKW;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_PEAKW, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_PEAKC{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_PEAKC;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_PEAKC);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_PEAKC) {
         ЛП_Предыдущее = ФП_PEAKC;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_PEAKC, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_RANGE{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_RANGE;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_RANGE);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_RANGE) {
         ЛП_Предыдущее = ФП_RANGE;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_RANGE, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_DISP{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_DISP;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_DISP);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_DISP) {
         ЛП_Предыдущее = ФП_DISP;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_DISP, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_MEAN{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_MEAN;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_MEAN);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_MEAN) {
         ЛП_Предыдущее = ФП_MEAN;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_MEAN, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_LASER{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_LASER;
 ДЦЕЛ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_LASER);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_LASER) {
         ЛП_Предыдущее = ФП_LASER;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgLongParamPIV(ПК_ПИВ_ФП_LASER, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}


/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Hур_ДВ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФлагHур_ДВ, ФП_Hур_ДВ;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагHур_ДВ);
    ЛП_Предыдущее = (!ФП_Hур_ДВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагHур_ДВ) {
         ЕСЛИ (ФлагHур_ДВ == ВКЛ) {
              ЛП_Предыдущее = ФП_Hур_ДВ;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Hур_ДВ) {
              ЛП_Предыдущее = ФП_Hур_ДВ;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур_ДВ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Hур_ДВ, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Hур_ДВ)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Hур_ДВ)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Vроста{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Vроста;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Vроста);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Vроста) {
         ЛП_Предыдущее = ФП_Vроста;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Vроста, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Dкр{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФлагDкр, ФП_Dкр;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагDкр);
    ЛП_Предыдущее = (!ФП_Dкр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагDкр) {
         ЕСЛИ (ФлагDкр == ВКЛ) {
              ЛП_Предыдущее = ФП_Dкр;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Dкр) {
              ЛП_Предыдущее = ФП_Dкр;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ФП_Dкр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ФП_Dкр, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Dкр_ТДД{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФлагDкр_ТДД, ФП_Dкр_ТДД;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагDкр_ТДД);
    ЛП_Предыдущее = (!ФП_Dкр_ТДД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагDкр_ТДД) {
         ЕСЛИ (ФлагDкр_ТДД == ВКЛ) {
              ЛП_Предыдущее = ФП_Dкр_ТДД;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Dкр_ТДД) {
              ЛП_Предыдущее = ФП_Dкр_ТДД;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр_ТДД, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр_ТДД, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр_ТДД)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр_ТДД)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_Dкр_ДВ{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФлагDкр_ДВ, ФП_Dкр_ДВ;
 ЛОГ  ЛП_Флаг       ЛОКАЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Флаг = (!ФлагDкр_ДВ);
    ЛП_Предыдущее = (!ФП_Dкр_ДВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Флаг != ФлагDкр_ДВ) {
         ЕСЛИ (ФлагDкр_ДВ == ВКЛ) {
              ЛП_Предыдущее = ФП_Dкр_ДВ;
              В СОСТ ПоявлениеДостоверности;
         } ИНАЧЕ В СОСТ ПоявлениеНедостоверности;
    } ИНАЧЕ {
         ЕСЛИ (ЛП_Предыдущее != ФП_Dкр_ДВ) {
              ЛП_Предыдущее = ФП_Dкр_ДВ;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр_ДВ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Dкр_ДВ, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеДостоверности_ФЛАГ{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_Dкр_ДВ)) {
         ЛП_Флаг = ВКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПоявлениеНедостоверности{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_Dкр_ДВ)) {
         ЛП_Флаг = ВЫКЛ;
         В СОСТ ТрафикПауза;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}



/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк1{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Твк1;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк1);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк1) {
         ЛП_Предыдущее = ФП_Твк1;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк1, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк2{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк2;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк2);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк2) {
         ЛП_Предыдущее = ФП_Твк2;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк2, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк3{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк3;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк3);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк3) {
         ЛП_Предыдущее = ФП_Твк3;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк3, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк4{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк4;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк4);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк4) {
         ЛП_Предыдущее = ФП_Твк4;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк4, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк5{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк5;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк5);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк5) {
         ЛП_Предыдущее = ФП_Твк5;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк5, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк6{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк6;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк6);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк6) {
         ЛП_Предыдущее = ФП_Твк6;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк6, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк7{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Твк7;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк7);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк7) {
         ЛП_Предыдущее = ФП_Твк7;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк7, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Твк8{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Твк8;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Твк8);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Твк8) {
         ЛП_Предыдущее = ФП_Твк8;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Твк8, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Uдк{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Uдк;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Uдк);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Uдк) {
         ЛП_Предыдущее = ФП_Uдк;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Uдк, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Pнк{
 ИЗ ПРОЦ Инициализация    ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                          ФП_Pнк;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Pнк);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Pнк) {
         ЛП_Предыдущее = ФП_Pнк;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Pнк, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Pвк{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФП_Pвк;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Pвк);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Pвк) {
         ЛП_Предыдущее = ФП_Pвк;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Pвк, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Pавд1{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФП_Pавд1;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Pавд1);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Pавд1) {
         ЛП_Предыдущее = ФП_Pавд1;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Pавд1, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Pавд2{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФП_Pавд2;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Pавд2);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Pавд2) {
         ЛП_Предыдущее = ФП_Pавд2;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Pавд2, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Ммонокристалла{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Ммонокристалла,
                        ФП_Мкремния_в_тигле,
                        ОП_Dзеркала_расплава,
                        ФП_ГлубинаРасплава;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Мкремния_в_тигле);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Мкремния_в_тигле) {
         ЛП_Предыдущее = ФП_Мкремния_в_тигле;
         CalculateMeltDepth_Mcur(ФП_Мкремния_в_тигле,
                            &ФП_ГлубинаРасплава,
                            &ОП_Dзеркала_расплава);
         СТАРТ ПРОЦ Передача_ФП_Ммонокристалла;
         СТАРТ ПРОЦ Передача_ФП_Мкремния_в_тигле;
         СТАРТ ПРОЦ Передача_ОП_Dзеркала_расплава;
         СТАРТ ПРОЦ Передача_ФП_ГлубинаРасплава;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }
}



/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ФП_Ммонокристалла{
 ИЗ ПРОЦ Инициализация
                        ФП_Ммонокристалла;
 СОСТ СообщОбИзменении1{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Ммонокристалла, ФП_Ммонокристалла)) СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ФП_ГлубинаРасплава{
 ИЗ ПРОЦ Инициализация
                        ФП_ГлубинаРасплава;
 СОСТ СообщОбИзменении2{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ГлубинаРасплава, ФП_ГлубинаРасплава))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ОП_Dзеркала_расплава{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ОП_Dзеркала_расплава;
 СОСТ СообщОбИзменении3{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ОП_Dзеркала_расплава, ОП_Dзеркала_расплава))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ Передача_ФП_Мкремния_в_тигле{
 ИЗ ПРОЦ Инициализация
                        ФП_Мкремния_в_тигле;
 СОСТ СообщОбИзменении4{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Мкремния_в_тигле, ФП_Мкремния_в_тигле))
         СТОП;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ РасчетФП_Hур_ДВ{
 ИЗ ПРОЦ Инициализация  ФП_Xт,
                        НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР,
                        ФП_ГлубинаРасплава,
                        ФП_Hур_ДВ;
 СОСТ Начало{
    ФП_Hур_ДВ = ФП_ГлубинаРасплава + ФП_Xт - НП_Lт_ОТ_ДНА_ТИГЛЯ_В_КНП_ДО_ПНУР;
    В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ РасчетФП_Hур{
 ИЗ ПРОЦ Инициализация
                        НП_ФлагРасчетаHур_поДУ,
                        НП_ФлагРасчетаHур_поДВ,
                        ФлагHур,
                        ФлагHур_ДУ,
                        ФлагHур_ДВ,
                        ФП_Hур,
                        ФП_Hур_ДУ,
                        ФП_Hур_ДВ;
 СОСТ Начало{
    ЕСЛИ (НП_ФлагРасчетаHур_поДУ && ФлагHур_ДУ) {
         ФП_Hур = ФП_Hур_ДУ;
         ФлагHур = ВКЛ;
    } ИНАЧЕ {
         ЕСЛИ (НП_ФлагРасчетаHур_поДВ && ФлагHур_ДВ) {
              ФП_Hур = ФП_Hур_ДВ;
              ФлагHур = ВКЛ;
         } ИНАЧЕ {
              ФП_Hур = ФП_Hур_ДУ;
              ФлагHур = ВЫКЛ;
         }
    }
    В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ РасчетФП_Dкр_ДВ{
 ИЗ ПРОЦ Инициализация  К_ДАТЧИКА_КАСАНИЯ,
                        НП_Тизмерения_Dкр_ДВ,
                        ФлагDкр_ДВ,
                        ФП_Dкр_ДВ,
                        ФП_Vз,
                        ФП_Xз,
                        ФП_Ммонокристалла;
 ПЛАВ ЛП_Мкрис_1 ЛОКАЛ;
 ПЛАВ ЛП_dМкрис  ЛОКАЛ;
 ПЛАВ ЛП_Xз_1    ЛОКАЛ;
 ПЛАВ ЛП_dXз     ЛОКАЛ;

 СОСТ Начало{
    ФлагDкр_ДВ = ВЫКЛ;
    ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0))  {
         ЛП_Мкрис_1 = ФП_Ммонокристалла;
         ЛП_dМкрис  = 0.0;
         ЛП_Xз_1    = ФП_Xз;
         ЛП_dXз     = 0.0;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НакоплениеДанных{
    ЕСЛИ (ФП_Ммонокристалла > ЛП_Мкрис_1) {
         ЛП_dМкрис  += (ФП_Ммонокристалла - ЛП_Мкрис_1);
         ЛП_Мкрис_1 = ФП_Ммонокристалла;
         ЛП_dXз     += (ФП_Xз - ЛП_Xз_1);
         ЛП_Xз_1    = ФП_Xз;
    }
    ЕСЛИ ((!К_ДАТЧИКА_КАСАНИЯ) || (ФП_Vз <= 0.0)) /* если идем вниз (сплавление) - диаметр не считаем */
         В СОСТ Начало;
    ТАЙМАУТ НП_Тизмерения_Dкр_ДВ В СОСТ РасчетДиаметра;
 }
 СОСТ РасчетДиаметра{
    ЕСЛИ ((ЛП_dМкрис == 0.0) || (ЛП_dXз == 0.0)) ФлагDкр_ДВ = ВЫКЛ;
    ИНАЧЕ {
         ФП_Dкр_ДВ = 2*sqrt(ЛП_dМкрис/(КОЭФ_Pi_Ro_ТВЕРДОГО_КРЕМНИЯ * ЛП_dXз));
         ЛП_dМкрис  = 0.0;
         ЛП_dXз     = 0.0;
         ФлагDкр_ДВ = ВКЛ;
    }
    В СОСТ НакоплениеДанных;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ РасчетФП_Dкр{
 ИЗ ПРОЦ Инициализация
                        НП_ФлагРасчетаDкр_поТДД,
                        НП_ФлагРасчетаDкр_поДВ,
                        НП_ПОПРАВКА_К_ТДД_ШЕЙКА,
                        НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР,   
                        ТК_DконусаКонечный_Конус,
                        ТК_DкрЦилиндра_КонЦил,

                        ФлагDкр,
                        ФлагDкр_ТДД,
                        ФлагDкр_ДВ,
                        ФП_Dкр,
                        ФП_Dкр_ТДД,
                        ФП_Dкр_ДВ,
                        ТекущийЭтап;

 ИЗ ПРОЦ РА_ВыращиваниеКонуса ОП_Dкр_НачалоКонуса;

 ПЛАВ ЛП_Поправка_к_ТДД ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (ТекущийЭтап > ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА) {
		ЛП_Поправка_к_ТДД = НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР; 
    } ИНАЧЕ {
      ЕСЛИ (ТекущийЭтап == ЭТАП_ВЫРАЩИВАНИЕ_КОНУСА) {
        ЕСЛИ (ФП_Dкр_ТДД < (ТК_DконусаКонечный_Конус - (10.0 + НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР))) {
           ЛП_Поправка_к_ТДД = НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР *
                               (ФП_Dкр_ТДД - ОП_Dкр_НачалоКонуса)/
                                (ТК_DконусаКонечный_Конус -
                                  (10.0 +
                                   НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР +
                                   ОП_Dкр_НачалоКонуса));
        } ИНАЧЕ {
           ЛП_Поправка_к_ТДД = НП_ПОПРАВКА_К_ТДД_ЦИЛИНДР;
        }

      } ИНАЧЕ {
            ЕСЛИ (ТекущийЭтап <= ЭТАП_ВЫРАЩИВАНИЕ_ШЕЙКИ) { /*доблено */
		        ЛП_Поправка_к_ТДД = НП_ПОПРАВКА_К_ТДД_ШЕЙКА;
		      } ИНАЧЕ {
                ЛП_Поправка_к_ТДД = 0.0;
            }
       }
    }

    ЕСЛИ (НП_ФлагРасчетаDкр_поТДД && ФлагDкр_ТДД) {
         ФП_Dкр = ФП_Dкр_ТДД + ЛП_Поправка_к_ТДД;
         ФлагDкр = ВКЛ;
    } ИНАЧЕ {
         ЕСЛИ (НП_ФлагРасчетаDкр_поДВ && ФлагDкр_ДВ) {
              ФП_Dкр = ФП_Dкр_ДВ;
              ФлагDкр = ВКЛ;
         } ИНАЧЕ {
              ФП_Dкр = ФП_Dкр_ТДД + ЛП_Поправка_к_ТДД;
              ФлагDкр = ВЫКЛ;
         }
    }
    В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ЗР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_I_ЗР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ЗР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ЗР) {
         ЛП_Предыдущее = ФП_I_ЗР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ЗР, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ЗУ{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_I_ЗУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ЗУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ЗУ) {
         ЛП_Предыдущее = ФП_I_ЗУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ЗУ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ЗВ{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_I_ЗВ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ЗВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ЗВ) {
         ЛП_Предыдущее = ФП_I_ЗВ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ЗВ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ТР{
 ИЗ ПРОЦ Инициализация    ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                          ФП_I_ТР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ТР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ТР) {
         ЛП_Предыдущее = ФП_I_ТР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ТР, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ТУ{
 ИЗ ПРОЦ Инициализация    ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                          ФП_I_ТУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ТУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ТУ) {
         ЛП_Предыдущее = ФП_I_ТУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ТУ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_I_ТВ{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФП_I_ТВ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_I_ТВ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_I_ТВ) {
         ЛП_Предыдущее = ФП_I_ТВ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_I_ТВ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_VзР{
 ИЗ ПРОЦ Инициализация    ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                          ФП_VзР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_VзР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_VзР) {
         ЛП_Предыдущее = ФП_VзР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_VзР, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_VзУ{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ФП_VзУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_VзУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_VзУ) {
         ЛП_Предыдущее = ФП_VзУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_VзУ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Vз{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Vз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Vз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Vз) {
         ЛП_Предыдущее = ФП_Vз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Vз, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ЗД_Vз{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ЗД_Vз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Vз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Vз) {
         ЛП_Предыдущее = ЗД_Vз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ЗД_Vз, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Xз{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Xз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Xз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Xз) {
         ЛП_Предыдущее = ФП_Xз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Xз, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Wз{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Wз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wз) {
         ЛП_Предыдущее = ФП_Wз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Wз, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Wз_УГОЛ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_Wз_УГОЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wз_УГОЛ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wз_УГОЛ) {
         ЛП_Предыдущее = ФП_Wз_УГОЛ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Wз_УГОЛ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_VтР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_VтР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_VтР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_VтР) {
         ЛП_Предыдущее = ФП_VтР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_VтР, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_VтУ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ФП_VтУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_VтУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_VтУ) {
         ЛП_Предыдущее = ФП_VтУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_VтУ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Vт{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФП_Vт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Vт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Vт) {
         ЛП_Предыдущее = ФП_Vт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Vт, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ЗД_Vт{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Vт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Vт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Vт) {
         ЛП_Предыдущее = ЗД_Vт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ЗД_Vт, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Xт{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ФП_Xт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Xт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Xт) {
         ЛП_Предыдущее = ФП_Xт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Xт, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Wт{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ФП_Wт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wт) {
         ЛП_Предыдущее = ФП_Wт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Wт, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзменения_ФП_Wт_УГОЛ{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ФП_Wт_УГОЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_Wт_УГОЛ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_Wт_УГОЛ) {
         ЛП_Предыдущее = ФП_Wт_УГОЛ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Wт_УГОЛ, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ  КонтрольИзменения;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
     В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольДостоверностиДТН{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФлагДТН;

 СОСТ Начало{
    ЕСЛИ (ФлагДТН) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_ДТН))  В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_ДТН))  В СОСТ СменаСостоянияВЫКЛ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияВКЛ{
    ЕСЛИ (!ФлагДТН)  В СОСТ ТрафикПауза;
 }

 СОСТ СменаСостоянияВЫКЛ{
    ЕСЛИ (ФлагДТН)  В СОСТ ТрафикПауза;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
      В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольДостоверностиДТР{
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ФлагДТР;

 СОСТ Начало{
    ЕСЛИ (ФлагДТР) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_ДОСТОВЕРНОСТЬ_ДТР))  В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_ДОСТОВЕРНОСТИ_ДТР))  В СОСТ СменаСостоянияВЫКЛ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ СменаСостоянияВКЛ{
    ЕСЛИ (!ФлагДТР)  В СОСТ ТрафикПауза;
 }

 СОСТ СменаСостоянияВЫКЛ{
    ЕСЛИ (ФлагДТР)  В СОСТ ТрафикПауза;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ Начало;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
      В СОСТ Начало;
 }
}


/*================================================*/
/*==                                            ==*/
/*==      КОНТРОЛЬ ИЗМЕНЕНИЯ ЗАДАНИЙ            ==*/
/*=       643.АЭ1610.10000 Д2.0                 ==*/
/*==                                            ==*/
/*================================================*/
ПРОЦ ЗапускПроцессовКонтроляИзмененияЗаданий{

 СОСТ Начало{
    СТАРТ ПРОЦ ПАЛЛИАТИВ_ЛЫЛОВА; /* процесс упреждения злобных выбросов */
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзР;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзУ;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Xз;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wз;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтР;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтУ;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Xт;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wт;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзР_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзУ_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wз_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтР_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтУ_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wт_ПРИВОД;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Qгаза;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Pнк;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К1;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К1_ИП2К;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К2_ИП2К;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_База_РЕГ_РОСТА /*_Wипн_К2 добавить */;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Тн;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Тр;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Hур;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Dкр;
    СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Vроста;
    СТОП;
 }
} /* Конец процесса КонтрольИзмененияЗаданий  */

ПРОЦ ПАЛЛИАТИВ_ЛЫЛОВА {
ИЗ ПРОЦ Инициализация
                        ЗД_VзР       ,
                        ЗД_VзУ       ,
                        ЗД_Wз        ,
                        ЗД_VтР       ,
                        ЗД_VтУ       ,
                        ЗД_Wт        ,
                        ЗД_VзР_ПРИВОД,
                        ЗД_VзУ_ПРИВОД,
                        ЗД_Wз_ПРИВОД,
                        ЗД_VтР_ПРИВОД,
                        ЗД_VтУ_ПРИВОД,
                        ЗД_Wт_ПРИВОД;

 СОСТ КонтрольВыброса_иУпреждение{
    ЕСЛИ (fabs(ЗД_VзР_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(1, ЗД_VзР_ПРИВОД);
         ЗД_VзР_ПРИВОД = ЗД_VзР; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    ЕСЛИ (fabs(ЗД_VзУ_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(2, ЗД_VзУ_ПРИВОД);
         ЗД_VзУ_ПРИВОД = ЗД_VзУ; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    ЕСЛИ (fabs(ЗД_Wз_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(3, ЗД_Wз_ПРИВОД);
         ЗД_Wз_ПРИВОД = ЗД_Wз; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    ЕСЛИ (fabs(ЗД_VтР_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(4, ЗД_VтР_ПРИВОД);
         ЗД_VтР_ПРИВОД = ЗД_VтР; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    ЕСЛИ (fabs(ЗД_VтУ_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(5, ЗД_VтУ_ПРИВОД);
         ЗД_VтУ_ПРИВОД = ЗД_VтУ; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    ЕСЛИ (fabs(ЗД_Wт_ПРИВОД) > МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт) { /* ПАЛЛИАТИВ ЛЫЛОВА */
         PrintErrorAndFloatParam(6, ЗД_Wт_ПРИВОД);
         ЗД_Wт_ПРИВОД = ЗД_Wт; /* ПАЛЛИАТИВ ЛЫЛОВА */
    }
    В СОСТ КонтрольВыброса_иУпреждение;
 }
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзР          8.0;    /* 8 мм/мин   */
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VзУ        760.0;    /* 760 мм/мин   */
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wз          50.0;    /* 50 об/мин   */
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтР          0.7;    /* 0.7  мм/мин   */
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_VтУ        200.0;    /* 200 мм/мин   */
/* КОНСТ МАКСИМАЛЬНОЕ_ЗАДАНИЕ_РЕГ_Wт          50.0;    /* об/мин   */
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0 !!!! Разбить на части с целью регулирования трафика  =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзР{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                       ЗД_VзР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VзР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VзР) {
         ЛП_Предыдущее = ЗД_VзР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_VзР, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_VзР, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзР_ПРИВОД{
 ИЗ ПРОЦ Инициализация
                       ЗД_VзР_ПРИВОД, ЗД_VзР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VзР_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VзР_ПРИВОД) {
     ЕСЛИ (fabs(ЗД_VзР_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VзР >= 0.0) ЗД_VзР_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VзР_ПРИВОД = -0.00001; 
     }
         ЛП_Предыдущее = ЗД_VзР_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_ZR() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamZR(ПК_ЗР_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
/* СОСТ ПаузаНаГлюкавостьПривода{
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ КонтрольИзменения;
 }
*/
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_ZR();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗР)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзУ{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                         ЗД_VзУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VзУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VзУ) {
         ЛП_Предыдущее = ЗД_VзУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_VзУ, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_VзУ, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VзУ_ПРИВОД{
 ИЗ ПРОЦ Инициализация
                         ЗД_VзУ_ПРИВОД,
                         ЗД_VзУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VзУ_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VзУ_ПРИВОД) {
     ЕСЛИ (fabs(ЗД_VзУ_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VзУ >= 0.0) ЗД_VзУ_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VзУ_ПРИВОД = -0.00001; 
     }
         ЛП_Предыдущее = ЗД_VзУ_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_ZU() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamZU(ПК_ЗУ_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_ZU();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗУ)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Xз{
 ИЗ ПРОЦ Инициализация ЗД_Xз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Xз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Xз) {
         ЛП_Предыдущее = ЗД_Xз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Xз, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wз{
 ИЗ ПРОЦ Инициализация ЗД_Wз;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wз);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wз) {
         ЛП_Предыдущее = ЗД_Wз;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_Wз, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wз, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wз_ПРИВОД{
 ИЗ ПРОЦ Инициализация ЗД_Wз_ПРИВОД;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wз_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wз_ПРИВОД) {
         ЛП_Предыдущее = ЗД_Wз_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_ZV() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamZV(ПК_ЗВ_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_ZV();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ЗВ)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wз_УГОЛ{
 ИЗ ПРОЦ Инициализация ЗД_Wз_УГОЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wз_УГОЛ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wз_УГОЛ) {
         ЛП_Предыдущее = ЗД_Wз_УГОЛ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wз_УГОЛ, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтР{
 ИЗ ПРОЦ Инициализация ЗД_VтР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VтР);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VтР) {
         ЛП_Предыдущее = ЗД_VтР;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_VтР, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_VтР, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтР_ПРИВОД{
 ИЗ ПРОЦ Инициализация ЗД_VтР_ПРИВОД, ЗД_VтР;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VтР_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VтР_ПРИВОД) {
     ЕСЛИ (fabs(ЗД_VтР_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VтР >= 0.0) ЗД_VтР_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VтР_ПРИВОД = -0.00001; 
     }
         ЛП_Предыдущее = ЗД_VтР_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_TR() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamTR(ПК_ТР_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_TR();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТР)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтУ{
 ИЗ ПРОЦ Инициализация ЗД_VтУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VтУ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VтУ) {
         ЛП_Предыдущее = ЗД_VтУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_VтУ, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_VтУ, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_VтУ_ПРИВОД{
 ИЗ ПРОЦ Инициализация ЗД_VтУ_ПРИВОД, ЗД_VтУ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_VтУ_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_VтУ_ПРИВОД) {
     ЕСЛИ (fabs(ЗД_VтУ_ПРИВОД) < 0.0001) { /*добавлено*/
          ЕСЛИ (ЗД_VтУ >= 0.0) ЗД_VтУ_ПРИВОД = 0.00001; 
          ИНАЧЕ ЗД_VтУ_ПРИВОД = -0.00001; 
     }
         ЛП_Предыдущее = ЗД_VтУ_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_TU() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamTU(ПК_ТУ_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_TU();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТУ)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Xт{
 ИЗ ПРОЦ Инициализация ЗД_Xт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Xт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Xт) {
         ЛП_Предыдущее = ЗД_Xт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Xт, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wт{
 ИЗ ПРОЦ Инициализация ЗД_Wт;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wт);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wт) {
         ЛП_Предыдущее = ЗД_Wт;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_Wт, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wт, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wт_ПРИВОД{
 ИЗ ПРОЦ Инициализация ЗД_Wт_ПРИВОД;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wт_ПРИВОД);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wт_ПРИВОД) {
         ЛП_Предыдущее = ЗД_Wт_ПРИВОД;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПРИВОДУ{
     ЕСЛИ (GetOutMsgNumber_TV() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
         ЕСЛИ (SendMsgFloatParamTV(ПК_ТВ_ИЗМН_ЗД_V, ЛП_Предыдущее))
              В СОСТ КонтрольИзменения;
     }
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ В СОСТ НарушениеСвязиСПриводом;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСПриводом {
     DisableChannel_TV();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ПРИВОДОМ_ТВ)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wт_УГОЛ{
 ИЗ ПРОЦ Инициализация ЗД_Wт_УГОЛ;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wт_УГОЛ);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wт_УГОЛ) {
         ЛП_Предыдущее = ЗД_Wт_УГОЛ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wт_УГОЛ, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Тн{
 ИЗ ПРОЦ Инициализация ЗД_Тн;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Тн);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Тн) {
         ЛП_Предыдущее = ЗД_Тн;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ВПО{
     ЕСЛИ (SendMsgFloatParamVPO(ПК_ВПО_ИЗМН_ЗД_Тн, ЛП_Предыдущее))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО В СОСТ НарушениеСвязиСВПО;
 }

 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Тн, ЛП_Предыдущее))
         В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиСВПО {
     DisableChannel_VPO();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ВПО)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Qгаза{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Qгаза;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Qгаза);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Qгаза) {
         ЛП_Предыдущее = ЗД_Qгаза;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Qгаза, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Pнк{
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Pнк;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Pнк);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Pнк) {
         ЛП_Предыдущее = ЗД_Pнк;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Pнк, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К1{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Wипн_К1;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wипн_К1);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wипн_К1) {
         ЛП_Предыдущее = ЗД_Wипн_К1;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wипн_К1, ЛП_Предыдущее/1000.0))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
/* ИП_ЛИТ */
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К1_ИП2К{
 ИЗ ПРОЦ Инициализация   ЗД_Wипн_К1;
 ИЗ ПРОЦ Инициализация   НП_ТипИПН;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wипн_К1);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wипн_К1) {
         ЛП_Предыдущее = ЗД_Wипн_К1;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ИП2К{
     ЕСЛИ (НП_ТипИПН == ИПН_ИП2К) {
         ЕСЛИ (GetOutMsgNumber_IP2K_K1() < ЧИСЛО_ЛЫЛОВА_В_БУФЕРЕ) {
              ЕСЛИ (SendMsgFloatParamIP2K_K1(ПК_ИП2К_К1_ИЗМН_ЗД_Wипн_К1, ЛП_Предыдущее))
                   В СОСТ КонтрольИзменения;
         } ИНАЧЕ В СОСТ Начало;
     } ИНАЧЕ  В СОСТ КонтрольИзменения;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ИП В СОСТ НарушениеСвязиС_ИП;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязиС_ИП {
     DisableChannel_IP2K_K1();
     ЕСЛИ (SendMsgPIVCode(СРАБОТАЛ_ТАЙМАУТ_НА_СВЯЗЬ_С_ИП2К_К1)) В СОСТ Начало;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0           добавить           =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Wипн_К2_ИП2К{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Wипн_К2;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Wипн_К2);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Wипн_К2) {
         ЛП_Предыдущее = ЗД_Wипн_К2;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Wипн_К2, ЛП_Предыдущее/1000.0))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/{ /* 23.12.2005 - База для Рег_РОСТА Зюбин */
 ИЗ ПРОЦ Инициализация  ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА,
                        ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/) {
         ЛП_Предыдущее = ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_База_РЕГ_РОСТА /*_Wипн_К2*/, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Тр{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Тр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Тр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Тр) {
         ЛП_Предыдущее = ЗД_Тр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Тр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Hур{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Hур;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Hур);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Hур) {
         ЛП_Предыдущее = ЗД_Hур;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Hур, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Dкр{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Dкр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Dкр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Dкр) {
         ЛП_Предыдущее = ЗД_Dкр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Dкр, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}
/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ КонтрольИзмененияЗаданий_ЗД_Vроста{
 ИЗ ПРОЦ Инициализация ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА, ЗД_Vроста;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;
 СОСТ Начало{
    ЛП_Предыдущее = (!ЗД_Vроста);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ЗД_Vроста) {
         ЛП_Предыдущее = ЗД_Vроста;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ СообщОбИзменении_ПИВ{
     ЕСЛИ (SendMsgFloatParamPIV(ИЗМН_ЗД_Vроста, ЛП_Предыдущее))
         В СОСТ ТрафикПауза;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }

 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     В СОСТ Начало;
 }
}



/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ ПередачаПИВПараметров_РЕГ_ДК{
 ИЗ ПРОЦ Инициализация
                НП_Кп_Dкр,
                НП_Кд_Dкр,
                НП_Ки_Dкр,
                НП_Кз_Dкр,
                НП_Dкр_MAX,
                НП_ДелтаVзРС_МАХ,
                НП_ВремяПереходногоПроцессаDкр,
                НП_ПогрешностьDкр,
                НП_Пауза_Dкр;

 ЦЕЛ ЛП_КодСобытия_к_ПИВ ЛОКАЛ;
 ПЛАВ ЛП_ПЛАВ_Параметр_к_ПИВ ЛОКАЛ;
 ДЦЕЛ ЛП_ДЦЕЛ_Параметр_к_ПИВ ЛОКАЛ;

 СОСТ Парам_1{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кп_Dкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Dкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_1{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_2{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кд_Dкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Dкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_2{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_3{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Ки_Dкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Dкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_3{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_4{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кз_Dкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Dкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_4{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_5{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Dкр_MAX;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Dкр_MAX;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_5{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_6{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_ДелтаVзРС_МАХ;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_ДелтаVзРС_МАХ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_6{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_7{
    ЛП_ДЦЕЛ_Параметр_к_ПИВ = НП_ВремяПереходногоПроцессаDкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_ВремяПереходногоПроцессаDкр;
    В СЛЕДУЮЩЕЕ;
    }
 СОСТ ПередачаДЦЕЛ_7{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ДЦЕЛ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_8{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_ПогрешностьDкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_ПогрешностьDкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_8{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_9{
    ЛП_ДЦЕЛ_Параметр_к_ПИВ = НП_Пауза_Dкр;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_Dкр;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаДЦЕЛ_9{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ДЦЕЛ_Параметр_к_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*================================================*/
/*=   643.АЭ1610.10000 Д2.0                      =*/
/*================================================*/
ПРОЦ ПередачаПИВПараметров_РЕГ_РОСТА{
 ИЗ ПРОЦ Инициализация
                НП_Кп_Vроста,
                НП_Кд_Vроста,
                НП_Ки_Vроста,
                НП_Кз_Vроста,
                НП_Пауза_РЕГ_РОСТА,
                НП_ВремяОсредненияVзVроста;
 ЦЕЛ ЛП_КодСобытия_к_ПИВ ЛОКАЛ;
 ПЛАВ ЛП_ПЛАВ_Параметр_к_ПИВ ЛОКАЛ;
 ДЦЕЛ ЛП_ДЦЕЛ_Параметр_к_ПИВ ЛОКАЛ;

 СОСТ Парам_10{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кп_Vроста;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кп_Vроста;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_10{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_11{
    ЛП_ПЛАВ_Параметр_к_ПИВ = ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кд_Vроста;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кд_Vроста;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_11{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_12{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Ки_Vроста;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Ки_Vроста;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_12{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_13{
    ЛП_ПЛАВ_Параметр_к_ПИВ = НП_Кз_Vроста;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Кз_Vроста;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаПЛАВ_13{
    ЕСЛИ (SendMsgFloatParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ПЛАВ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_14{
    ЛП_ДЦЕЛ_Параметр_к_ПИВ = НП_Пауза_РЕГ_РОСТА;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_Пауза_РЕГ_РОСТА;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаДЦЕЛ_14{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ДЦЕЛ_Параметр_к_ПИВ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Парам_15{
    ЛП_ДЦЕЛ_Параметр_к_ПИВ = НП_ВремяОсредненияVзVроста;
    ЛП_КодСобытия_к_ПИВ = ИЗМН_НП_ВремяОсредненияVзVроста;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаДЦЕЛ_15{
    ЕСЛИ (SendMsgLongParamPIV(ЛП_КодСобытия_к_ПИВ, ЛП_ДЦЕЛ_Параметр_к_ПИВ))
         СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*======= Ненормальные ситуации ===========*/
 СОСТ НарушениеСвязи{
     СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==                ПРОЦЕССЫ РЕЖИМА РА                ==*/
/*==                                                  ==*/
/*======================================================*/
/*======================================================*/
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====        КИП                             ==========*/
/*==   643.АЭ1610.10121  Д2.8                         ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_КИП{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9, 
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   ЕСЛИ (ФП_Pнк > НП_Pатмосф) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_АТМОСФЕРНОЕ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом этапа ЗВ - открыт                                 */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}


/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====        КОНТРОЛЬНОЕ ВАКУУМИРОВАНИЕ      ==========*/
/*==   643.АЭ1610.10121  Д2.9                         ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_КонтрВакуумирование{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12,
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;  /*добавлено */
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияТигля{
/*   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияАВД1{
*/
   ЕСЛИ (!(Флаг_АВД1 || Флаг_АВД2)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ФП_Pнк > НП_Pатмосф) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_АТМОСФЕРНОЕ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE9{ 
   ЕСЛИ (У_VE9 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====            КОНТРОЛЬ НАТЕКАНИЯ          ==========*/
/*==   643.АЭ1610.10121  Д2.10                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_КонтрольНатекания{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12,  
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         ТК_ГлубокийВакуум_Р2,
                         ТК_ПределДопРнкПослеКонтроляНатек_Р3,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;  /*добавлено */
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияТигля{
/*   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияАВД1{
*/
   ЕСЛИ (!(Флаг_АВД1 || Флаг_АВД2)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ФП_Pнк < ТК_ГлубокийВакуум_Р2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_ВАКУУМ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
*/
 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====          РАБОЧЕЕ ВАКУУМИРОВАНИЕ        ==========*/
/*==   643.АЭ1610.10121  Д2.11                        ==*/
/*======================================================*/

ПРОЦ КонтрольСТС_РА_РабочееВакуумирование{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         ТК_ГлубокийВакуум_Р2,
                         ТК_ПределДопРнкПослеКонтроляНатек_Р3,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ; /*добавлено */
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияТигля{
/*   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияАВД1{
*/
   ЕСЛИ (!(Флаг_АВД1 || Флаг_АВД2)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* СОСТ ПроверкаДавления{
   ЕСЛИ (ФП_Pнк < ТК_ПределДопРнкПослеКонтроляНатек_Р3) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_ВАКУУМ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
*/

 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====     ПОДГОТОВКА К ПЛАВЛЕНИЮ ЗАГРУЗКИ    ==========*/
/*==   643.АЭ1610.10121  Д2.12                        ==*/
/*======================================================*/

ПРОЦ КонтрольСТС_РА_ПодготовкаПлавлениюЗагрузки{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         ТК_ГлубокийВакуум_Р2,
                         ТК_ПределДопРнкПослеКонтроляНатек_Р3,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ; /*добавлено */
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияТигля{
/*   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/* СОСТ ПроверкаСостоянияАВД1{
*/
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ФП_Pнк < ТК_ГлубокийВакуум_Р2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_ВАКУУМ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (!(ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /* СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 */
 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====          ПЛАВЛЕНИЕ ЗАГРУЗКИ            ==========*/
/*==== 643.АЭ1610.10121  Д2.13                ==========*/
/*======================================================*/

ПРОЦ КонтрольСТС_РА_ПлавлениеЗагрузки{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         КООРД_ТИГ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         /*ТК_ГлубокийВакуум_Р2,*/
                         ТК_ПределДопРнкПослеКонтроляНатек_Р3,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;   
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* 
/* }
/* СОСТ ПроверкаСостоянияТигля{
*/
   ЕСЛИ (КООРД_ТИГ == ТИГ_В_КНП) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ТИГЕЛЬ_В_КНП)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ФП_Pнк < 20.0) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_СОЗДАТЬ_ВАКУУМ_В_НК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (!(ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====   ПОДГОТОВКА К СТАБИЛИЗАЦИИ РАСПЛАВА   ==========*/
/*==   643.АЭ1610.10121  Д2.14                        ==*/
/*======================================================*/

ПРОЦ КонтрольСТС_РА_ПодготовкаСтабилизацииРасплава{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         ТК_ГлубокийВакуум_Р2,
                         ТК_ПределДопРнкПослеКонтроляНатек_Р3,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;

/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ; 
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/*
/*
/* }
/* СОСТ ПроверкаСостоянияАВД1{
*/
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====           СТАБИЛИЗАЦИЯ РАСПЛАВА        ==========*/
/*==   643.АЭ1610.10121  Д2.15                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_СтабилизацияРасплава{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;    /* добавлено*/      /*добавить, после отработки пл№11
                                                  принять решение по коррекции */
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ; 
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/*
/* СОСТ ПроверкаРегулятораУровня{
*/
   ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
/*   ЕСЛИ (ФП_Pнк < ТК_ГлубокийВакуум_Р2) В СЛЕДУЮЩЕЕ; */
     ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаИсточникаПитания{
   ЕСЛИ (ПРОЦ РЕГ_W_ИПН_К1 В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАГРЕВАТЕЛЬ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((!К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) { 
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====  ПЕРЕМЕЩЕНИЕ ЗАТРАВКИ В ПОЛОЖЕНИЕ ПРОГРЕВА ======*/
/*==   643.АЭ1610.10121  Д2.16                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ПодготовкаПрогреваЗатравки{

 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;


 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
/*   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_КВП) В СЛЕДУЮЩЕЕ;  
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_КВП)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
/*
/* СОСТ ПроверкаРегулятораУровня{
*/
   ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/* добавить - плавка №11   добавлена */
/* СОСТ ПроверкаРегТНагревателя{
/*   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
*/
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*====           ПРОГРЕВ ЗАТРАВКИ                 ======*/
/*==   643.АЭ1610.10121  Д2.17                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ПрогревЗатравки{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   ЕСЛИ (КООРД_ЗАТ == ЗАТ_В_ПОЛОЖЕНИИ_ПРОГРЕВА) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_УСТАНОВИТЬ_ЗАТРАВКУ_В_П_ПРОГРЕВА)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРегулятораУровня{
   ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*добавлено */ 
/*СОСТ ПроверкаРегТНагревателя{
/*   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
*/
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПА     ==========*/
/*==== ЗАТРАВЛИВАНИЯ   КРИСТАЛЛОВ                 ======*/
/*==   643.АЭ1610.10121  Д2.17                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ЗатравливаниеКристалла{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРегулятораУровня{
   ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
     ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*  СОСТ ПроверкаРегТНагревателя{                    
/*   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
/*   ИНАЧЕ {
/*     ЛП_ФлагОшибки = ВКЛ;
/*     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
/*   }
/*   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
/* }
*/
  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ ((К_ДАТЧИКА_КАСАНИЯ) && (fabs(ФП_Xз) > 360.0)) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА  ЭТАПОВ     ==========*/
/*====       ВЫРАЩИВАНИЯ КРИСТАЛЛОВ               ======*/
/*==   643.АЭ1610.10121  Д2.18                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРегулятораУровня{
   ЕСЛИ (ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРегТНагревателя{
   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА  C ЭТАПА    ==========*/
/*==== ПЕРЕХОД ЦИЛИНДР-ОБРАТНЫЙ КОНУС             ======*/
/*==   643.АЭ1610.10121  Д2.26                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРегТНагревателя{
   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА  ЭТАПА      ==========*/
/*====       ОТРЫВ       КРИСТАЛЛА                ======*/
/*==   643.АЭ1610.10121  Д2.18                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ОтрывКристалла{
 ИЗ ПРОЦ Инициализация   КООРД_ЗАТ,
                         К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9,
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРегТНагревателя{
   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

  СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*==== КОНТРОЛЬ СОСТОЯНИЯ ТЕХНИЧЕСКИХ СРЕДСТВ ==========*/
/*====     ПРИ ЗАПУСКЕ РЕЖИМА  РА С ЭТАПОВ    ==========*/
/*====           ОХЛАЖДЕНИЕ КРИСТАЛЛОВ            ======*/
/*==   643.АЭ1610.10121  Д2.29                        ==*/
/*======================================================*/
ПРОЦ КонтрольСТС_РА_ОхлаждениеКристалла{
 ИЗ ПРОЦ Инициализация   К_VE5,
                         К_VE6,
                         К_VE7,
                         У_VE8,
                         У_VE9, 
                         У_VE12, 
                         К_ОТКР_ЗАТВОР_В,
                         К_ДАТЧИКА_КАСАНИЯ,
                         ФП_Pнк,
                         ФП_Xз,
                         Флаг_АВД1,
                         Флаг_АВД2,
                         НП_Pатмосф;
ЦЕЛ ЛП_ФлагОшибки ЛОКАЛ;

 СОСТ Начало{
   ЛП_ФлагОшибки = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }

 СОСТ ПроверкаРегулятораУровня{
   ЕСЛИ (!(ПРОЦ РЕГ_УР В СОСТ АКТИВНОЕ)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВЫКЛЮЧИТЬ_РЕГ_УР)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияАВД1{
   ЕСЛИ (Флаг_АВД1 || Флаг_АВД2) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_НАСОСЫ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаДавления{
   ЕСЛИ (ПРОЦ РЕГ_Д В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_Д)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРасходаГаза{
   ЕСЛИ (ПРОЦ РЕГ_РГ В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_РГ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаРегТНагревателя{
   ЕСЛИ (ПРОЦ РЕГ_ТН В СОСТ АКТИВНОЕ) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ВКЛЮЧИТЬ_РЕГ_ТН)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE7{
   ЕСЛИ (К_VE7 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_БПК)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаСостоянияVE9{
   ЕСЛИ (У_VE9 == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_VE9)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияVE12{ /* добавить */
   ЕСЛИ (У_VE12 == ЗАКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE12)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаКасанияРасплава{
   ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) {
       ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ПРОБЛЕМЫ_С_КАСАНИЕМ_РАСПЛАВА)) В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ В СЛЕДУЮЩЕЕ;
  ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*--------------------------------------------------------------------*/
/*    перед началом любого этапа VE5, VE6, VE8 - закрыты, ЗВ - открыт */
/*--------------------------------------------------------------------*/
 СОСТ ПроверкаСостоянияVE5VE6VE8{
   ЕСЛИ ((!К_VE5) && (!К_VE6) && (!У_VE8)) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЗАКРЫТЬ_VE5_VE6_VE8)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПроверкаСостоянияЗатвораВакуумного{
   ЕСЛИ (К_ОТКР_ЗАТВОР_В == ОТКР) В СЛЕДУЮЩЕЕ;
   ИНАЧЕ {
     ЛП_ФлагОшибки = ВКЛ;
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ОТКРЫТЬ_ЗАТВОР_ВАКУУМНЫЙ)) В СЛЕДУЮЩЕЕ;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
/*----------------------------------------------------------------------*/
 СОСТ АнализФлагаОшибки{
   ЕСЛИ (ЛП_ФлагОшибки == ВЫКЛ) СТОП;
   ИНАЧЕ ОШИБКА;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==       КОНТРОЛЬ ИСХОДНОГО ПОЛОЖЕНИЯ               ==*/
/*==          643.АЭ1610.10121  Д2.8                  ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_КонтрольИсходногоПоложения{
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСТС_РА_КИП;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроляИ_ПриведениеВ_Исходное{
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_КИП В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ КонтрольСТС_РА_КИП В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ОТКР_VM14;
              СТАРТ ПРОЦ ТЕСТ_ТУ;
	      СТАРТ ПРОЦ ТестДатчикаКасания; 
/*              СТАРТ ПРОЦ ЗАТ_КВП; */
              СТАРТ ПРОЦ ТИГ_КНП;
              СТАРТ ПРОЦ ВЫК_АВД1;
              СТАРТ ПРОЦ ВЫК_АВД2;
              СТАРТ ПРОЦ ВЫК_РЕГ_РГ;
              СТОП  ПРОЦ ВЫК_РЕГ_Д; /* стоп, т.к. выключает ОТКР_VM14 */
/*              СТАРТ ПРОЦ ВЫК_ИПН;  Зюбин - мешает проводить ТЕСТ ТУ*/
              СТАРТ ПРОЦ ЗАКР_АВД1_МО_ВК_VE5;
              СТАРТ ПРОЦ ЗАКР_АВД2_МО_ВК_VE6;
              СТАРТ ПРОЦ ЗАКР_БПК_VE7;
              СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
              СТАРТ ПРОЦ ЗАКР_НАДДУВ_ВК_VE9;
              СТАРТ ПРОЦ ЗАКР_НАДДУВ_НК_VE12; /* добавить */
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ ЗапускЗАТ_КВП_ПослеТестаДК{ /* ! ИНТЕРЕСНО */
    ЕСЛИ (ПРОЦ ТестДатчикаКасания В СОСТ ПАССИВНОЕ) { 
         СТАРТ ПРОЦ ЗАТ_КВП; 
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольСрабатывания{
    ЕСЛИ (
          (ПРОЦ ОТКР_VM14           В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ТЕСТ_ТУ             В СОСТ ПАССИВНОЕ) &&
	  (ПРОЦ ТестДатчикаКасания  В СОСТ ПАССИВНОЕ) && 
          (ПРОЦ ЗАТ_КВП             В СОСТ ПАССИВНОЕ) && 
          (ПРОЦ ТИГ_КНП             В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ВЫК_АВД1            В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ВЫК_АВД2            В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ВЫК_РЕГ_РГ          В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ВЫК_РЕГ_Д           В СОСТ ПАССИВНОЕ) &&
/*          (ПРОЦ ВЫК_ИПН             В СОСТ ПАССИВНОЕ) &&  Зюбин*/
          (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_БПК_VE7        В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_ПРОДУВКА_VE8   В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_НАДДУВ_НК_VE12 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_НАДДУВ_ВК_VE9  В СОСТ ПАССИВНОЕ)
          ) {
         ЕСЛИ (
          (ПРОЦ ОТКР_VM14           В СОСТ ОШИБКА) ||
          (ПРОЦ ТЕСТ_ТУ             В СОСТ ОШИБКА) ||
	  (ПРОЦ ТестДатчикаКасания  В СОСТ ОШИБКА) || 
          (ПРОЦ ЗАТ_КВП             В СОСТ ОШИБКА) || 
          (ПРОЦ ТИГ_КНП             В СОСТ ОШИБКА) ||
          (ПРОЦ ВЫК_АВД1            В СОСТ ОШИБКА) ||
          (ПРОЦ ВЫК_АВД2            В СОСТ ОШИБКА) ||
          (ПРОЦ ВЫК_РЕГ_РГ          В СОСТ ОШИБКА) ||
          (ПРОЦ ВЫК_РЕГ_Д           В СОСТ ОШИБКА) ||
/*          (ПРОЦ ВЫК_ИПН             В СОСТ ОШИБКА) || Зюбин*/
          (ПРОЦ ЗАКР_АВД1_МО_ВК_VE5 В СОСТ ОШИБКА) ||
          (ПРОЦ ЗАКР_АВД2_МО_ВК_VE6 В СОСТ ОШИБКА) ||
          (ПРОЦ ЗАКР_БПК_VE7        В СОСТ ОШИБКА) ||
          (ПРОЦ ЗАКР_ПРОДУВКА_VE8   В СОСТ ОШИБКА) ||
          (ПРОЦ ЗАКР_НАДДУВ_НК_VE12     В СОСТ ОШИБКА)||
          (ПРОЦ ЗАКР_НАДДУВ_ВК_VE9     В СОСТ ОШИБКА)
               ) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            КОНТРОЛЬНОЕ ВАКУУМИРОВАНИЕ            ==*/
/*==             643.АЭ1610.10121  Д2.9               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_КонтрольноеВакуумирование{
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСТС_РА_КонтрВакуумирование;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроляИ_ВклНасосов {
    ЕСЛИ (!(ПРОЦ  КонтрольСТС_РА_КонтрВакуумирование В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  КонтрольСТС_РА_КонтрВакуумирование В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ВращениеЗатравки_иТигляПриКонтролеНатекания; /*добавлено*/
              СТАРТ ПРОЦ ВключениеНасосовИОткачкаНКдоР2;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольВклНасосовИ_ВклПродувкиАргоном{
    ЕСЛИ (!(ПРОЦ ВключениеНасосовИОткачкаНКдоР2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ ВключениеНасосовИОткачкаНКдоР2 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ПродувкаАргоном;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольПродувкиАргоном{
    ЕСЛИ (!(ПРОЦ  ПродувкаАргоном В СОСТ АКТИВНОЕ)) {
      ЕСЛИ ((ПРОЦ ПродувкаАргоном В СОСТ ОШИБКА)) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольОткачкиР2_Т5{
    СТАРТ ПРОЦ КонтрольОкончатВакуум_Pнк_Р2_Т5;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ АнализЗавершенияКонтроляОткачкиР2_Т5{
    ЕСЛИ (!(ПРОЦ  КонтрольОкончатВакуум_Pнк_Р2_Т5 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ ((ПРОЦ  КонтрольОкончатВакуум_Pнк_Р2_Т5 В СОСТ ОШИБКА)) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускПроцессовВыключенияАВД {
    СТАРТ ПРОЦ ВЫК_АВД1;
    СТАРТ ПРОЦ ВЫК_АВД2;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключенияАВД1_2{
    ЕСЛИ ((ПРОЦ  ВЫК_АВД1 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ  ВЫК_АВД2 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ  ВращениеЗатравки_иТигляПриКонтролеНатекания В СОСТ ПАССИВНОЕ)) { /*добавлено*/
         ЕСЛИ ((ПРОЦ  ВЫК_АВД1 В СОСТ ОШИБКА) ||
               (ПРОЦ  ВЫК_АВД2 В СОСТ ОШИБКА) ||
               (ПРОЦ  ВращениеЗатравки_иТигляПриКонтролеНатекания   /* добавлено */
                               В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }
}


/*===============================================*/
/*=   Вывод затравки и тигля в положение враще- =*/
/*=   ния и запуск вращения Wз=6.0,Wт=1.0       =*/
/*=   643.АЭ1610.10000 Д2.9  ДОБАВЛЕНО          =*/
/*===============================================*/
ПРОЦ ВращениеЗатравки_иТигляПриКонтролеНатекания{ 
ИЗ ПРОЦ Инициализация
                        ЗД_Xт,
                        ЗД_Xз,
                        ЗД_Wт,
                        ЗД_Wз;
 СОСТ Начало{
   ЗД_Xз = -ОБЛАСТЬ_ЗАПРЕТА_ВРАЩЕНИЯ_ЗАТРАВКИ - 5.0;   /* 5 мм - для верности */
   ЗД_Xт = 5.0;
   СТАРТ ПРОЦ ЗАТ_УК;
   СТАРТ ПРОЦ ТИГ_УК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПрихода{
    ЕСЛИ ((ПРОЦ ЗАТ_УК В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ТИГ_УК В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ ((ПРОЦ ЗАТ_УК В СОСТ ОШИБКА) || 
               (ПРОЦ ТИГ_УК В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВключениеВращенияТигля_Затравки{
    ЗД_Wт = -1.0; /* Зюбин! Вращение только по часовой стрелке!  */
    ЗД_Wз = 6.0;
    СТАРТ ПРОЦ ЗАТ_ВР;
    СТАРТ ПРОЦ ТИГ_ВР;
    СТОП;
 }
}

/*==============================================*/
/*=   Включение Насосов АВД1 и АВД2 И Откачка  =*/
/*=   НК до Р2 за Т2                           =*/
/*=   643.АЭ1610.10000 Д2.9                    =*/
/*==============================================*/
ПРОЦ ВключениеНасосовИОткачкаНКдоР2{
 СОСТ ЗапускПроцессов {
    СТАРТ ПРОЦ ВКЛ_АВД1_НК;
    СТАРТ ПРОЦ ВКЛ_АВД2_НК;
    СТАРТ ПРОЦ ОТКР_БПК_VE7;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольСрабатывания{
    ЕСЛИ (!(ПРОЦ  ВКЛ_АВД1_НК В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ВКЛ_АВД2_НК В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ  ОТКР_БПК_VE7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ВКЛ_АВД1_НК В СОСТ ОШИБКА) ||
               (ПРОЦ  ВКЛ_АВД1_НК В СОСТ ОШИБКА) ||
               (ПРОЦ  ОТКР_БПК_VE7 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ КонтрольОткачкиР2_Т2{
    СТАРТ ПРОЦ КонтрольОткачки_Pнк_Р2_Т2;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализЗавершенияКонтроляОткачкиР2_Т2{
    ЕСЛИ (!(ПРОЦ  КонтрольОткачки_Pнк_Р2_Т2 В СОСТ АКТИВНОЕ)) {
      ЕСЛИ ((ПРОЦ  КонтрольОткачки_Pнк_Р2_Т2 В СОСТ ОШИБКА)) ОШИБКА;
      ИНАЧЕ СТОП;
    }
 }
}

/*==============================================*/
/*=   КОНТРОЛЬ ОТКАЧКИ НИЖНЕЙ КАМЕРЫ Р2_Т2     =*/
/*=   643.АЭ1610.10000 Д2.9                    =*/
/*==============================================*/
ПРОЦ КонтрольОткачки_Pнк_Р2_Т2{
ИЗ ПРОЦ Инициализация   ФП_Pнк,
                        ТК_ГлубокийВакуум_Р2,
                        ТК_TоткачкиДопустимое_Т2доP2;
 СОСТ Начало{
      ЕСЛИ (ФП_Pнк <= ТК_ГлубокийВакуум_Р2)  СТОП;
      ТАЙМАУТ ТК_TоткачкиДопустимое_Т2доP2 В СОСТ ПередачаСообщения;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_Т2_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
   ОШИБКА;
 }
}   /* конец процесса КонтрольОткачки_Pнк_Р2_Т2 */


/*====================================*/
/*=================================================*/
/*= КОНТРОЛЬ ОКОНЧАТЕЛЬНОГО ВАКУУМИРОВАНИЯ Р2_Т5  =*/
/*=   643.АЭ1610.10000 Д2.9                       =*/
/*=================================================*/
ПРОЦ КонтрольОкончатВакуум_Pнк_Р2_Т5{
ИЗ ПРОЦ Инициализация   ФП_Pнк,
                        ТК_ГлубокийВакуум_Р2,
                        ТК_ВремяОткачкиПослеОсушки_Т5;
 СОСТ Начало{
      ТАЙМАУТ ТК_ВремяОткачкиПослеОсушки_Т5 В СЛЕДУЮЩЕЕ; /* добавлено */
 }
 СОСТ ПроверкаДавленияР2{
      ЕСЛИ (ФП_Pнк <= ТК_ГлубокийВакуум_Р2)  СТОП;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;                                              /* добавлено */
 }
 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_Т5_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
   ОШИБКА;
 }

}
/*================================================*/
/*=          ПРОДУВКА АРГОНОМ                    =*/
/*=          643.АЭ1610.10000 Д2.9               =*/
/*================================================*/
ПРОЦ ПродувкаАргоном{
ИЗ ПРОЦ Инициализация   ТК_ЧислоЦикловОсушки_Nц,
                        ТК_ВремяПродувки_Т3,
                        ТК_ТоткачкиАргона_Т4;

ЦЕЛ ЛП_ТекНомерЦиклПродувки ЛОКАЛ;
 СОСТ Начало{
    ЛП_ТекНомерЦиклПродувки = 0;
    В СОСТ ОчереднойЦиклПродувки;
 }
 СОСТ ОчереднойЦиклПродувки{
    ЛП_ТекНомерЦиклПродувки ++;
    ЕСЛИ (ЛП_ТекНомерЦиклПродувки > ТК_ЧислоЦикловОсушки_Nц)  СТОП;
    ИНАЧЕ {
         СТАРТ ПРОЦ ОТКР_ПРОДУВКА_VE8;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПроверкаОткрытия {
    ЕСЛИ (!(ПРОЦ  ОТКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ОТКР_ПРОДУВКА_VE8 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ Пауза1{
      ТАЙМАУТ ТК_ВремяПродувки_Т3 В СОСТ ЗакрытиеПродувки;
 }
 СОСТ ЗакрытиеПродувки{
    СТАРТ ПРОЦ ЗАКР_ПРОДУВКА_VE8;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаЗакрытия {
    ЕСЛИ (!(ПРОЦ  ЗАКР_ПРОДУВКА_VE8 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ЗАКР_ПРОДУВКА_VE8 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ Пауза2{
    ТАЙМАУТ ТК_ТоткачкиАргона_Т4 В СОСТ ОчереднойЦиклПродувки;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==               КОНТРОЛЬ НАТЕКАНИЯ                 ==*/
/*==             643.АЭ1610.10121  Д2.10              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_КонтрольНатекания{
ИЗ ПРОЦ Инициализация   ФП_Pнк,
                        НП_ОбъемВакПолости_V,
                        ТК_ДопустимоеНатекание_КнтрНат,
                        ТК_Тотгазовки_КонтрНат,
                        ТК_ПериодКонтроля_КонтрНат;
ПЛАВ ЛП_ФП_Pнк_Т1 ЛОКАЛ;
ПЛАВ ЛП_НатеканиеЗаВремяКонтроля ЛОКАЛ;

 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_КонтрольНатекания;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ  КонтрольСТС_РА_КонтрольНатекания В СОСТ АКТИВНОЕ)) {
      ЕСЛИ ((ПРОЦ  КонтрольСТС_РА_КонтрольНатекания В СОСТ ОШИБКА)) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ Пауза1{
      ТАЙМАУТ ТК_Тотгазовки_КонтрНат В СОСТ ДавлениеНК_НачалаЭтапа;
 }
 СОСТ ДавлениеНК_НачалаЭтапа{
      ЛП_ФП_Pнк_Т1 = ФП_Pнк;
      В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза2{
      ТАЙМАУТ ТК_ПериодКонтроля_КонтрНат В СОСТ ВычислениеНатеканияНК_ЗаВремяКонтроля;
 }
 СОСТ ВычислениеНатеканияНК_ЗаВремяКонтроля{
      ЛП_НатеканиеЗаВремяКонтроля = НП_ОбъемВакПолости_V *
                                    (ФП_Pнк - ЛП_ФП_Pнк_Т1) * 10.0/
                                    ТК_ПериодКонтроля_КонтрНат;
      В СЛЕДУЮЩЕЕ;
 }

 СОСТ СообщОбНатеканииЗаВсеВремяКонтроля{
     ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_РА_ВЕЛИЧИНА_НАТЕКАНИЯ, ЛП_НатеканиеЗаВремяКонтроля))
         В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ПроверкаГерметичности{
     СТАРТ ПРОЦ ВЫК_ТИГ_ВР; /*добавлено */
     СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;
     СТАРТ ПРОЦ ТИГ_КНП;
     СТАРТ ПРОЦ ЗАТ_КВП;
     ЕСЛИ (ЛП_НатеканиеЗаВремяКонтроля <= ТК_ДопустимоеНатекание_КнтрНат) В СЛЕДУЮЩЕЕ;
     ИНАЧЕ В СОСТ УстанНеГерметична;
 }
 СОСТ УстанГерметична{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ГЕРМЕТИЧНОСТЬ_УСТАНОВКИ_В_НОРМЕ)) СТОП;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ УстанНеГерметична{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_УСТАНОВКА_НЕГЕРМЕТИЧНА)) {
         СТАРТ ПРОЦ Переход_вРР;
         ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    СТОП;
 }
}
/*================================================*/
/*=          ИЗМЕРЕНИЕ НАТЕКАНИЯ                 =*/
/*=          643.АЭ1610.10000 Д2.10              =*/
/*================================================*/
ПРОЦ ИзмерениеНатекания{
 ИЗ ПРОЦ Инициализация ФП_Pнк,
                       ТК_ПериодКонтроля_КонтрНат,
                       НП_ОбъемВакПолости_V;

 ПЛАВ ЛП_ФП_Pнк_Т1 ЛОКАЛ;

 ПЛАВ ЛП_НатеканиеЗаЦикл ЛОКАЛ;

 СОСТ Начало{
    ЛП_ФП_Pнк_Т1 = ФП_Pнк;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза10сек{
      ТАЙМАУТ ТК_ПериодКонтроля_КонтрНат В СОСТ ВычислениеНатеканияЗаЦикл;
 }
 СОСТ ВычислениеНатеканияЗаЦикл{
    ЛП_НатеканиеЗаЦикл = НП_ОбъемВакПолости_V * (ФП_Pнк - ЛП_ФП_Pнк_Т1)*10.0/(ПЛАВ)ТК_ПериодКонтроля_КонтрНат; /*добавлено*/
    ЛП_ФП_Pнк_Т1 = ФП_Pнк;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщОбНатекании{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_ВЕЛИЧИНА_НАТЕКАНИЯ,
                               ЛП_НатеканиеЗаЦикл)) В СОСТ Пауза10сек;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* НЕНОРМАЛЬНЫЕ СИТУАЦИИ */
 СОСТ НарушениеСвязи{
    В СОСТ Пауза10сек;
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==             РАБОЧЕЕ ВАКУУМИРОВАНИЕ               ==*/
/*==             643.АЭ1610.10121  Д2.11              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_РабочееВакуумирование{
 ИЗ ПРОЦ Инициализация ФП_Pнк,
                       ТК_ГлубокийВакуум_Р2;

 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСТС_РА_РабочееВакуумирование;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_РабочееВакуумирование В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольСТС_РА_РабочееВакуумирование В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПроверкаДавления {
    ЕСЛИ (ФП_Pнк < ТК_ГлубокийВакуум_Р2) В СЛЕДУЮЩЕЕ;
    ИНАЧЕ В СОСТ ВключениеАВД1_2_НК;
 }
 СОСТ ВключениеАВД1_НК {
    СТАРТ ПРОЦ ВКЛ_АВД1_НК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольСрабатыванияАВД1_НК{
    ЕСЛИ (!(ПРОЦ ВКЛ_АВД1_НК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_АВД1_НК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускКонтроляРабВакОтработал_АВД1{
    СТАРТ ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОтрабатыванияКРВсАВД1{
    ЕСЛИ (!(ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7 В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }

/*== Вторая ветка алгоритма ::::> */
 СОСТ ВключениеАВД1_2_НК {
    СТАРТ ПРОЦ ВКЛ_АВД1_НК;
    СТАРТ ПРОЦ ВКЛ_АВД2_НК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольСрабатыванияАВД1_2_НК{
    ЕСЛИ (!(ПРОЦ ВКЛ_АВД1_НК В СОСТ АКТИВНОЕ) &&
          !(ПРОЦ ВКЛ_АВД2_НК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ ВКЛ_АВД1_НК В СОСТ ОШИБКА) ||
               (ПРОЦ ВКЛ_АВД1_НК В СОСТ ОШИБКА) ) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускКонтроляРабВакОтработал_АВД1_2{
     СТАРТ ПРОЦ КонтрольОткачки_Pнк_Р2_Т2;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольОтрабатыванияКРВсАВД1_2{
    ЕСЛИ (!(ПРОЦ КонтрольОткачки_Pнк_Р2_Т2 В СОСТ АКТИВНОЕ)) {
       ЕСЛИ (ПРОЦ КонтрольОткачки_Pнк_Р2_Т2 В СОСТ ОШИБКА) ОШИБКА;
       ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ВыключениеАВД2 {
     СТАРТ ПРОЦ ВЫК_АВД2;
     В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольВыключенияАВД2{
    ЕСЛИ (!(ПРОЦ ВЫК_АВД2 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ ((ПРОЦ ВЫК_АВД2 В СОСТ ОШИБКА) ) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }
}

/*================================================*/
/*= КОНТРОЛЬ РАБОЧЕГО ВАКУУМИРОВАНИЯ Pнк_Р2_Т7   =*/
/*=          643.АЭ1610.10000 Д2.11              =*/
/*================================================*/
ПРОЦ КонтрольРабочегоВакуумирования_Pнк_Р2_Т7{
ИЗ ПРОЦ Инициализация   ФП_Pнк,
                        ТК_ГлубокийВакуум_Р2,
                        ТК_ВремяОткачкиДопустимое_Т7;
 СОСТ Начало{
      ЕСЛИ (ФП_Pнк <= ТК_ГлубокийВакуум_Р2)  СТОП;
      ТАЙМАУТ ТК_ВремяОткачкиДопустимое_Т7 В СОСТ ПередачаСообщения;
 }

 СОСТ ПередачаСообщения {
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_Т7_ИСТЕКЛО_P2_НЕ_ДОСТИГНУТО))
         ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/

 СОСТ НарушениеСвязи {
   ОШИБКА;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==       ПОДГОТОВКА К ПЛАВЛЕНИЮ ЗАГРУЗКИ            ==*/
/*==             643.АЭ1610.10121  Д2.12              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ПодготовкаПлавлениюЗагрузки{
 ИЗ ПРОЦ Инициализация ЗД_Wипн_К1,
                       ЗД_Qгаза,
                       ЗД_Pнк,
                       ТК_ЗД_Qгаза_ППЗ,
                       ТК_ЗД_Pнк_ППЗ,
                       ТК_ЗД_Wипн_К1_ППЗ;

 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСТС_РА_ПодготовкаПлавлениюЗагрузки;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ПодготовкаПлавлениюЗагрузки В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольСТС_РА_ПодготовкаПлавлениюЗагрузки В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускПроцессов {
/*    ЗД_Qгаза   = ТК_ЗД_Qгаза_ППЗ;
    ЗД_Pнк     = ТК_ЗД_Pнк_ППЗ;
    ЗД_Wипн_К1 = ТК_ЗД_Wипн_К1_ППЗ;    !!! + аккуратно убрать ТК_ХХХ_ППЗ
*/
    СТАРТ ПРОЦ ЗАТ_ДП;  /* =  Зюбин */
/*    СТАРТ ПРОЦ ЗАТ_КВП; /*- Зюбин */
    СТАРТ ПРОЦ ТИГ_КНП;
    СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;       /* OK!!   */
    СТАРТ ПРОЦ ОТКР_НАДДУВ_ВК_VE9; 
    СТАРТ ПРОЦ ЗАКР_БПК_VE7;
    ЗД_Pнк = 5.0;                      /*  Зюбин */
    СТАРТ ПРОЦ РЕГ_Д; 
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ ПроверкаЗапускаПроцессов{
    ЕСЛИ (
          (ПРОЦ ЗАТ_ДП В СОСТ ПАССИВНОЕ) &&            /*  Зюбин */
          (ПРОЦ ОТКР_НАДДУВ_ВК_VE9 В СОСТ ПАССИВНОЕ) &&   
          (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ ЗАКР_БПК_VE7 В СОСТ ПАССИВНОЕ) &&
/*          (ПРОЦ ЗАТ_КВП      В СОСТ ПАССИВНОЕ) &&   Зюбин */

          (ПРОЦ ТИГ_КНП      В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ (
               (ПРОЦ ЗАТ_ДП В СОСТ ОШИБКА) ||          /*   Зюбин */
               (ПРОЦ ВКЛ_РЕГ_W_ИПН_К1 В СОСТ ОШИБКА) ||
               (ПРОЦ ОТКР_НАДДУВ_ВК_VE9 В СОСТ ОШИБКА)  ||
               (ПРОЦ ЗАКР_БПК_VE7 В СОСТ ОШИБКА)     ||
/*               (ПРОЦ ЗАТ_КВП      В СОСТ ОШИБКА)     ||  Зюбин */
               (ПРОЦ ТИГ_КНП      В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==           ТП  ПЛАВЛЕНИЕ ЗАГРУЗКИ                 ==*/
/*==             643.АЭ1610.10121  Д2.13              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ПлавлениеЗагрузки{
ИЗ ПРОЦ Инициализация Флаг_КонецТП;
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСТС_РА_ПлавлениеЗагрузки;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ПлавлениеЗагрузки В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольСТС_РА_ПлавлениеЗагрузки В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
    СТАРТ ПРОЦ КонтрольПоявленияРасплава; /*  */
    Флаг_КонецТП = ВЫКЛ;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ПЛАВЛЕНИЕ_ЗАГРУЗКИ))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;  /*  - Зюбин */
 }
 СОСТ КонтрольУсловийОкончанияПервогоЭтапа{   /*  - Зюбин */
    ЕСЛИ (ПРОЦ КонтрольПоявленияРасплава В СОСТ АКТИВНОЕ) { /* окончание этапа должно быть не по отработке ТП, а по расплавлению загрузки */
        СТОП ПРОЦ КонтрольПоявленияРасплава;
        СТОП ПРОЦ КонтрольРасплавления;
        Флаг_КонецТП = ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ;
    } ИНАЧЕ {
        ЕСЛИ (ПРОЦ КонтрольПоявленияРасплава В СОСТ СТОП) /* sic! Отработано на плавке №6 */
            Флаг_КонецТП = ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП;
        ИНАЧЕ
            Флаг_КонецТП = ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ;
    }
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) В СЛЕДУЮЩЕЕ;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ КонтрольУсловийОкончанияПлавления{   /* - Зюбин */
    ЕСЛИ (ПРОЦ КонтрольРасплавления В СОСТ ПАССИВНОЕ) {
        ЕСЛИ (ПРОЦ КонтрольРасплавления В СОСТ СТОП) СТОП;
        ИНАЧЕ ОШИБКА;
    }
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            КОНТРОЛЬ ПОЯВЛЕНИЯ РАСПЛАВА           ==*/
/*==             643.АЭ1610.10121  Д2.13              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ КонтрольПоявленияРасплава{ /*  Зюбин 06.02.04 */
 ИЗ ПРОЦ Инициализация ФП_Тр,
                       Флаг_КонецТП;
 ПЛАВ ЛП_Тмакс ЛОКАЛ; 
 ПЛАВ ЛП_Тмин ЛОКАЛ;
 СОСТ Начало{
    ЕСЛИ (ФП_Тр > 1200.0) {  /* ждем пороговой температуры  - Зюбин */
        ЛП_Тмакс = ФП_Тр;
        ЛП_Тмин = ФП_Тр;
	В СЛЕДУЮЩЕЕ;
    }	
 }
 СОСТ КонтрольПлатоТемпературы{ /*  Зюбин 06.01.27 */
    ЕСЛИ (ЛП_Тмакс < ФП_Тр) {  /* если повышение температуры - сброс счетчика */
        ЛП_Тмакс = ФП_Тр;
        В СОСТ КонтрольПлатоТемпературы;
    }   
 	ТАЙМАУТ ПОЛ_МИНУТЫ В СЛЕДУЮЩЕЕ;          
 }
 СОСТ СообщениеОПоявленииРасплава{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ПОЯВИЛСЯ_РАСПЛАВ)) {
        В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
 СОСТ ОкончаниеТПРасплавления{ /* прекращать ТП из КПУ надо именно так */
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ПРЕКРАТИТЬ_ОТРАБОТКУ_ТП)) {
	СТАРТ ПРОЦ КонтрольРасплавления;
        СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}


/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            КОНТРОЛЬ РАСПЛАВЛЕНИЯ ЗАГРУЗКИ        ==*/
/*==             643.АЭ1610.10121  Д2.13              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ КонтрольРасплавления{ /* Зюбин 06.01.27 */
 ИЗ ПРОЦ Инициализация 
                       ФП_Тдтр;

 ПЛАВ ЛП_Тмакс ЛОКАЛ; 
 ПЛАВ ЛП_Тмин ЛОКАЛ;
 ЦЕЛ  ЛП_Счетчик ЛОКАЛ;
 СОСТ Начало{
        ЛП_Тмакс = ФП_Тдтр;
        ЛП_Тмин = ФП_Тдтр;
        ЛП_Счетчик = 0;
        СТАРТ ПРОЦ СбросМощностиПриРасплавлении; /*добавить 06.05.22 == */
        В СЛЕДУЮЩЕЕ;
 }
 СОСТ РасчетТмаксТминДляКонтроляРасплавления{
        ЕСЛИ (ЛП_Тмакс < ФП_Тдтр) ЛП_Тмакс = ФП_Тдтр;
        ЕСЛИ (ЛП_Тмин > ФП_Тдтр) ЛП_Тмин = ФП_Тдтр;
 	    ТАЙМАУТ ДВАДЦАТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;          
 }
 СОСТ КонтрольРасплавления{
        ЕСЛИ ((ЛП_Тмакс - ЛП_Тмин) < 80.0) ЛП_Счетчик ++; /* считаем время */
        ИНАЧЕ                              ЛП_Счетчик = 0;
        ЕСЛИ (ЛП_Счетчик < 6) { /* преверяем две минуты с условием dТ < 80 */
            ЛП_Тмакс = ФП_Тдтр;
            ЛП_Тмин = ФП_Тдтр;
            В СОСТ РасчетТмаксТминДляКонтроляРасплавления;
        } ИНАЧЕ 
            В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОРасплавлении{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАГРУЗКА_В_ОСНОВНОМ_РАСПЛАВЛЕНА)) { /* 06.01.16 - Зюбин */
        СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            СБРОС МОЩНОСТИ НАГРЕВАТЕЛЯ            ==*/
/*==             643.АЭ1610.10121  Д2.13 добавить 06.05.22      ==*/
/*======================================================*/
/*======================================================*/

ПРОЦ СбросМощностиПриРасплавлении{
 ИЗ ПРОЦ Инициализация 
                       ЗД_Wипн_К1,
                       ТК_Wипн_К1_ПодгСтабРаспл;
 СОСТ Пауза20мин{ /*добавить 06.05.22 == */
    ЕСЛИ (ПРОЦ КонтрольРасплавления В СОСТ ПАССИВНОЕ) СТОП;
    ТАЙМАУТ ДВАДЦАТЬ_МИНУТ {
        ЗД_Wипн_К1 = ТК_Wипн_К1_ПодгСтабРаспл + 10000.0; /* плюс 10КВт */
        СТОП;
    }
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==        ПОДГОТОВКА К СТАБИЛИЗАЦИИ РАСПЛАВА        ==*/
/*==             643.АЭ1610.10121  Д2.14              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ПодготовкаСтабилизацииРасплава{
ИЗ ПРОЦ Инициализация   
                        ЗД_Qгаза,
                        ЗД_Pнк,
                        ЗД_Hур,
                        ЗД_Wипн_К1,
                        ЗД_Wт,
                        ТК_Qгаза_ПодгСтабРаспл,
                        ТК_Pнк_ПодгСтабРаспл,  
                        ТК_Hур_ПодгСтабРаспл,
                        ТК_Wипн_К1_ПодгСтабРаспл,
                        ТК_Wт_ПодгСтабРаспл;
 СОСТ Начало{
    ЗД_Qгаза = ТК_Qгаза_ПодгСтабРаспл;
    ЗД_Pнк = ТК_Pнк_ПодгСтабРаспл;
    ЗД_Hур     = ТК_Hур_ПодгСтабРаспл;
    ЗД_Wипн_К1 = ТК_Wипн_К1_ПодгСтабРаспл;
    ЗД_Wт      = ТК_Wт_ПодгСтабРаспл;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИсхПоложения {
    СТАРТ ПРОЦ КонтрольСТС_РА_ПодготовкаСтабилизацииРасплава;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроляИ_ЗапускТИГ_ПВК {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ПодготовкаСтабилизацииРасплава В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольСТС_РА_ПодготовкаСтабилизацииРасплава В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ ТИГ_ПВК;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ ПроверкаТИГ_ПВК{
    ЕСЛИ (!(ПРОЦ ТИГ_ПВК В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ТИГ_ПВК В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ ПаузаНаНормализациюДУ{
    ТАЙМАУТ ТРИ_МИНУТЫ В СОСТ ВключениеРЕГ_УР;
 }
 СОСТ ВключениеРЕГ_УР{
              СТАРТ ПРОЦ РЕГ_УР;
              СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==    ПЕРЕМЕЩЕНИЕ ЗАТРАВКИ В ПОЛОЖЕНИЕ ПРОГРЕВА     ==*/
/*==            643.АЭ1610.10121  Д2.16               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ПодготовкаПрогреваЗатравки{
 ИЗ ПРОЦ Инициализация
                        ЗД_VзУ,
                        ЗД_Xз,
                        ЗД_Hур,
                        ФП_Lмонокристалла,
                        НП_Lз_ОТ_КВП_ДО_СТЫКА_НК,
                        НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1,
                        ТК_РасстояниеДоРасплава_Lпп,
                        ТК_VзДвижения_кРасплаву_Vпп;

 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ПодготовкаПрогреваЗатравки;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ПодготовкаПрогреваЗатравки В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ПодготовкаПрогреваЗатравки В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗатравкуДП {                
     СТАРТ ПРОЦ ЗАТ_ДП;
     В СЛЕДУЮЩЕЕ;
  }
  СОСТ КонтрольВыполненияПривязки{
     ЕСЛИ (!(ПРОЦ ЗАТ_ДП В СОСТ АКТИВНОЕ)) {
          ЕСЛИ (ПРОЦ ЗАТ_ДП В СОСТ ОШИБКА) ОШИБКА;
          ИНАЧЕ В СЛЕДУЮЩЕЕ;
     }
  } 
 СОСТ ВычислениеЗадания{
    ЗД_Xз =   -(НП_Lз_ОТ_КВП_ДО_СТЫКА_НК +
                НП_L_ОТ_СТЫКА_НК_ДО_ПНУР_L1 -
                ЗД_Hур -
                ТК_РасстояниеДоРасплава_Lпп -
                ФП_Lмонокристалла);
    ЗД_VзУ =  ТК_VзДвижения_кРасплаву_Vпп;
    СТАРТ ПРОЦ ЗАТ_УК_УС; /* в координату по ускоренному перемещению */
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеПрихода{
    ЕСЛИ (!(ПРОЦ ЗАТ_УК_УС В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ЗАТ_УК_УС В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ СТОП;
    }
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            ТП  ПРОГРЕВ ЗАТРАВКИ                  ==*/
/*==           643.АЭ1610.10121  Д2.17                ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ПрогревЗатравки{
ИЗ ПРОЦ Инициализация   Флаг_КонецТП, 
                        ТК_Тр_СтабРаспл, 
                        ТК_Режим_СтабРаспл;
ИЗ ПРОЦ Инициализация ЗД_Тн, ФП_Тн;
ИЗ ПРОЦ Инициализация ЗД_Тр, ФП_Тр;
 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ПрогревЗатравки;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ПрогревЗатравки В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ПрогревЗатравки В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
   ЗД_Тн = ФП_Тн; /*  Зюбин 06.01.15 для включения РЕГ_ТР и РЕГ_ТН (сращивание по Тн)*/
   ЗД_Тр = ТК_Тр_СтабРаспл;
   ЕСЛИ (ТК_Режим_СтабРаспл == СТАБИЛИЗАЦИЯ_ПО_МОЩНОСТИ) {
        В СОСТ ПередачаСообщенияЗапускТП;
   } ИНАЧЕ {
        СТАРТ ПРОЦ ВКЛ_РЕГ_ТР;
        В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ КонтрольЗапускаРегулятора_иНачалоТП{
    ЕСЛИ (!(ПРОЦ ВКЛ_РЕГ_ТР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_ТР В СОСТ СТОП) {
            Флаг_КонецТП = ВЫКЛ;
            В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ПРОГРЕВ_ЗАТРАВКИ))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==                ЗАТРАВЛИВАНИЕ                     ==*/
/*==            643.АЭ1610.10121  Д2.18               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_Затравливание{
 ИЗ ПРОЦ Инициализация
                        ФП_Dкр,
                        ФП_Xз,
                        ФП_Тр,
                        ФП_Тн,
                        ЗД_Тр, 
                        ЗД_Wз,
                        ЗД_VзР,
                        ЗД_Wт,
                        ЗД_Hур,
                        ЗД_Тн,
                        ЗД_Pнк,
                        ЗД_Qгаза,
                        К_ДАТЧИКА_КАСАНИЯ,
                        ФлагDкр_ТДД,
                        ТК_Тр_СтабРаспл, 
                        ТК_Режим_СтабРаспл,
                        ТК_РасстояниеДоРасплава_Lпп,
                   /*      ТК_Wз_Затравл, */
                        ТК_Vз_Погружения_Затравл,
                        ТК_Hпогр_Затравл,
                   /*      ТК_Wт_Затравл, */
                   /*      ТК_Hур_Затравл,*/
                   /*      ТК_Тн_Затравл, */
                   /*      ТК_Pнк_Затравл,*/
                   /*     ТК_Qгаза_Затравл,*/
                        ТК_ТожиданияДиаметра_Затравл,
                        ТК_ТcлепогоПлавления_Затравл,
                        ТК_Dмин_Затравл,
                        ТК_Dмакс_Затравл;

 ПЛАВ ЛП_Координата ЛОКАЛ;
 ДЦЕЛ ЛП_ВремяПогружения ЛОКАЛ;
 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ЗатравливаниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ЗатравливаниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ЗатравливаниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускРегулятораТР{
   ЕСЛИ (ТК_Режим_СтабРаспл == СТАБИЛИЗАЦИЯ_ПО_МОЩНОСТИ) 
      В СОСТ ЗапускРегуляторов;
   ИНАЧЕ {
      ЗД_Тн = ФП_Тн;
      ЗД_Тр = ТК_Тр_СтабРаспл;
      СТАРТ ПРОЦ ВКЛ_РЕГ_ТР;
      В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ КонтрольВхожденияТр_вТрубку10град{
      ЕСЛИ (((ФП_Тр - ЗД_Тр) < 10.0) && ((ФП_Тр - ЗД_Тр) >= 0.0)) В СЛЕДУЮЩЕЕ; /*  Зюбин */
 }
 СОСТ ЗапускРегуляторов{
    ЛП_Координата = -ФП_Xз;
    ЗД_VзР   = -ТК_Vз_Погружения_Затравл;
/*    ЗД_Тн    += ТК_Тн_Затравл; /*  это поправка  добавить 06.05.22 */

/*     ЗД_Wз    = ТК_Wз_Затравл;
/*     ЗД_Wт    = ТК_Wт_Затравл;
/*     ЗД_Pнк   = ТК_Pнк_Затравл;
/*     ЗД_Qгаза = ТК_Qгаза_Затравл;
/*     ЗД_Hур   = ТК_Hур_Затравл;
*/

    СТАРТ ПРОЦ ЗАТ_РС;
/*  СТАРТ ПРОЦ ЗАТ_ВР; !!!! Поверять включение при котроле СТС
    СТАРТ ПРОЦ ЗАТ_РС;   !!!! Если какой-то рег. не влючен - в РР
    СТАРТ ПРОЦ ТИГ_ВР;
    СТАРТ ПРОЦ РЕГ_УР;
    СТАРТ ПРОЦ РЕГ_ТН;
    СТАРТ ПРОЦ РЕГ_Д;
    СТАРТ ПРОЦ РЕГ_РГ;
*/
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеКасания{
    ЕСЛИ (ФП_Xз < -(ЛП_Координата +
                    ТК_РасстояниеДоРасплава_Lпп +
                    2.0)) {
         СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
         В СОСТ НетСигналаОтДатчикаКасания;
    } ИНАЧЕ {
         ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) {
              ЛП_Координата = ФП_Xз;
              СТАРТ ПРОЦ КонтрольДендритов;
              В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ ПередачаКоординатыНачалаЗатравливания{
   ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_КООРДИНАТА_КАСАНИЯ_РАСПЛАВА_ПРИ_ЗАТРАВЛИВАНИИ, ЛП_Координата))
         В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ АнализКоординатыПриПогружении{
    ЕСЛИ (ФП_Xз < (ЛП_Координата - ТК_Hпогр_Затравл)) {
         СТАРТ ПРОЦ ВЫК_ЗАТРАВКУ;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПаузаНаПлавление{
    ТАЙМАУТ ТК_ТcлепогоПлавления_Затравл В СОСТ ОжиданиеПоявленияДиаметра;
 }
 СОСТ ОжиданиеПоявленияДиаметра{
    ЕСЛИ (ФлагDкр_ТДД) {
         ЕСЛИ ((ФП_Dкр >= ТК_Dмин_Затравл) && (ФП_Dкр <= ТК_Dмакс_Затравл))
         СТОП;
    }
    ТАЙМАУТ ТК_ТожиданияДиаметра_Затравл В СОСТ НетСигналаОтДатчикаДиаметра;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НетСигналаОтДатчикаДиаметра{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ПРИ_ПЛАВЛ_ЗАТР_ДИАМЕТР_В_ЗАД_ДИАПАЗОНЕ_НЕ_ОБНАРУЖЕН)) ОШИБКА;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НетСигналаОтДатчикаКасания{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_РАСПЛАВ_НЕ_ОБНАРУЖЕН)) ОШИБКА;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*================================================*/
/*=          КОНТРОЛЬ ДЕНДРИТОВ                  =*/
/*=          643.АЭ1610.10000 Д2.18              =*/
/*================================================*/
ПРОЦ КонтрольДендритов{
ИЗ ПРОЦ Инициализация   ФП_Dкр,
                        ФлагDкр,
                        ТК_ДиаметрДендрита;

 СОСТ Начало{
    ЕСЛИ (ФлагDкр == ВКЛ) {
         ЕСЛИ (ФП_Dкр > ТК_ДиаметрДендрита) В СОСТ ПередачаСообщения;
    }
    ЕСЛИ (!(ПРОЦ РА_Затравливание В СОСТ АКТИВНОЕ)) СТОП;
 }
 СОСТ ПередачаСообщения{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ДЕНДРИТЫ__ТРЕБУЕТСЯ_ВМЕШАТЕЛЬСТВО_ОПЕРАТОРА))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Пауза{
    ТАЙМАУТ ТРИ_МИНУТЫ В СОСТ Начало;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==             СТАБИЛИЗАЦИЯ РАСПЛАВА                ==*/
/*==            643.АЭ1610.10121  Д2.15               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_СтабилизацияРасплава{
 ИЗ ПРОЦ Инициализация
                          ЗД_Wипн_К1,
                          ЗД_Тн,
                          ЗД_Тр,
                          ФлагДТН,
                          ФП_Тн,
/*                          НП_Тсм_ДТН, */
                          ТК_Режим_СтабРаспл,
                          ТК_Время_СтабРаспл  ,
                          ТК_Wипн_К1_ПодгСтабРаспл,
                          ТК_Тр_СтабРаспл     ,
                          ТК_ТнОж_СтабРасп    ;

 ЦЕЛ  ЛП_Счетчик ЛОКАЛ;
 ПЛАВ ЛП_СредняяТн ЛОКАЛ;
 ПЛАВ ЛП_РассогласованиеТн ЛОКАЛ;

 СОСТ Начало{ /*  - Зюбин */
    СТАРТ ПРОЦ КонтрольСТС_РА_СтабилизацияРасплава;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_СтабилизацияРасплава В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольСТС_РА_СтабилизацияРасплава В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТАРТ ПРОЦ КонтрольСтабилизацииРасплава;  /*  - Зюбин */
              ЛП_Счетчик = 0;
              ЛП_СредняяТн = 0.0;
              ЕСЛИ (ТК_Режим_СтабРаспл == СТАБИЛИЗАЦИЯ_ПО_МОЩНОСТИ) {
                   ЗД_Wипн_К1 = ТК_Wипн_К1_ПодгСтабРаспл;
                   СТОП ПРОЦ РЕГ_ТР;
                   СТОП ПРОЦ РЕГ_РОСТА;
                   СТОП ПРОЦ ВКЛ_РЕГ_ТН;
                   СТАРТ ПРОЦ ВКЛ_РЕГ_W_ИПН_К1;
	           В СОСТ ПаузаНаСтабилизацию;
              } ИНАЧЕ {
                   ЗД_Wипн_К1 = ТК_Wипн_К1_ПодгСтабРаспл;
                   ЗД_Тн = ФП_Тн; /*  - Зюбин */
                   ЗД_Тр = ТК_Тр_СтабРаспл;
                   В СЛЕДУЮЩЕЕ;
              }
         }
    }
 }
/* СОСТ ПаузаНаНормализациюПоказанийТр{   - Зюбин
    ТАЙМАУТ ДЕСЯТЬ_МИНУТ В СОСТ ВключениеРегулятораТр;
 }
*/
 СОСТ ВключениеРегулятораТр{
    СТАРТ ПРОЦ ВКЛ_РЕГ_ТР; 
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольЗапускаРегулятора{  /*  06.01.16. Зюбин */
    ЕСЛИ (!(ПРОЦ ВКЛ_РЕГ_ТР В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВКЛ_РЕГ_ТР В СОСТ СТОП) {
            В СЛЕДУЮЩЕЕ;
         } ИНАЧЕ ОШИБКА;
    }
 }

 СОСТ ПаузаНаСтабилизацию{
    ЕСЛИ (ПРОЦ КонтрольСтабилизацииРасплава В СОСТ ПАССИВНОЕ) СТОП;
    ТАЙМАУТ ТК_Время_СтабРаспл В СЛЕДУЮЩЕЕ;
 }
 
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НевозможноСтабилизироваться{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ВРЕМЯ_НА_СТАБ_РАСПЛАВА_ИСТЕКЛО)) { /* смысл сообщения - "Истекло время стабилизации расплава" */
     СТОП ПРОЦ КонтрольСтабилизацииРасплава;
     ОШИБКА;
   }
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}


/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            КОНТРОЛЬ СТАБИЛИЗАЦИИ                 ==*/
/*==             643.АЭ1610.10121  Д2.13              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ КонтрольСтабилизацииРасплава{
 ИЗ ПРОЦ Инициализация ФП_Тр;

 ПЛАВ ЛП_Тмакс ЛОКАЛ; 
 ПЛАВ ЛП_Тмин ЛОКАЛ;
 
 СОСТ Начало{
        ЛП_Тмакс = ФП_Тр;
        ЛП_Тмин = ФП_Тр;
	В СЛЕДУЮЩЕЕ;
 }
 СОСТ РасчетТмаксТмин{
        ЕСЛИ (ЛП_Тмакс < ФП_Тр) ЛП_Тмакс = ФП_Тр;
        ЕСЛИ (ЛП_Тмин > ФП_Тр) ЛП_Тмин = ФП_Тр;
        ЕСЛИ ((ЛП_Тмакс - ЛП_Тмин) > 6.0) В СОСТ Начало;
 	ТАЙМАУТ ДВАДЦАТЬ_МИНУТ В СЛЕДУЮЩЕЕ;
 }
 СОСТ СообщениеОРасплавлении{
   /*  Зюбин смысл - "Стабилизация завершена" 
      в последующем решить с сообщением: */   
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_СТАБ_РАСПЛАВА_ЗАВЕРШЕНА)) { 
        СТОП;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ ОШИБКА;
 }
}


/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==   ТП  ВЫРАЩИВАНИЕ ПЕРЕХОДА ЗАТРАВКА-ШЕЙКА        ==*/
/*==           643.АЭ1610.10121  Д2.19                ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ВыращиваниеПереходаЗатравкаШейка{
ИЗ ПРОЦ Инициализация   Флаг_КонецТП;
 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
   Флаг_КонецТП = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ПЕРЕХОДА_ЗАТРАВКА_ШЕЙКА))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*======================================================*/
/*==                                                  ==*/
/*==    Интерполяция ЗД_РЕГ_ДК ШЕЙКИ                  ==*/
/*==            643.АЭ1610.10121  Д2.20               ==*/
/*======================================================*/
ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Шейка{
ИЗ ПРОЦ Инициализация       
                            ФлагDкр,
                            ЗД_Dкр,
                            ФП_Dкр,
			    ТК_ЗД_Dкр_Шейка;
 СОСТ Начало{
    ЕСЛИ (ФлагDкр) {
		ЗД_Dкр = ФП_Dкр; 
		В СЛЕДУЮЩЕЕ;
	}
 }
 СОСТ Интерполяция{
	ЕСЛИ (fabs(ЗД_Dкр - ТК_ЗД_Dкр_Шейка) > 0.01) {
		ЕСЛИ (ЗД_Dкр < ТК_ЗД_Dкр_Шейка) ЗД_Dкр += 0.01;
		ИНАЧЕ ЗД_Dкр -= 0.01;
		В СЛЕДУЮЩЕЕ;
	} ИНАЧЕ {
		ЗД_Dкр = ТК_ЗД_Dкр_Шейка;
		СТОП;
	}
 }
 СОСТ Пауза2сек{
	ТАЙМАУТ 20 В СОСТ Интерполяция;
 }
}


/*======================================================*/
/*==                                                  ==*/
/*==    Интерполяция ЗД_Vроста ШЕЙКИ  уничтожен процесс  добавлено  - Зюбин                ==*/
/*==            643.АЭ1610.10121  Д2.20               ==*/
/*======================================================*/
/*==ПРОЦ ПрограммнаяИнтерполяцияЗД_Vроста_Шейка{
/*==ИЗ ПРОЦ Инициализация       
/*==                            
/*==                            ЗД_Vроста,
/*==							ЗД_VзР,
/*==                            ТК_ЗД_Vроста_Шейка;
/*== СОСТ Начало{
/*==		ЗД_Vроста = ЗД_VзР; 
/*==		В СЛЕДУЮЩЕЕ;
/*== }
/*== СОСТ Интерполяция{
/*==	ЕСЛИ (fabs(ЗД_Vроста - ТК_ЗД_Vроста_Шейка) > 0.0033) {
/*==		ЕСЛИ (ЗД_Vроста < ТК_ЗД_Vроста_Шейка) ЗД_Vроста += 0.0033;
/*==		ИНАЧЕ ЗД_Vроста -= 0.0033;
/*==		В СЛЕДУЮЩЕЕ;
/*==	} ИНАЧЕ {
/*==		ЗД_Vроста = ТК_ЗД_Vроста_Шейка;
/*==		СТОП;
/*==	}
/*== }
/*== СОСТ Пауза2сек{
/*==	ТАЙМАУТ 20 В СОСТ Интерполяция;
/*== }
/*==}
*/
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==             ВЫРАЩИВАНИЕ ШЕЙКИ                    ==*/
/*==            643.АЭ1610.10121  Д2.20               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ВыращиваниеШейки{
ИЗ ПРОЦ Инициализация       ЗД_VзР,
                            ЗД_Тн,
                            ЗД_Dкр,
                            ЗД_Vроста,
                            ФП_Xз,
                            ФП_Dкр,
                            ОП_КоординатаТекЧастиМонокристалла,
                            ОП_КоординатаНачалаШейки,
                            НП_Кп_Dкр,
                            НП_Кд_Dкр,
                            НП_Ки_Dкр,
                            НП_Кз_Dкр,
                            НП_Кп_Vроста,
                            НП_Кд_Vроста,
                            НП_Ки_Vроста,
                            НП_Кз_Vроста,
                            НП_Пауза_РЕГ_РОСТА,
                            НП_ВремяОсредненияVзVроста,
                            НП_ДелтаVзРС_МАХ,
                            НП_ВремяПереходногоПроцессаDкр,
                            НП_ПогрешностьDкр,
                            НП_Пауза_Dкр,
                            ТК_Ки_Dкр_Шейка,
                            ТК_Кд_Dкр_Шейка,
                            ТК_Кп_Dкр_Шейка,
                            ТК_Кз_Dкр_Шейка,
                            ТК_Пауза_Dкр_Шейка,
                            ТК_VслепогоВыращивания_Шейка,
                            ТК_ПоправкаТн_Шейка,
                            ТК_ТcлепогоВыращивания_Шейка,
                            ТК_DкрОжидаемый_Шейка,
                            ТК_Попр_кТн_поDкро_Шейка,
                            ТК_ЗД_Dкр_Шейка,
                            ТК_Ки_Vроста_Шейка,
                            ТК_Кд_Vроста_Шейка,
                            ТК_Кп_Vроста_Шейка,
                            ТК_Кз_Vроста_Шейка,
                            ТК_Пауза_Vроста_Шейка,
                            ТК_ЗД_Vроста_Шейка,
                            ТК_Dкр_НачалаСчетаДлины_Шейка,
                            ТК_DкрОтбраковки_Шейка,
                            ТК_ДлинаХорошейЧасти_Шейка;

ПЛАВ ЛП_КоррекцияТнНачалаШейки ЛОКАЛ;
ПЛАВ ЛП_ДлинаХорошихКусковШейки ЛОКАЛ;
ПЛАВ ЛП_КоординатаНачалаХорошегоКуска ЛОКАЛ;
ДЦЕЛ ЛП_Счетчик ЛОКАЛ;


 СОСТ Начало{
   ЛП_Счетчик = 0;                          /* добавить */
   ЛП_ДлинаХорошихКусковШейки = 0.0;
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоШейки {
   ЗД_VзР = ТК_VслепогоВыращивания_Шейка;
   ЗД_Тн  += ТК_ПоправкаТн_Шейка; /*  это поправка  */
   СТАРТ ПРОЦ ЗАТ_РС;
   СТОП ПРОЦ РЕГ_ТР;       /*  Зюбин №3 КЗЦМ*/
   СТОП ПРОЦ РЕГ_РОСТА;
   СТАРТ ПРОЦ ВКЛ_РЕГ_ТН;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПАУЗА_СлепогоВыращиванияШейки {
      ТАЙМАУТ ТК_ТcлепогоВыращивания_Шейка В СЛЕДУЮЩЕЕ;
 }
 СОСТ КоррекцияТнНачалаШейки {
    ЛП_КоррекцияТнНачалаШейки =
          ТК_Попр_кТн_поDкро_Шейка *
          (ФП_Dкр - ТК_DкрОжидаемый_Шейка);
    ЕСЛИ (ЛП_КоррекцияТнНачалаШейки < -0.1) { /*  */
	В СЛЕДУЮЩЕЕ;
	ЗД_Тн += ЛП_КоррекцияТнНачалаШейки;
    }
    ИНАЧЕ В СОСТ ИнициализНП_Dкр_РегРоста;
 }
 СОСТ ПередачаПоправкиТн{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_РА_ШЕЙКА_ПОПРАВКА_ДТН, ЛП_КоррекцияТнНачалаШейки))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ИнициализНП_Dкр_РегРоста {
   НП_Ки_Dкр =   ТК_Ки_Dкр_Шейка;
   НП_Кд_Dкр =   ТК_Кд_Dкр_Шейка;
   НП_Кп_Dкр =   ТК_Кп_Dкр_Шейка;
   НП_Кз_Dкр =   ТК_Кз_Dкр_Шейка;
   НП_Пауза_Dкр = ТК_Пауза_Dкр_Шейка;
/*   НП_ДелтаVзРС_МАХ = 7.0; /* решить, может надо вводить ТК */
   ЗД_Dкр = ТК_ЗД_Dкр_Шейка;
   СТАРТ ПРОЦ ПередачаПИВПараметров_РЕГ_ДК;

   НП_Кп_Vроста = ТК_Кп_Vроста_Шейка;
   НП_Кд_Vроста = ТК_Кд_Vроста_Шейка;
   НП_Ки_Vроста = ТК_Ки_Vроста_Шейка;
   НП_Кз_Vроста = ТК_Кз_Vроста_Шейка;
   НП_Пауза_РЕГ_РОСТА =  ТК_Пауза_Vроста_Шейка;
   ЗД_Vроста = ТК_ЗД_Vроста_Шейка;
   СТАРТ ПРОЦ ПередачаПИВПараметров_РЕГ_РОСТА;

/*   СТАРТ ПРОЦ РЕГ_РОСТА;  */
   СТАРТ ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Шейка; /* - Зюбин */
/*   СТАРТ ПРОЦ ПрограммнаяИнтерполяцияЗД_Vроста_Шейка; /* - Зюбин */
   СТАРТ ПРОЦ ПрограммныйСбросТемпературы; /*  */
   СТАРТ ПРОЦ РЕГ_ДК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ АнализДиаметраКристалла {
    ЕСЛИ (ФП_Dкр < ТК_Dкр_НачалаСчетаДлины_Шейка) {
         ЛП_ДлинаХорошихКусковШейки = 0.0;
         ЛП_КоординатаНачалаХорошегоКуска = ФП_Xз;
         СТАРТ ПРОЦ УпреждениеОтрываШейки;
         В СЛЕДУЮЩЕЕ;
    }
    ТАЙМАУТ ТРИДЦАТЬ_МИНУТ В СОСТ Сооб_ШейкаНеУтончается;
 }
 СОСТ НаборХорошихКусковШейки{
    ЕСЛИ (ФП_Dкр < ТК_DкрОтбраковки_Шейка) {
         ЛП_ДлинаХорошихКусковШейки +=
              (ФП_Xз - ЛП_КоординатаНачалаХорошегоКуска);
         ЕСЛИ (ЛП_ДлинаХорошихКусковШейки >= ТК_ДлинаХорошейЧасти_Шейка) {
              СТОП ПРОЦ РЕГ_РОСТА;
              СТОП ПРОЦ РЕГ_ДК;
              СТОП ПРОЦ УпреждениеОтрываШейки;
              ЗД_VзР = ТК_ЗД_Vроста_Шейка;
              СТОП;
         }
    }
    ЛП_КоординатаНачалаХорошегоКуска = ФП_Xз;
    ЛП_Счетчик++;             /* добавить */
    ЕСЛИ (ЛП_Счетчик >= 50) {
         ЛП_Счетчик = 0;
         SendMsgFloatParamPIV(ИЗМН_ОП_LкачественнойШейки, ЛП_ДлинаХорошихКусковШейки); /* добавить */
    }
    ТАЙМАУТ ДВА_ЧАСА В СОСТ Сооб_ШейкаНеВыращивается;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ Сооб_ШейкаНеУтончается{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ШЕЙКА_НЕ_УТОНЧАЕТСЯ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Сооб_ШейкаНеВыращивается{
    СТОП ПРОЦ УпреждениеОтрываШейки;
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_КАЧЕСТВЕННАЯ_ШЕЙКА_НЕ_РАСТЕТ)) ОШИБКА;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*================================================*/
/*=         ПРОГРАММНЫЙ СБРОС ТЕМПЕРАТУРЫ        =*/
/*=         643.АЭ1610.10000 Д2.20               =*/
/*================================================*/
ПРОЦ ПрограммныйСбросТемпературы{
ИЗ ПРОЦ Инициализация       
			ЗД_Тн,
			ТК_VпониженияТемпературы_Шейка,
            ФП_Vроста,
            ТК_ЗД_Vроста_Шейка,
			НП_ВремяОсредненияVзVроста,
			НП_Пауза_Vроста;

ПЛАВ ЛП_Предыдущая ЛОКАЛ; 
ПЛАВ ЛП_ПроизводнаяVроста ЛОКАЛ; 
ДЦЕЛ ЗадержкаНаОсреднениеСкоростиРоста ЛОКАЛ;

 СОСТ Начало{ /* - Зюбин*/
	ЗадержкаНаОсреднениеСкоростиРоста = НП_ВремяОсредненияVзVроста * НП_Пауза_Vроста;
        ЛП_Предыдущая = ФП_Vроста;
	ЛП_ПроизводнаяVроста = 0.0; 
	ТАЙМАУТ ЗадержкаНаОсреднениеСкоростиРоста В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза{
  ТАЙМАУТ ОДНА_МИНУТА В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОценкаСкоростиРоста{ 
  ЛП_ПроизводнаяVроста = ФП_Vроста - ЛП_Предыдущая; /* - Зюбин*/
  ЛП_Предыдущая = ФП_Vроста;
/*  ЕСЛИ((ФП_Vроста + ЛП_ПроизводнаяVроста * 16.0) < ТК_ЗД_Vроста_Шейка) { /* - Зюбин*/
  ЕСЛИ (ФП_Vроста < ТК_ЗД_Vроста_Шейка) { /* - Зюбин - ПЛАВКА */
	ЗД_Тн -= ТК_VпониженияТемпературы_Шейка;
	В СОСТ Пауза;
  } ИНАЧЕ СТОП;
 }
}

/*================================================*/
/*=         РАСЧЕТ СКОРОСТИ ПОДРЕЗКИ             =*/
/*=         643.АЭ1610.10000 Д2.20               =*/
/*=  ИНТЕРЕСНО: гарантия событий на начало и     =*/
/*=  и конец заданного периода времени           =*/
/*================================================*/
ПРОЦ РасчетСкоростиРостаДиаметра{
ИЗ ПРОЦ Инициализация   
                        ФлагDкр,
             			ФП_Dкр;

ПЛАВ ФП_VразращиванияDкр ДЛЯ ВСЕХ;

 СОСТ Начало{
   ФП_VразращиванияDкр = 0.0;
   ЕСЛИ (ФлагDкр){
     Undercutting_Init();
     СТАРТ ПРОЦ КонтрольИзмененияСкоростиПодрезки;
     В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ Пауза {
   ТАЙМАУТ ОДНА_СЕКУНДА {
      ЕСЛИ (ФлагDкр) {
         ФП_VразращиванияDкр = CalcUndercutting (60, ФП_Dкр);
         В СОСТ Пауза;
      }
   }
 }
}

ПРОЦ КонтрольИзмененияСкоростиПодрезки{ /*  Зюбин */
 ИЗ ПРОЦ Инициализация   ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА;
 ИЗ ПРОЦ РасчетСкоростиРостаДиаметра ФП_VразращиванияDкр;
 ПЛАВ ЛП_Предыдущее ЛОКАЛ;

 СОСТ Начало{
    ЛП_Предыдущее = (!ФП_VразращиванияDкр);
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ КонтрольИзменения{
    ЕСЛИ (ЛП_Предыдущее != ФП_VразращиванияDкр) {
         ЛП_Предыдущее = ФП_VразращиванияDкр;
         В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаРасчетногоОператору{
    ЕСЛИ (SendMsgFloatParamPIV(ПК_ПИВ_ФП_Vподрезки, ФП_VразращиванияDкр))
         В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ Начало;
 }
 СОСТ ТрафикПауза{
    ТАЙМАУТ ЗАДЕРЖКА_НА_РАЗГРУЗКУ_ТРАФИКА В СОСТ КонтрольИзменения;
 }
}

/*================================================*/
/*=         УПРЕЖДЕНИЕ ОТРЫВА ШЕЙКИ              =*/
/*=         643.АЭ1610.10000 Д2.20               =*/
/*================================================*/
ПРОЦ УпреждениеОтрываШейки{
ИЗ ПРОЦ Инициализация
                            ФП_Dкр,
                            ФП_VзР,
                            ФП_Vроста,
                            ЗД_VзР,
                            ТК_БезопасныйDкр_Шейка,
                            ТК_VзБезопасное_Шейка,
                            ТК_ТстабилизацииDкр_Шейка,
                            ТК_ТбезопаснойСкорости_Шейка;

ПЛАВ ЛП_VзСреднееСпасенное ЛОКАЛ;

 СОСТ Начало{
    ЕСЛИ (ФП_Dкр < ТК_БезопасныйDкр_Шейка) {
         ЕСЛИ (!(ПРОЦ ПредупреждениеОмаломDкр В СОСТ АКТИВНОЕ))
              СТАРТ ПРОЦ ПредупреждениеОмаломDкр; /* выдать предупреждение  */
         ЕСЛИ (ФП_VзР > ТК_VзБезопасное_Шейка) В СЛЕДУЮЩЕЕ; /* 06.01.17 Зюбин - убрана БезопасноеСреднее*/
    }
    ЕСЛИ (ПРОЦ РА_ВыращиваниеШейки В СОСТ ПАССИВНОЕ) СТОП;
 }
 СОСТ СообщениеО_ВКЛ_БезопасногоРежимаВырШейки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ВКЛЮЧЕН_БЕЗОПАСНЫЙ_РЕЖИМ_ВЫРАЩИВАНИЯ_ШЕЙКИ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Инициализация_VзСреднееИ_ЗД_Vз {
    ЛП_VзСреднееСпасенное = ФП_Vроста;
    ЗД_VзР = ТК_VзБезопасное_Шейка;
    СТОП ПРОЦ РЕГ_ДК;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПАУЗА_ДвиженияНаБезопаснойV {
    ЗД_VзР = ТК_VзБезопасное_Шейка;
    ТАЙМАУТ ТК_ТбезопаснойСкорости_Шейка В СОСТ СообщениеО_ВЫК_БезопасногоРежимаВырШейки;
 }
 СОСТ СообщениеО_ВЫК_БезопасногоРежимаВырШейки{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ВЫКЛЮЧЕН_БЕЗОПАСНЫЙ_РЕЖИМ_ВЫРАЩИВАНИЯ_ШЕЙКИ))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Инициализация_ЗД_Vз {
    ЗД_VзР = ЛП_VзСреднееСпасенное;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПАУЗА_НаСтабилизациюDкр {
      ТАЙМАУТ ТК_ТстабилизацииDкр_Шейка В СОСТ ВключениеРегуляторов;
 }
 СОСТ ВключениеРегуляторов {
    СТАРТ ПРОЦ РЕГ_ДК;
    В СОСТ Начало;
 }

/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязи {
     ОШИБКА;
 }
}

/*================================================*/
/*=   ПРЕДУПРЕЖДЕНИЕ О МАЛОМ ДИАМЕТРЕ КРИСТАЛЛА  =*/
/*=   643.АЭ1610.10000 Д2.20                     =*/
/*================================================*/
ПРОЦ ПредупреждениеОмаломDкр{

 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ДИАМЕТР_КРИСТАЛЛА_МЕНЬШЕ_БЕЗОПАСНОГО))
        В СЛЕДУЮЩЕЕ;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ПАУЗА_30_Секунд {
      ТАЙМАУТ ПОЛ_МИНУТЫ В СОСТ ОстановПроцесса;
 }
 СОСТ ОстановПроцесса {
      СТОП;
 }
/*== НЕНОРМАЛЬНЫЕ СИТУАЦИИ ====*/
 СОСТ НарушениеСвязи {
     СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==   ТП  ВЫРАЩИВАНИЕ ПЕРЕХОДА ШЕЙКА-КОНУС           ==*/
/*==           643.АЭ1610.10121  Д2.21                ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ВыращиваниеПереходаШейкаКонус{  /* пустой этап  - Зюбин */
 СОСТ Начало{
   СТОП ПРОЦ РЕГ_ДК;
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ СТОП;
    }
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==             ВЫРАЩИВАНИЕ КОНУСА                   ==*/
/*==            643.АЭ1610.10121  Д2.22               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ВыращиваниеКонуса{
ИЗ ПРОЦ Инициализация
                            ФП_Xз,
                            ФП_Dкр,
                            ЗД_VзР,
                            ЗД_Тн,
                            ОП_КоординатаТекЧастиМонокристалла,
                            ОП_КоординатаНачалаКонуса,
                            ТК_ПоправкаТн_Конус,
                            ТК_Vз_Конус,
                            ТК_DконусаКонечный_Конус;
/*                            ТК_К1_Конуса,
                            ТК_К2_Конуса;
*/
ИЗ ПРОЦ Инициализация   Флаг_КонецТП;


ПЛАВ ФП_СкоростьРостаКонуса ДЛЯ ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр;
ПЛАВ ФП_ТангенсУголаРостаДиаметра ДЛЯ ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр; /*  Зюбин */
ПЛАВ ОП_Dкр_НачалоКонуса ДЛЯ ПРОЦ РасчетФП_Dкр;

ПЛАВ ЛП_Xз_НачалоКонуса ЛОКАЛ;
ПЛАВ ЛП_ПоправкаТнКонуса ЛОКАЛ;
ДЦЕЛ ЛП_ВремяРостаДиаметра ЛОКАЛ;
  СОСТ Начало{
   СТОП ПРОЦ РЕГ_ДК;
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
    В СЛЕДУЮЩЕЕ;
  }
  СОСТ ПроверкаРезультатовКонтроля {
     ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
       ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
       ИНАЧЕ В СЛЕДУЮЩЕЕ;
     }
  }
  СОСТ ОстановПроцРегулирования_ДКиРоста {
 
   ОП_Dкр_НачалоКонуса = ФП_Dкр;
   ЗД_VзР = ТК_Vз_Конус;
   СТОП ПРОЦ РЕГ_ДК;
   СТОП ПРОЦ РЕГ_РОСТА;
   ЗД_Тн += ТК_ПоправкаТн_Конус;                       
   СТАРТ ПРОЦ КонтрольИзмененияЗаданий_ЗД_Тн; /* СЛОЖНО: перезапуск передачи изменения в ПКО -  Зюбин */
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПаузаНаИзменениеЗадания_вПКО{   /* СЛОЖНО: пауза для уверенной передачи изменения ЗД_Тн в ПКО -  Зюбин */
   ТАЙМАУТ ПЯТЬ_СЕКУНД В СЛЕДУЮЩЕЕ;
 }
 СОСТ НачалоЭтапа {
   Флаг_КонецТП = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_КОНУСА))  /* добавить */
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ Ожидание10ммДоКонцаКонуса {
   ЕСЛИ (ФП_Dкр >= (ТК_DконусаКонечный_Конус - 10.0)) {
         ЛП_ВремяРостаДиаметра = 0;   
/*         ЛП_Xз_НачалоКонуса  = ФП_Xз;  Зюбин 06.01.27 */
         В СЛЕДУЮЩЕЕ;
   }
 }
 СОСТ РасчетВремениРазращиванияДиаметраДоЗаданного{
    ЛП_ВремяРостаДиаметра++;
    ЕСЛИ (ФП_Dкр >= ТК_DконусаКонечный_Конус) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ВычислениеСкоростиРоста{
    ФП_СкоростьРостаКонуса = 10.0*600.0/(ПЛАВ)ЛП_ВремяРостаДиаметра; /* мм/мин */
/*    ФП_ТангенсУголаРостаДиаметра = fabs(ФП_Xз - ЛП_Xз_НачалоКонуса)/10.0;  /*  Зюбин */
    ЕСЛИ (Флаг_КонецТП == ВЫКЛ) В СЛЕДУЮЩЕЕ; /* ТП еще работает? - Прекратить насильно */
    ИНАЧЕ В СОСТ ПередачаСообщенияОКонцеТП;
 }
 СОСТ ПрекращениеТП{
     ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ПРЕКРАТИТЬ_ОТРАБОТКУ_ТП)) В СЛЕДУЮЩЕЕ;
     ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==      ВЫРАЩИВАНИЕ ПЕРЕХОДА КОНУС-ЦИЛИНДР          ==*/
/*==            643.АЭ1610.10121  Д2.23               ==*/
/*======================================================*/
/*======================================================*/ /*  06.01.17 - Зюбин */
ПРОЦ РА_ВыращиваниеПереходаКонусЦилиндр{
ИЗ ПРОЦ Инициализация

                         ФП_Dкр,
               		 ФП_Xз,
                         ЗД_Vроста,                
                         ЗД_VзР,
                         ТК_К1_КонЦил, /* Vслеп.выр. = Vвыр.конуса + К1 + Vразращ.Dкр * К2 */
                         ТК_К2_КонЦил,
                         ТК_VразращиванияГр_КонЦил, /* граничное значение изменения диаметра при контроле окончания перехода К-Ц */
                         ТК_DкрЦилиндра_КонЦил;

ИЗ ПРОЦ РА_ВыращиваниеКонуса ФП_ТангенсУголаРостаДиаметра,
							 ФП_СкоростьРостаКонуса;

ИЗ ПРОЦ РасчетСкоростиРостаДиаметра ФП_VразращиванияDкр;

 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ {
          ЗД_Vроста = ЗД_VзР + 
                      ТК_К1_КонЦил + 
                      ФП_СкоростьРостаКонуса * ТК_К2_КонЦил; /* добавить! - Зюбин */
          ЗД_VзР = ЗД_Vроста; /* базовая скорость роста перехода */
          В СЛЕДУЮЩЕЕ;
      }
    }
 }
 СОСТ КонтрольЗаворота{ /*  - Зюбин */
   ЕСЛИ (ФП_Dкр < ТК_DкрЦилиндра_КонЦил){
      ЕСЛИ (ФП_VразращиванияDкр < ТК_VразращиванияГр_КонЦил) СТОП; /* базовый контроль */
   } ИНАЧЕ {
      ЕСЛИ (ФП_VразращиванияDкр < (ТК_VразращиванияГр_КонЦил/3.0)) СТОП; /* базовый контроль */
   }
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==              СТАБИЛИЗАЦИЯ ЦИЛИНДРА               ==*/
/*==             643.АЭ1610.10121  Д2.24              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_СтабилизацияЦилиндра{
ИЗ ПРОЦ Инициализация
                         ФлагDкр,  
                         ФП_Dкр,
                         ЗД_Dкр,
                         ЗД_Тн,
                         ЗД_VзР,
                         ЗД_Vроста,
                         НП_Кп_Dкр,
                         НП_Кд_Dкр,
                         НП_Ки_Dкр,
                         НП_Кз_Dкр,
                         НП_Пауза_Dкр,                              
                         ТК_ПоправкаТн_СтабЦил,
                         ТК_VзСтабНачальная_СтабЦил,
                         ТК_Ки_Dкр_СтабЦил,
                         ТК_Кп_Dкр_СтабЦил,
                         ТК_Кд_Dкр_СтабЦил,
                         ТК_Кз_Dкр_СтабЦил,
                         ТК_Пауза_Dкр_СтабЦил;
 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускИнтерполяцииDкр_приПереходе{ /*  Зюбин 06.01.27 */
  ЕСЛИ (ФлагDкр) {
    НП_Кп_Dкр = ТК_Кп_Dкр_СтабЦил;
    НП_Кд_Dкр = ТК_Кд_Dкр_СтабЦил;
    НП_Ки_Dкр = ТК_Ки_Dкр_СтабЦил;
    НП_Кз_Dкр = ТК_Кз_Dкр_СтабЦил;
    НП_Пауза_Dкр = ТК_Пауза_Dкр_СтабЦил;
    СТАРТ ПРОЦ ПередачаПИВПараметров_РЕГ_ДК;
    ЗД_Vроста = ТК_VзСтабНачальная_СтабЦил; 
    ЗД_VзР    = ТК_VзСтабНачальная_СтабЦил; 
    ЗД_Dкр = ФП_Dкр;
    ЗД_Тн += ТК_ПоправкаТн_СтабЦил;            /*   это поправка */
    СТАРТ ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Цилиндр;
    СТАРТ ПРОЦ РЕГ_ДК;
    В СЛЕДУЮЩЕЕ;
  } 
  ТАЙМАУТ ОДНА_МИНУТА ОШИБКА;
 }
 СОСТ ЗавершениеЭтапа {
       СТОП;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==         ТП  ВЫРАЩИВАНИЕ ЦИЛИНДРА                 ==*/
/*==            643.АЭ1610.10121  Д2.25               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ВыращиваниеЦилиндра{
ИЗ ПРОЦ Инициализация   ЗД_Тн,
			Флаг_КонецТП;
ИЗ ПРОЦ Инициализация
                         ФП_Lмонокристалла,
                         ФП_Lначала_текущей_части_монокристалла,
                         ЗД_VзР,
                         ЗД_Vроста,
                         ТК_VзСтабНачальная_СтабЦил,
                         НП_Кп_Dкр,
                         НП_Кд_Dкр,
                         НП_Ки_Dкр,
                         НП_Кз_Dкр,
                         НП_Пауза_Dкр,

                         НП_Кп_Vроста,
                         НП_Кд_Vроста,
                         НП_Ки_Vроста,
                         НП_Кз_Vроста,
                         НП_Пауза_РЕГ_РОСТА, /* заменить при коррекции НП */

                         ТК_Ки_Dкр_Цилиндр,
                         ТК_Кп_Dкр_Цилиндр,
                         ТК_Кд_Dкр_Цилиндр,
                         ТК_Кз_Dкр_Цилиндр,
                         ТК_Пауза_Dкр_Цилиндр,

                      ТК_Кп_Vроста_Цилиндр   ,
                      ТК_Ки_Vроста_Цилиндр   ,
                      ТК_Кд_Vроста_Цилиндр   ,
                      ТК_Кз_Vроста_Цилиндр   ,
                      ТК_Пауза_Vроста_Цилиндр;


 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ОжиданиеКонцаПереходаКЗаданномуДиаметру{ 
    ЕСЛИ (ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Цилиндр В СОСТ ПАССИВНОЕ) 
        В СЛЕДУЮЩЕЕ;
 }
 СОСТ НастройкаРЕГ_ДКдляВыращиванияЦилиндра { /*добавить 06.05.22 */
   СТАРТ ПРОЦ КонтрольОкончанияЦилиндра;
/*   ЗД_Vроста = ТК_VзСтабНачальная_СтабЦил; добавить 06.05.22 ==
/*   ЗД_VзР    = ТК_VзСтабНачальная_СтабЦил; 
*/
   СТАРТ ПРОЦ РЕГ_ДК;

   НП_Кп_Vроста = ТК_Кп_Vроста_Цилиндр;
   НП_Кд_Vроста = ТК_Кд_Vроста_Цилиндр;
   НП_Ки_Vроста = ТК_Ки_Vроста_Цилиндр;
   НП_Кз_Vроста = ТК_Кз_Vроста_Цилиндр;
   НП_Пауза_РЕГ_РОСТА =  ТК_Пауза_Vроста_Цилиндр;
   СТАРТ ПРОЦ ПередачаПИВПараметров_РЕГ_РОСТА;
   В СЛЕДУЮЩЕЕ;                          
 }
/* а далее уже настоящий рост */

 СОСТ ЗапускКонтрОкончЦилиндра{
    ЕСЛИ (!(ПРОЦ КонтрольОкончанияЦилиндра В СОСТ АКТИВНОЕ))
         СТАРТ ПРОЦ КонтрольОкончанияЦилиндра;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ НачалоЭтапа { 
    ТАЙМАУТ ПЯТЬ_СЕКУНД { /* задержка для уверенной передачи параметров этапа (ОП_Lсумм...) добавить 06.05.22*/
       Флаг_КонецТП = ВЫКЛ;
       В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ЦИЛИНДРА))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеКонцаЭтапа_иУсловийСменыКоэффициентовРЕГ_ДК{ /*интересно: добавить 06.05.22 */
    ЕСЛИ ((ФП_Lмонокристалла - ФП_Lначала_текущей_части_монокристалла) > 100.0) {
      НП_Кп_Dкр    = ТК_Кп_Dкр_Цилиндр;
      НП_Ки_Dкр    = ТК_Ки_Dкр_Цилиндр;
      НП_Кд_Dкр    = ТК_Кд_Dкр_Цилиндр;
      НП_Кз_Dкр    = ТК_Кз_Dкр_Цилиндр;
      НП_Пауза_Dкр = ТК_Пауза_Dкр_Цилиндр;
      СТАРТ ПРОЦ ПередачаПИВПараметров_РЕГ_ДК;
      В СЛЕДУЮЩЕЕ;
    }
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*======================================================*/
/*==                                                  ==*/
/*==    Интерполяция на этапе стабилизации    - Зюбин ==*/
/*==            643.АЭ1610.10121  Д2.25 ??? 24              ==*/
/*======================================================*/
ПРОЦ ПрограммнаяИнтерполяцияЗД_Dкр_Цилиндр{
ИЗ ПРОЦ Инициализация       
                            ФлагDкр,
                            ЗД_Dкр,
                            ФП_Dкр,
                            ТК_DкрЦилиндра_КонЦил;   
 ДЦЕЛ ЛП_ВремяПаузы ЛОКАЛ;
 СОСТ Начало{
    ЕСЛИ (ФлагDкр) {
		ЗД_Dкр = ФП_Dкр;
      	В СЛЕДУЮЩЕЕ;  /*  Зюбин 06.01.27 */
    }
 }
 СОСТ Интерполяция{
	ЕСЛИ (fabs(ЗД_Dкр - ТК_DкрЦилиндра_КонЦил) > 0.01) { /* 0.0005 - максимальная скорость 0.3 мм/мин */
		ЕСЛИ (ЗД_Dкр < ТК_DкрЦилиндра_КонЦил) ЗД_Dкр += 0.0005;
		ИНАЧЕ ЗД_Dкр -= 0.0005;
	} ИНАЧЕ {
		ЗД_Dкр = ТК_DкрЦилиндра_КонЦил;
		СТОП;
	}
 }
}

/*================================================*/
/*=        КОНТРОЛЬ ОКОНЧАНИЯ ЦИЛИНДРА           =*/
/*=        643.АЭ1610.10000 Д2.24                =*/
/*================================================*/
ПРОЦ КонтрольОкончанияЦилиндра{
ИЗ ПРОЦ Инициализация ФП_Xз,
                      ФП_Lмонокристалла,
                      ФП_Мкремния_в_тигле,
                      ТК_ПороговаяLкр_Цилиндр,
                      ТК_ПороговаяМрасплава_Цилиндр,
                      ОП_КоординатаНачалаШейки;

 СОСТ Начало{
   ЕСЛИ (ФП_Lмонокристалла > ТК_ПороговаяLкр_Цилиндр) {
          В СЛЕДУЮЩЕЕ;
   } ИНАЧЕ {
     ЕСЛИ (ФП_Мкремния_в_тигле <= ТК_ПороговаяМрасплава_Цилиндр)
         В СОСТ ОграничениеПоМассе;
   }
 }
 СОСТ ОграничениеПоДлине{
    ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ОГРАНИЧЕНИЕ_ПО_ДЛИНЕ_ЦИЛ_ПЕРЕХОД_НА_ОБР_КОНУС))
        В СОСТ СообщениеПрекратитьТП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ СообщениеПрекратитьТП;
 }
 СОСТ ОграничениеПоМассе {
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ОГРАНИЧЕНИЕ_ПО_МАССЕ_ЦИЛ_ПЕРЕХОД_НА_ОБР_КОНУС))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ СообщениеПрекратитьТП;
 }
 СОСТ СообщениеПрекратитьТП {
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ПРЕКРАТИТЬ_ОТРАБОТКУ_ТП))
        СТОП;
 }
}


/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*== ТП  ВЫРАЩИВАНИЕ ПЕРЕХОДА ЦИЛИНДР-ОБРАТНЫЙ КОНУС  ==*/
/*==            643.АЭ1610.10121  Д2.26               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ВыращиваниеПереходаЦилиндрОбратныйКонус{
ИЗ ПРОЦ Инициализация Флаг_КонецТП;
 СОСТ Начало{
   СТОП ПРОЦ РЕГ_УР;
   СТОП ПРОЦ РЕГ_ДК;
   СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
   Флаг_КонецТП = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ПЕРЕХОДА_ЦИЛИНДР_ОБР_КОНУС))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==         ТП  ВЫРАЩИВАНИЕ ОБРАТНОГО КОНУСА         ==*/
/*==            643.АЭ1610.10121  Д2.27               ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ВыращиваниеОбратногоКонуса{
ИЗ ПРОЦ Инициализация   Флаг_КонецТП,
                        ФП_Xз,
                        ОП_КоординатаТекЧастиМонокристалла,
                        ОП_КоординатаНачалаОбратногоКонуса;

 СОСТ Начало{
   СТОП ПРОЦ РЕГ_УР; /* добавить 06.05.22 */
   СТОП ПРОЦ РЕГ_ДК;
   СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
   СТАРТ ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ВыращиваниеПереходаЦилОбратКонусИ_ОК В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
   Флаг_КонецТП = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ВЫРАЩИВАНИЕ_ОБРАТНОГО_КОНУСА))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

/* СОСТ ЗапускПроцесаЗАТ_РС_ОК {
/* СТАРТ ПРОЦ ЗАТ_РС_ОК;
   В СЛЕДУЮЩЕЕ;
 }
*/

 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОстановПроцесаЗАТ_РС_ОК {
/* СТОП ПРОЦ ЗАТ_РС_ОК; */
   СТОП;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*================================================*/
/*=        ЗАТРАВКА РАБОЧАЯ СКОРОСТЬ ОК          =*/
/*=        643.АЭ1610.10000 Д2.27                =*/
/*= ВРЕМЕННО НЕ ВВОДИМ. ТРЕБУЕТ ОТРАБОТКИ        =*/
/*= НА РЕАЛЬНОМ КРИСТАЛЛЕ                        =*/
/*================================================*/
ПРОЦ ЗАТ_РС_ОК{
 СОСТ Начало{
 В СОСТ Начало;
 }
}

/*
!!!!!!!!! ПРОЦ ЗАТ_РС_ОК{
ИЗ ПРОЦ Инициализация   ЗД_VзР,
                        ФП_Vроста,
                        ТК_Нормирование_Времени,
                        ТК_ВремяИзменения_V_Диаметра,
                        ТК_КоррекцииСкорости,
                        ТК_АварийнаяСкоростьПодрезки,
                        ТК_СлабаяПодрезка,
                        ТК_СильнаяПодрезка,
                        ТК_ДлинаПереходаЦилиндрКонус;

 ПЛАВ ЛП_БазоваяVз ЛОКАЛ;
 ПЛАВ ЛП_ЭкспоненциальнаяСоставляющаяVз ЛОКАЛ;
 ПЛАВ ЛП_ПоправкаVз_поVподрезки ЛОКАЛ;
 ЦЕЛ ЛП_ФлагЭкстраКоррекции ЛОКАЛ;


 СОСТ Начало{
   ЛП_БазоваяVз = ФП_Vроста;

 }
}
*/


/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==                ОТРЫВ КРИСТАЛЛА                   ==*/
/*==             643.АЭ1610.10121  Д2.28              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ОтрывКристалла{

 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ОтрывКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ОтрывКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ОтрывКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }

 СОСТ ЗапускПроцессовОтрываКристалла {
/*    СТАРТ ПРОЦ ВР_ТИГ_ОТРЫВ_КРИСТАЛЛА;  Зюбин 06.01.19 */
    СТАРТ ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА;
    СТАРТ ПРОЦ КонтрольОтрыва_ОтрывКристалла;
    В СЛЕДУЮЩЕЕ;
 }

 СОСТ КонтрольСрабатыванияКонтроляОтрыва{
    ЕСЛИ (!(ПРОЦ  КонтрольОтрыва_ОтрывКристалла В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ КонтрольОтрыва_ОтрывКристалла В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
           СТАРТ ПРОЦ ВЫК_ТИГ_ВР;
           СТАРТ ПРОЦ ВЫК_ТИГЕЛЬ;
           В СЛЕДУЮЩЕЕ;
         }
    }
 }
 СОСТ КонтрольВыключенияТигля{
    ЕСЛИ (!(ПРОЦ  ВЫК_ТИГЕЛЬ В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ВЫК_ТИГЕЛЬ В СОСТ ОШИБКА) ОШИБКА;
         ИНАЧЕ {
              СТОП;
         }
    }

 }
}

/*================================================*/
/*=   ВРАЩЕНИЕ ЗАТРАВКИ ОТРЫВ КРИСТАЛЛА          =*/
/*=        643.АЭ1610.10000 Д2.28                =*/
/*================================================*/
ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА{
ИЗ ПРОЦ Инициализация   ЗД_VзР,
                        НП_МаксимальнаяVзР, /* перевести в ТК и добавить - Зюбин */
                        ТК_УскорениеПриОтрывеКристалла;
 СОСТ Начало{
   ОШИБКА ПРОЦ РЕГ_КЗ_УР;
   ОШИБКА ПРОЦ ЗАТ_РК;
   ЕСЛИ (!(ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ЗАТ_РС;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ КорректировкаЗаданияVзР {
   ЗД_VзР += fabs(ТК_УскорениеПриОтрывеКристалла);
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаНаМаксимальнуюVз {
   ЕСЛИ (ЗД_VзР > НП_МаксимальнаяVзР) СТОП;
   ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ Пауза_1сек{
   ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ ПроверкаАктивностиЗАТ_РС;
 }
 СОСТ ПроверкаАктивностиЗАТ_РС{
      ЕСЛИ (ПРОЦ ЗАТ_РС В СОСТ АКТИВНОЕ) В СОСТ КорректировкаЗаданияVзР;
      ИНАЧЕ ОШИБКА;
 }
}

/*================================================*/
/*=        ВРАЩЕНИЕ ТИГЛЯ ОТРЫВ КРИСТАЛЛА        =*/
/*=        643.АЭ1610.10000 Д2.28                =*/
/*================================================*/
ПРОЦ ВР_ТИГ_ОТРЫВ_КРИСТАЛЛА{
ИЗ ПРОЦ Инициализация   ЗД_Wт,
                        ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА;

 СОСТ Начало{
   ЕСЛИ (!(ПРОЦ ТИГ_ВР В СОСТ АКТИВНОЕ)) СТАРТ ПРОЦ ТИГ_ВР;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВращенияТигля{
  ЕСЛИ(ЗД_Wт >= 0.0)
    ЗД_Wт -= fabs(ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА);
  ИНАЧЕ
    ЗД_Wт += fabs(ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА);
  В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВращенияТигляПослеКоррекции{
  ЕСЛИ(fabs(ЗД_Wт) < fabs(ТК_ДЕЛЬТА_Wт_ОТРЫВ_КРИСТАЛЛА)) {
	ЗД_Wт = 0.0;
  	СТОП;
  } ИНАЧЕ В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПаузаОднаСекунда{
   ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ ПроверкаВращенияТигля;
 }
}

/*================================================*/
/*=      КОНТРОЛЬ ОТРЫВА КРИСТАЛЛА               =*/
/*=        643.АЭ1610.10000 Д2.28                =*/
/*================================================*/
ПРОЦ КонтрольОтрыва_ОтрывКристалла{
ИЗ ПРОЦ Инициализация   ЗД_VзР,
                        К_ДАТЧИКА_КАСАНИЯ,
                        ТК_VзПослеОтрываКристалла;

 СОСТ Начало{
    ЕСЛИ (К_ДАТЧИКА_КАСАНИЯ) {
      ЕСЛИ (!(ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА В СОСТ АКТИВНОЕ)) {
          ЕСЛИ (ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА В СОСТ ОШИБКА) ОШИБКА;
          ИНАЧЕ В СОСТ СообщениеОтрывКристалла;
      }
    } ИНАЧЕ {
      СТОП ПРОЦ ЗАТ_РС_ОТРЫВ_КРИСТАЛЛА;
      ЗД_VзР = ТК_VзПослеОтрываКристалла;
      СТОП;
    }
 }
 СОСТ СообщениеОтрывКристалла{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_НЕТ_ОТРЫВА_КРИСТАЛЛА))
        СТОП;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}

/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==            ТП  ОХЛАЖДЕНИЕ КРИСТАЛЛА              ==*/
/*==             643.АЭ1610.10121  Д2.29              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ТП_ОхлаждениеКристалла{
ИЗ ПРОЦ Инициализация   Флаг_КонецТП;
 СОСТ Начало{
   СТАРТ ПРОЦ КонтрольСТС_РА_ОхлаждениеКристалла;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаРезультатовКонтроля {
    ЕСЛИ (!(ПРОЦ КонтрольСТС_РА_ОхлаждениеКристалла В СОСТ АКТИВНОЕ)) {
      ЕСЛИ (ПРОЦ КонтрольСТС_РА_ОхлаждениеКристалла В СОСТ ОШИБКА) ОШИБКА;
      ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ НачалоЭтапа {
   Флаг_КонецТП = ВЫКЛ;
   В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияЗапускТП{
   ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_РА_ЗАПУСТИТЬ_ТП_ОХЛАЖДЕНИЕ_КРИСТАЛЛА))
        В СЛЕДУЮЩЕЕ;
   ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеКонцаЭтапа {
    ЕСЛИ (Флаг_КонецТП != ВЫКЛ) В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПередачаСообщенияОКонцеТП{
    ЕСЛИ (Флаг_КонецТП == ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП) {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НОРМАЛЬНЫЙ_КОНЕЦ_ТП)) СТОП;
    } ИНАЧЕ {
         ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_КОНЕЦ_ТП_ПО_ОШИБКЕ)) ОШИБКА;
    }
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 /*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    ОШИБКА;
 }
}
/*======================================================*/
/*======================================================*/
/*==                                                  ==*/
/*==           ПОДГОТОВКА К РАЗГРУЗКЕ КРИСТАЛЛА       ==*/
/*==             643.АЭ1610.10121  Д2.30              ==*/
/*======================================================*/
/*======================================================*/
ПРОЦ РА_ПодготовкаРазгрузкеКристалла{
 ИЗ ПРОЦ Инициализация ТК_ПериодКонтроля_КонтрНат;
 СОСТ Начало{
   СТАРТ ПРОЦ ВЫК_ИПН;
/*   СТАРТ ПРОЦ ВЫК_ЗАТ_ВР;  Зюбин 06.01.18 */
/*   СТАРТ ПРОЦ ВЫК_ТИГ_ВР; */
/*   СТАРТ ПРОЦ ТИГ_КНП;    */
   СТАРТ ПРОЦ ВЫК_РЕГ_Д;
   СТАРТ ПРОЦ ВЫК_РЕГ_РГ;
   СТАРТ ПРОЦ ОТКР_VM14;
   В СЛЕДУЮЩЕЕ;
 }

 СОСТ Откачка20мин {
   ТАЙМАУТ ДВАДЦАТЬ_МИНУТ В СЛЕДУЮЩЕЕ; 
 }
 СОСТ КонтрольОткрVM14 {
      ЕСЛИ (!(ПРОЦ ОТКР_VM14 В СОСТ АКТИВНОЕ)) {
         ЕСЛИ (ПРОЦ ОТКР_VM14 В СОСТ ОШИБКА) ОШИБКА;
         В СЛЕДУЮЩЕЕ;
      }
 }
 СОСТ ЗапускПроцессовВыключенияАВД {
    СТАРТ ПРОЦ ВЫК_АВД1;
    СТАРТ ПРОЦ ВЫК_АВД2;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПроверкаВыключенияАВД1_2{
    ЕСЛИ ((ПРОЦ  ВЫК_АВД1 В СОСТ ПАССИВНОЕ) &&
          (ПРОЦ  ВЫК_АВД2 В СОСТ ПАССИВНОЕ)) {
         ЕСЛИ ((ПРОЦ  ВЫК_АВД1 В СОСТ ОШИБКА) ||
               (ПРОЦ  ВЫК_АВД2 В СОСТ ОШИБКА)) ОШИБКА;
         ИНАЧЕ В СЛЕДУЮЩЕЕ;
    }
 }
 СОСТ ЗапускКонтроляНатекания{
    СТАРТ ПРОЦ ИзмерениеНатекания;
    В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПаузаСекунда{
    ТАЙМАУТ ОДНА_СЕКУНДА В СЛЕДУЮЩЕЕ;
 }
 СОСТ ПаузаПередРежимомРР{
    ТАЙМАУТ ТК_ПериодКонтроля_КонтрНат СТОП;
 }
}

/*==================================================*/
/*==================================================*/
/*==                                              ==*/
/*==      ПРОЦЕССЫ КОНТРОЛЯ СТЫКОВКИ              ==*/
/*==      643.АЭ1610.10121  Д2.0                  ==*/
/*==================================================*/
/*==================================================*/
ПРОЦ ЗапускПроцессовКонтроляСтыковок{
 СОСТ Начало{
    СТАРТ ПРОЦ КонтрольСтыковки1;
    СТАРТ ПРОЦ КонтрольСтыковки2;
    СТАРТ ПРОЦ КонтрольСтыковки3;
    СТАРТ ПРОЦ КонтрольСтыковки4;
    СТАРТ ПРОЦ КонтрольСтыковки5;
    СТАРТ ПРОЦ КонтрольСтыковки6;
    СТАРТ ПРОЦ КонтрольСтыковки7;
    СТАРТ ПРОЦ КонтрольСтыковки8;
    СТОП;
 }
}

/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 1               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки1{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_1;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_1 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_1)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_1)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_1 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_1 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки1   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 2               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки2{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_2;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_2 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_2)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_2)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_2 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_2 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки2   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 3               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки3{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_3;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_3 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_3)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_3)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_3 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_3 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки3   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 4               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки4{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_4;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_4 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_4)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_4)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_4 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_4 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки4   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 5               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки5{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_5;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_5 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_5)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_5)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_5 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_5 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки5   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 6               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки6{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_6;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_6 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_6)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_6)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_6 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_6 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки6   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 7               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки7{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_7;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_7 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_7)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_7)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_7 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_7 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }
}   /* конец ПРОЦ КонтрольСтыковки7   */


/*==============================================*/
/*=          КОНТРОЛЬ СТЫКОВКИ 8               =*/
/*=          643.АЭ1610.10000 Д2.0             =*/
/*==============================================*/
ПРОЦ КонтрольСтыковки8{
 ИЗ ПРОЦ Инициализация  К_СТЫКОВКИ_8;

 СОСТ Начало {
      ЕСЛИ (К_СТЫКОВКИ_8 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
      ИНАЧЕ                В СОСТ НетСтыковки;
 }

 СОСТ ЕстьСтыковка{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_ЕСТЬ_СТЫК_8)) 	В СОСТ ОжиданиеРазрываСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }

 СОСТ НетСтыковки{
      ЕСЛИ (SendMsgPIVCode(ПК_ПИВ_НЕТ_СТЫКА_8)) 	В СОСТ ОжиданиеВосстановленияСтыка;
      ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ В СОСТ НарушениеСвязи;
 }
 СОСТ ОжиданиеРазрываСтыка {
      ЕСЛИ (К_СТЫКОВКИ_8 == НЕТ_СТЫКОВКИ) В СОСТ НетСтыковки;
 }
 СОСТ ОжиданиеВосстановленияСтыка {
      ЕСЛИ (К_СТЫКОВКИ_8 == ЕСТЬ_СТЫКОВКА) В СОСТ ЕстьСтыковка;
 }
/*= НЕНОРМАЛЬНЫЕ СИТУАЦИИ: ================*/
 СОСТ НарушениеСвязи {
    В СОСТ Начало;
 }

}   /* конец ПРОЦ КонтрольСтыковки8   */


/************************************************/
/* ТЕСТОВЫЕ ПРОЦЕССЫ  */

ПРОЦ ТЕСТ1{
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВКЛЮЧЕН)) СТОП;

    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
}

ПРОЦ ТЕСТ2{
 СОСТ Начало{
    ЕСЛИ (SendMsgPIVCode(РЕГ_VзР_ВЫКЛЮЧЕН)) СТОП;
    ТАЙМАУТ ТАЙМАУТ_НА_СВЯЗЬ_С_ПИВ СТОП;
 }
}


/*================================================*/
/*==                                            ==*/
/*==        ЗАПИСЬ_ДАННЫХ_В_ЦАП                 ==*/
/*=          643.АЭ1610.10000 Д2.0+              =*/
/*==                                            ==*/
/*================================================*/
ПРОЦ ЗАПИСЬ_ДАННЫХ_В_ЦАП{
ИЗ ПРОЦ Инициализация ЗД_Qгаза,
                      ЗД_Iптд;
 СОСТ Начало{
      PutDAC(НОМЕР_КАНАЛА_ЦАП_ЗД_Iптд, ЗД_Iптд );
      PutDAC(НОМЕР_КАНАЛА_ЦАП_ЗД_Qгаза, ЗД_Qгаза);
      DAC();
      ЗАЦИКЛИТЬ;
 }
} /* Конец процесса ЗАПИСЬ_ДАННЫХ_В_ЦАП  */


/**************************************************/

} /* КОНЕЦ ПРОГРАММЫ */
