<?xml version="1.0"?>
<program>
	<identifier>HandDryerController</identifier>
	<tact>100</tact>
	<const_spec>
		<identifier>ON</identifier>
		<const_term>1</const_term>
	</const_spec>
	<const_spec>
		<identifier>OFF</identifier>
		<const_term>0</const_term>
	</const_spec>
	<const_spec>
		<identifier>OPEN</identifier>
		<const_term>1</const_term>
	</const_spec>
    <const_spec>
		<identifier>CLOSE</identifier>
		<const_term>0</const_term>
	</const_spec>
    <const_spec>
		<identifier>ONE_SEC</identifier>
		<const_term>100</const_term>
	</const_spec>
        <const_spec>
		<identifier>ONE_MIN</identifier>
		<const_term>60*ONE_SEK</const_term>
	</const_spec>
	<register_def>
		<direction_spec>INPUT</direction_spec>
		<identifier>LOG_INPUT</identifier>
		<reg_addr>0</reg_addr>
		<reg_addr>0</reg_addr>
		<reg_size>8</reg_size>
	</register_def>
	<register_def>
		<direction_spec>OUTPUT</direction_spec>
		<identifier>LOG_OUTPUT</identifier>
		<reg_addr>1</reg_addr>
		<reg_addr>0</reg_addr>
		<reg_size>8</reg_size>
	</register_def>
	<proc_def>
		<proc_id>Init</proc_id>
		<var_list>
			<var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>K_BUTTON_START</identifier>
					<reg_bits_spec_list>
							<identifier>LOG_INPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
			<var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>K_DOOR</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_INPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
			<var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>K_BUTTON_CHANGE_TIME</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_INPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
            <var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>K_BUTTON_HOUR</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_INPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
            <var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>Y_WARM</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_OUTPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
            <var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>Y_LAMP</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_OUTPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
            <var_def>
				<phys_var_def>
					<type_spec>LOG</type_spec>
					<identifier>Y_ALARM</identifier>
					<reg_bits_spec_list>
						<identifier>LOG_OUTPUT[1]</identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
            <var_def>
				<phys_var_def>
					<type_spec>LONG</type_spec>
					<identifier>COOK_TIME</identifier>
					<reg_bits_spec_list>
						<identifier></identifier>
					</reg_bits_spec_list>
				</phys_var_def>
				<scope_spec>FOR ALL</scope_spec>
			</var_def>
		</var_list>
		<state_def>
			<state_id>Start</state_id>
			<statements_list>
				<expression_statement>Y_WARM = OFF</expression_statement>
                <expression_statement>Y_LAMP = OFF</expression_statement>
                <expression_statement>Y_ALARM = OFF</expression_statement>
                <expression_statement>COOK_TIME = 0</expression_statement>
                <activity_expressions>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>Start_Button_Controle</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>Cooking</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>Lights_alarm</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>Clocks</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>Display_work</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>ChangeTimeButtonControle</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>START</activity>
                        <proc_id>HourButtonControle</proc_id>
                    </activity_def>
                    <activity_def>
                        <activity>STOP</activity>
                        <proc_id></proc_id>
                    </activity_def>
                </activity_expressions>
            </statements_list>
        </state_def>
    </proc_def>
    <proc_def>
		<proc_id>Start_Button_Controle</proc_id>
		<var_list>
			<var_input>
				<from_proc>Init</from_proc> 
                <identifier>K_BUTTON_START</identifier>
				<identifier>COOK_TIME</identifier>
			</var_input>
		</var_list>
		<state_def>
			<state_id>PressControl</state_id>
			<statements_list>
				<if_statement>
					<expression_list>
						<expression>K_BUTTON_START == ON</expression>
					</expression_list>
					<compound_statement>
						<statements_list>
							<expression_statement>COOK_TIME += ONE_MIN</expression_statement>
							<next_statement>NEXT</next_statement>
						</statements_list>
					</compound_statement>
				</if_statement>
			</statements_list>
		</state_def>
		<state_def>
			<state_id>PauseOnButtonBounce</state_id>
			<timeout_statement>
				<int_constant>ONE_SEK</int_constant>
				<state_transition>PressControl</state_transition>
			</timeout_statement>
		</state_def>
	</proc_def>
    <proc_def>
		<proc_id>Lights_alarm</proc_id>
		<var_list>
			<var_input>
				<from_proc>Init</from_proc> 
                <identifier>K_DOOR</identifier>
				<identifier>Y_WARM</identifier>
                <identifier>Y_LAMP</identifier>
			</var_input>
		</var_list>
		<state_def>
			<state_id>TermControleForStart</state_id>
			<statements_list>
				<if_statement>
					<expression_list>
						<expression>K_DOOR == OPEN</expression>
                        <binary_operator>||</binary_operator>
						<expression>Y_WARM == ON</expression>
					</expression_list>
					<compound_statement>
						<statements_list>
							<expression_statement>Y_LAMP = ON</expression_statement>
						</statements_list>
					</compound_statement>
                    <expression_else>
						<statements_list>
                            <expression_statement>Y_LAMP = OFF</expression_statement>
						</statements_list>
					</expression_else>
				</if_statement>
                <next_statement>LOOP</next_statement>
			</statements_list>
		</state_def>
	</proc_def>
</program>
