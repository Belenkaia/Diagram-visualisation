ПРОГР Микроволновка                                 {          
ТАКТ 10; /* период активизации равен 10 миллисекундам */
/*###########################################################*/
/*######### ОПИСАНИЕ КОНСТАНТ ############################*/
/*###########################################################*/
КОНСТ ВКЛ 1;
КОНСТ ВЫКЛ 0;
КОНСТ ОТКР 1;
КОНСТ ЗАКР 0;
КОНСТ ОДНА_СЕКУНДА 100;
КОНСТ ОДНА_МИНУТА 60*ОДНА_СЕКУНДА;
/*===========================================================*/
/*========= БАЗОВЫЕ АДРЕСА МОДУЛЕЙ УСО ===================*/
/*===========================================================*/
КОНСТ BA_FPGA1_U1 0XA110; /* ВХОД */
КОНСТ BA_FPGA3_U1 0XA910; /* ВЫХОД */


/*######## ОПИСАНИЕ РЕГИСТРОВ МОДУЛЕЙ УСО #########*/
/*###########################################################*/
ВХОД ЛОГ_ВХОДЫ BA_FPGA1_U1 0 8; /* имя, базовый адрес, № Регистра, 8бит */
ВЫХОД ЛОГ_ВЫХОДЫ BA_FPGA3_U1 0 8;
/*###########################################################*/
/*######## ПРОЦЕССЫ #########################*/
/*###########################################################*/
/*
* Процесс Инициализация. Служит для
* развертывания программы. Этот процесс (описанный
* первым) -- единственно активный процесс по запуску.
* Процесс Инициализация содержит описание
* переменных для ссылок из других
* процессов. Это удобно: описания локализованы в одном
* месте.
*/
ПРОЦ Инициализация{ /* просто все инициализирует и запускает три процесса */

	/* ВХОДНЫЕ СИГНАЛЫ: */
	ЛОГ К_КНОПКА_ПУСКА = {ЛОГ_ВХОДЫ[1]} ДЛЯ ВСЕХ;
	ЛОГ К_ДВЕРЦА = {ЛОГ_ВХОДЫ[1]} ДЛЯ ВСЕХ;
	ЛОГ К_КНОПКА_ИЗМЕНИТЬ_ВРЕМЯ = {ЛОГ_ВХОДЫ[1]} ДЛЯ ВСЕХ;
	ЛОГ К_КНОПКА_ЧАС = {ЛОГ_ВХОДЫ[1]} ДЛЯ ВСЕХ;
	
	/* ВЫХОДНЫЕ СИГНАЛЫ (т.к. привязаны к модулю выходов): */
	ЛОГ У_РАЗОГРЕВ = {ЛОГ_ВЫХОДЫ[1]} ДЛЯ ВСЕХ;
	ЛОГ У_ЛАМПА = {ЛОГ_ВЫХОДЫ[1]} ДЛЯ ВСЕХ;
	ЛОГ У_ЗВОНОК = {ЛОГ_ВЫХОДЫ[1]} ДЛЯ ВСЕХ; 
	ДЦЕЛ ВремяГотовки ДЛЯ ВСЕХ;

	СОСТ Начало
	{
		У_РАЗОГРЕВ = ВЫКЛ;
		У_ЛАМПА = ВЫКЛ;
		У_ЗВОНОК = ВЫКЛ;
		ВремяГотовки = 0;
		СТАРТ ПРОЦ КонтрольКнопкиПуска;
		СТАРТ ПРОЦ Разогрев;
		СТАРТ ПРОЦ СветоваяСигнализация;
		СТАРТ ПРОЦ Часы;
		СТАРТ ПРОЦ РаботаСДисплеем;
		СТАРТ ПРОЦ КонтрольКнопкиИзменитьВремя;
		СТАРТ ПРОЦ КонтрольКнопкиЧас;
		СТОП;
	}
}



ПРОЦ КонтрольКнопкиПуска { /* при нажатии кнопки пуска
							увеличивает время готовки */
	ИЗ ПРОЦ Инициализация К_КНОПКА_ПУСКА, ВремяГотовки;

	СОСТ КонтрольНажатия
	{
		ЕСЛИ (К_КНОПКА_ПУСКА == ВКЛ) 
		{
			ВремяГотовки += ОДНА_МИНУТА;
			В СЛЕДУЮЩЕЕ;
		}
	}

	СОСТ ПаузаНаДребезгКнопки
	{
		ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ КонтрольНажатия;
	}
}


ПРОЦ Разогрев{ /* готовит, если дверца закрыта и время ненулевое,
					если открывается дверца - выключает нагреватель,
					если приготовил - звуковой сигнал 1 сек */
	ИЗ ПРОЦ Инициализация К_ДВЕРЦА, У_ЗВОНОК,
						У_РАЗОГРЕВ, ВремяГотовки;
	
	СОСТ Начало
	{
		ЕСЛИ (К_ДВЕРЦА = ОТКР)
		{
			ВремяГотовки = 0;
		} ИНАЧЕ 
		{
			ЕСЛИ (ВремяГотовки != 0)
			{
				У_РАЗОГРЕВ = ВКЛ;
				В СЛЕДУЮЩЕЕ;
			}
		}
	}
	
	СОСТ Разогрев
	{
		ЕСЛИ (К_ДВЕРЦА != ОТКР)
		{
			У_РАЗОГРЕВ = ВЫКЛ; 
			В СОСТ ОжиданиеЗакрытияДверцы;
		}
		ТАЙМАУТ ВремяГотовки 
		{
			У_РАЗОГРЕВ = ВЫКЛ;
			В СЛЕДУЮЩЕЕ;
		}
	}

	СОСТ ЗвуковойСигнал 
	{ /* можно выделить в процесс, а можно и так */
		У_ЗВОНОК = ВКЛ;
		ВремяГотовки = 0;
		ТАЙМАУТ ОДНА_СЕКУНДА 
		{
			У_ЗВОНОК = ВЫКЛ;
			В СОСТ Начало;
		}
	}

	СОСТ ОжиданиеЗакрытияДверцы
	{
		ЕСЛИ (ВремяГотовки == 0)
			В СОСТ Начало;
		ИНАЧЕ
		ЕСЛИ (К_ДВЕРЦА != ОТКР)
		{
			У_РАЗОГРЕВ = ВКЛ;
			В СОСТ Разогрев;
		}
		ИНАЧЕ В СОСТ ОжиданиеЗакрытияДверцы;
		ТАЙМАУТ 30 * ОДНА_МИНУТА 
		{
			ВремяГотовки = 0;
			В СОСТ Начало;
		}
	}


}
ПРОЦ СветоваяСигнализация { /*зажигает и гасит лампочку, когда
								это требуется */
	ИЗ ПРОЦ Инициализация К_ДВЕРЦА, У_РАЗОГРЕВ, У_ЛАМПА;

	СОСТ КонтрольУсловийВключения
	{
		ЕСЛИ ((К_ДВЕРЦА == ОТКР) || (У_РАЗОГРЕВ == ВКЛ))
			У_ЛАМПА = ВКЛ;
		ИНАЧЕ
			У_ЛАМПА = ВЫКЛ;
		ЗАЦИКЛИТЬ;
	}
}

ПРОЦ Часы
{
	ДЦЕЛ Время ДЛЯ ВСЕХ;
	
	СОСТ Инициализация
	{
		Время = 0;
		В СОСТ Часы;
	}
	СОСТ Часы
	{
		В СОСТ ПрибавитьМинуту;
	}
	СОСТ ПрибавитьМинуту
	{
		ТАЙМАУТ ОДНА_МИНУТА {
			Время += ОДНА_МИНУТА;
			В СОСТ Часы;
		}
	}
}


ПРОЦ РаботаСДисплеем
{
	ИЗ ПРОЦ Инициализация ВремяГотовки;
	ИЗ ПРОЦ Часы Время;
	ДЦЕЛ ВременноеТабло ДЛЯ ВСЕХ;	
	
	СОСТ Начало
	{
	  ВременноеТабло = Время;
	  В СОСТ ДисплейЧасов;
	}
	СОСТ ДисплейЧасов
   {
	ЕСЛИ (ВремяГотовки == 0){
		ВременноеТабло = Время;
	}
	ИНАЧЕ 
	{
			ВременноеТабло = ВремяГотовки;
	}
	ЗАЦИКЛИТЬ;
	}
}

ПРОЦ КонтрольКнопкиИзменитьВремя { /* при нажатии кнопки пуска
									увеличивает время на 1 мин */
	ИЗ ПРОЦ Инициализация К_КНОПКА_ИЗМЕНИТЬ_ВРЕМЯ;
	ИЗ ПРОЦ Часы Время;

	СОСТ КонтрольНажатия
	{
		ЕСЛИ (К_КНОПКА_ИЗМЕНИТЬ_ВРЕМЯ == ВКЛ) 
		{
			Время += ОДНА_МИНУТА;
			В СЛЕДУЮЩЕЕ;
		}
	}
	
	СОСТ ПаузаНаДребезгКнопки
	{
		ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ КонтрольНажатия;
	}
}

ПРОЦ КонтрольКнопкиЧас { /* при нажатии кнопки пуска
						увеличивает время на 1 час */
	ИЗ ПРОЦ Инициализация К_КНОПКА_ЧАС;
	ИЗ ПРОЦ Часы Время;

	СОСТ КонтрольНажатия{
		ЕСЛИ (К_КНОПКА_ЧАС == ВКЛ) 
		{
			Время += ОДНА_МИНУТА * 60;
			В СЛЕДУЮЩЕЕ;
		}
	}

	СОСТ ПаузаНаДребезгКнопки
	{
		ТАЙМАУТ ОДНА_СЕКУНДА В СОСТ КонтрольНажатия;
	}
}
}